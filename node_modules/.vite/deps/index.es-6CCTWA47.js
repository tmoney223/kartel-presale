import {
  detect,
  esm_exports,
  f,
  formatJsonRpcError,
  formatJsonRpcRequest,
  formatJsonRpcResult,
  getBigIntRpcId,
  init_es,
  init_esm,
  init_esm2,
  isJsonRpcError,
  isJsonRpcRequest,
  isJsonRpcResponse,
  isJsonRpcResult,
  isLocalhostUrl,
  isWsUrl,
  parseConnectionError,
  r,
  require_cjs,
  require_cjs2,
  require_decode_uri_component,
  require_filter_obj,
  require_split_on_first,
  require_strict_uri_encode,
  safeJsonParse,
  safeJsonStringify
} from "./chunk-UNXEVL7J.js";
import {
  require_events
} from "./chunk-HK67DIC5.js";
import {
  __commonJS,
  __esm,
  __export,
  __require,
  __toCommonJS,
  __toESM
} from "./chunk-W7S2ME4R.js";

// node_modules/@stablelib/int/lib/int.js
var require_int = __commonJS({
  "node_modules/@stablelib/int/lib/int.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function imulShim(a2, b6) {
      var ah = a2 >>> 16 & 65535, al = a2 & 65535;
      var bh = b6 >>> 16 & 65535, bl = b6 & 65535;
      return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
    }
    exports.mul = Math.imul || imulShim;
    function add(a2, b6) {
      return a2 + b6 | 0;
    }
    exports.add = add;
    function sub(a2, b6) {
      return a2 - b6 | 0;
    }
    exports.sub = sub;
    function rotl(x5, n3) {
      return x5 << n3 | x5 >>> 32 - n3;
    }
    exports.rotl = rotl;
    function rotr(x5, n3) {
      return x5 << 32 - n3 | x5 >>> n3;
    }
    exports.rotr = rotr;
    function isIntegerShim(n3) {
      return typeof n3 === "number" && isFinite(n3) && Math.floor(n3) === n3;
    }
    exports.isInteger = Number.isInteger || isIntegerShim;
    exports.MAX_SAFE_INTEGER = 9007199254740991;
    exports.isSafeInteger = function(n3) {
      return exports.isInteger(n3) && (n3 >= -exports.MAX_SAFE_INTEGER && n3 <= exports.MAX_SAFE_INTEGER);
    };
  }
});

// node_modules/@stablelib/binary/lib/binary.js
var require_binary = __commonJS({
  "node_modules/@stablelib/binary/lib/binary.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var int_1 = require_int();
    function readInt16BE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      return (array[offset + 0] << 8 | array[offset + 1]) << 16 >> 16;
    }
    exports.readInt16BE = readInt16BE;
    function readUint16BE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      return (array[offset + 0] << 8 | array[offset + 1]) >>> 0;
    }
    exports.readUint16BE = readUint16BE;
    function readInt16LE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      return (array[offset + 1] << 8 | array[offset]) << 16 >> 16;
    }
    exports.readInt16LE = readInt16LE;
    function readUint16LE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      return (array[offset + 1] << 8 | array[offset]) >>> 0;
    }
    exports.readUint16LE = readUint16LE;
    function writeUint16BE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(2);
      }
      if (offset === void 0) {
        offset = 0;
      }
      out[offset + 0] = value >>> 8;
      out[offset + 1] = value >>> 0;
      return out;
    }
    exports.writeUint16BE = writeUint16BE;
    exports.writeInt16BE = writeUint16BE;
    function writeUint16LE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(2);
      }
      if (offset === void 0) {
        offset = 0;
      }
      out[offset + 0] = value >>> 0;
      out[offset + 1] = value >>> 8;
      return out;
    }
    exports.writeUint16LE = writeUint16LE;
    exports.writeInt16LE = writeUint16LE;
    function readInt32BE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      return array[offset] << 24 | array[offset + 1] << 16 | array[offset + 2] << 8 | array[offset + 3];
    }
    exports.readInt32BE = readInt32BE;
    function readUint32BE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      return (array[offset] << 24 | array[offset + 1] << 16 | array[offset + 2] << 8 | array[offset + 3]) >>> 0;
    }
    exports.readUint32BE = readUint32BE;
    function readInt32LE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      return array[offset + 3] << 24 | array[offset + 2] << 16 | array[offset + 1] << 8 | array[offset];
    }
    exports.readInt32LE = readInt32LE;
    function readUint32LE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      return (array[offset + 3] << 24 | array[offset + 2] << 16 | array[offset + 1] << 8 | array[offset]) >>> 0;
    }
    exports.readUint32LE = readUint32LE;
    function writeUint32BE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(4);
      }
      if (offset === void 0) {
        offset = 0;
      }
      out[offset + 0] = value >>> 24;
      out[offset + 1] = value >>> 16;
      out[offset + 2] = value >>> 8;
      out[offset + 3] = value >>> 0;
      return out;
    }
    exports.writeUint32BE = writeUint32BE;
    exports.writeInt32BE = writeUint32BE;
    function writeUint32LE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(4);
      }
      if (offset === void 0) {
        offset = 0;
      }
      out[offset + 0] = value >>> 0;
      out[offset + 1] = value >>> 8;
      out[offset + 2] = value >>> 16;
      out[offset + 3] = value >>> 24;
      return out;
    }
    exports.writeUint32LE = writeUint32LE;
    exports.writeInt32LE = writeUint32LE;
    function readInt64BE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      var hi = readInt32BE(array, offset);
      var lo2 = readInt32BE(array, offset + 4);
      return hi * 4294967296 + lo2 - (lo2 >> 31) * 4294967296;
    }
    exports.readInt64BE = readInt64BE;
    function readUint64BE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      var hi = readUint32BE(array, offset);
      var lo2 = readUint32BE(array, offset + 4);
      return hi * 4294967296 + lo2;
    }
    exports.readUint64BE = readUint64BE;
    function readInt64LE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      var lo2 = readInt32LE(array, offset);
      var hi = readInt32LE(array, offset + 4);
      return hi * 4294967296 + lo2 - (lo2 >> 31) * 4294967296;
    }
    exports.readInt64LE = readInt64LE;
    function readUint64LE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      var lo2 = readUint32LE(array, offset);
      var hi = readUint32LE(array, offset + 4);
      return hi * 4294967296 + lo2;
    }
    exports.readUint64LE = readUint64LE;
    function writeUint64BE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(8);
      }
      if (offset === void 0) {
        offset = 0;
      }
      writeUint32BE(value / 4294967296 >>> 0, out, offset);
      writeUint32BE(value >>> 0, out, offset + 4);
      return out;
    }
    exports.writeUint64BE = writeUint64BE;
    exports.writeInt64BE = writeUint64BE;
    function writeUint64LE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(8);
      }
      if (offset === void 0) {
        offset = 0;
      }
      writeUint32LE(value >>> 0, out, offset);
      writeUint32LE(value / 4294967296 >>> 0, out, offset + 4);
      return out;
    }
    exports.writeUint64LE = writeUint64LE;
    exports.writeInt64LE = writeUint64LE;
    function readUintBE(bitLength, array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      if (bitLength % 8 !== 0) {
        throw new Error("readUintBE supports only bitLengths divisible by 8");
      }
      if (bitLength / 8 > array.length - offset) {
        throw new Error("readUintBE: array is too short for the given bitLength");
      }
      var result = 0;
      var mul = 1;
      for (var i3 = bitLength / 8 + offset - 1; i3 >= offset; i3--) {
        result += array[i3] * mul;
        mul *= 256;
      }
      return result;
    }
    exports.readUintBE = readUintBE;
    function readUintLE(bitLength, array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      if (bitLength % 8 !== 0) {
        throw new Error("readUintLE supports only bitLengths divisible by 8");
      }
      if (bitLength / 8 > array.length - offset) {
        throw new Error("readUintLE: array is too short for the given bitLength");
      }
      var result = 0;
      var mul = 1;
      for (var i3 = offset; i3 < offset + bitLength / 8; i3++) {
        result += array[i3] * mul;
        mul *= 256;
      }
      return result;
    }
    exports.readUintLE = readUintLE;
    function writeUintBE(bitLength, value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(bitLength / 8);
      }
      if (offset === void 0) {
        offset = 0;
      }
      if (bitLength % 8 !== 0) {
        throw new Error("writeUintBE supports only bitLengths divisible by 8");
      }
      if (!int_1.isSafeInteger(value)) {
        throw new Error("writeUintBE value must be an integer");
      }
      var div = 1;
      for (var i3 = bitLength / 8 + offset - 1; i3 >= offset; i3--) {
        out[i3] = value / div & 255;
        div *= 256;
      }
      return out;
    }
    exports.writeUintBE = writeUintBE;
    function writeUintLE(bitLength, value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(bitLength / 8);
      }
      if (offset === void 0) {
        offset = 0;
      }
      if (bitLength % 8 !== 0) {
        throw new Error("writeUintLE supports only bitLengths divisible by 8");
      }
      if (!int_1.isSafeInteger(value)) {
        throw new Error("writeUintLE value must be an integer");
      }
      var div = 1;
      for (var i3 = offset; i3 < offset + bitLength / 8; i3++) {
        out[i3] = value / div & 255;
        div *= 256;
      }
      return out;
    }
    exports.writeUintLE = writeUintLE;
    function readFloat32BE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      var view = new DataView(array.buffer, array.byteOffset, array.byteLength);
      return view.getFloat32(offset);
    }
    exports.readFloat32BE = readFloat32BE;
    function readFloat32LE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      var view = new DataView(array.buffer, array.byteOffset, array.byteLength);
      return view.getFloat32(offset, true);
    }
    exports.readFloat32LE = readFloat32LE;
    function readFloat64BE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      var view = new DataView(array.buffer, array.byteOffset, array.byteLength);
      return view.getFloat64(offset);
    }
    exports.readFloat64BE = readFloat64BE;
    function readFloat64LE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      var view = new DataView(array.buffer, array.byteOffset, array.byteLength);
      return view.getFloat64(offset, true);
    }
    exports.readFloat64LE = readFloat64LE;
    function writeFloat32BE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(4);
      }
      if (offset === void 0) {
        offset = 0;
      }
      var view = new DataView(out.buffer, out.byteOffset, out.byteLength);
      view.setFloat32(offset, value);
      return out;
    }
    exports.writeFloat32BE = writeFloat32BE;
    function writeFloat32LE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(4);
      }
      if (offset === void 0) {
        offset = 0;
      }
      var view = new DataView(out.buffer, out.byteOffset, out.byteLength);
      view.setFloat32(offset, value, true);
      return out;
    }
    exports.writeFloat32LE = writeFloat32LE;
    function writeFloat64BE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(8);
      }
      if (offset === void 0) {
        offset = 0;
      }
      var view = new DataView(out.buffer, out.byteOffset, out.byteLength);
      view.setFloat64(offset, value);
      return out;
    }
    exports.writeFloat64BE = writeFloat64BE;
    function writeFloat64LE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(8);
      }
      if (offset === void 0) {
        offset = 0;
      }
      var view = new DataView(out.buffer, out.byteOffset, out.byteLength);
      view.setFloat64(offset, value, true);
      return out;
    }
    exports.writeFloat64LE = writeFloat64LE;
  }
});

// node_modules/@stablelib/wipe/lib/wipe.js
var require_wipe = __commonJS({
  "node_modules/@stablelib/wipe/lib/wipe.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function wipe(array) {
      for (var i3 = 0; i3 < array.length; i3++) {
        array[i3] = 0;
      }
      return array;
    }
    exports.wipe = wipe;
  }
});

// node_modules/@stablelib/chacha/lib/chacha.js
var require_chacha = __commonJS({
  "node_modules/@stablelib/chacha/lib/chacha.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var binary_1 = require_binary();
    var wipe_1 = require_wipe();
    var ROUNDS = 20;
    function core(out, input, key) {
      var j0 = 1634760805;
      var j1 = 857760878;
      var j22 = 2036477234;
      var j32 = 1797285236;
      var j42 = key[3] << 24 | key[2] << 16 | key[1] << 8 | key[0];
      var j52 = key[7] << 24 | key[6] << 16 | key[5] << 8 | key[4];
      var j62 = key[11] << 24 | key[10] << 16 | key[9] << 8 | key[8];
      var j7 = key[15] << 24 | key[14] << 16 | key[13] << 8 | key[12];
      var j8 = key[19] << 24 | key[18] << 16 | key[17] << 8 | key[16];
      var j9 = key[23] << 24 | key[22] << 16 | key[21] << 8 | key[20];
      var j10 = key[27] << 24 | key[26] << 16 | key[25] << 8 | key[24];
      var j11 = key[31] << 24 | key[30] << 16 | key[29] << 8 | key[28];
      var j12 = input[3] << 24 | input[2] << 16 | input[1] << 8 | input[0];
      var j13 = input[7] << 24 | input[6] << 16 | input[5] << 8 | input[4];
      var j14 = input[11] << 24 | input[10] << 16 | input[9] << 8 | input[8];
      var j15 = input[15] << 24 | input[14] << 16 | input[13] << 8 | input[12];
      var x0 = j0;
      var x1 = j1;
      var x22 = j22;
      var x32 = j32;
      var x42 = j42;
      var x5 = j52;
      var x6 = j62;
      var x7 = j7;
      var x8 = j8;
      var x9 = j9;
      var x10 = j10;
      var x11 = j11;
      var x12 = j12;
      var x13 = j13;
      var x14 = j14;
      var x15 = j15;
      for (var i3 = 0; i3 < ROUNDS; i3 += 2) {
        x0 = x0 + x42 | 0;
        x12 ^= x0;
        x12 = x12 >>> 32 - 16 | x12 << 16;
        x8 = x8 + x12 | 0;
        x42 ^= x8;
        x42 = x42 >>> 32 - 12 | x42 << 12;
        x1 = x1 + x5 | 0;
        x13 ^= x1;
        x13 = x13 >>> 32 - 16 | x13 << 16;
        x9 = x9 + x13 | 0;
        x5 ^= x9;
        x5 = x5 >>> 32 - 12 | x5 << 12;
        x22 = x22 + x6 | 0;
        x14 ^= x22;
        x14 = x14 >>> 32 - 16 | x14 << 16;
        x10 = x10 + x14 | 0;
        x6 ^= x10;
        x6 = x6 >>> 32 - 12 | x6 << 12;
        x32 = x32 + x7 | 0;
        x15 ^= x32;
        x15 = x15 >>> 32 - 16 | x15 << 16;
        x11 = x11 + x15 | 0;
        x7 ^= x11;
        x7 = x7 >>> 32 - 12 | x7 << 12;
        x22 = x22 + x6 | 0;
        x14 ^= x22;
        x14 = x14 >>> 32 - 8 | x14 << 8;
        x10 = x10 + x14 | 0;
        x6 ^= x10;
        x6 = x6 >>> 32 - 7 | x6 << 7;
        x32 = x32 + x7 | 0;
        x15 ^= x32;
        x15 = x15 >>> 32 - 8 | x15 << 8;
        x11 = x11 + x15 | 0;
        x7 ^= x11;
        x7 = x7 >>> 32 - 7 | x7 << 7;
        x1 = x1 + x5 | 0;
        x13 ^= x1;
        x13 = x13 >>> 32 - 8 | x13 << 8;
        x9 = x9 + x13 | 0;
        x5 ^= x9;
        x5 = x5 >>> 32 - 7 | x5 << 7;
        x0 = x0 + x42 | 0;
        x12 ^= x0;
        x12 = x12 >>> 32 - 8 | x12 << 8;
        x8 = x8 + x12 | 0;
        x42 ^= x8;
        x42 = x42 >>> 32 - 7 | x42 << 7;
        x0 = x0 + x5 | 0;
        x15 ^= x0;
        x15 = x15 >>> 32 - 16 | x15 << 16;
        x10 = x10 + x15 | 0;
        x5 ^= x10;
        x5 = x5 >>> 32 - 12 | x5 << 12;
        x1 = x1 + x6 | 0;
        x12 ^= x1;
        x12 = x12 >>> 32 - 16 | x12 << 16;
        x11 = x11 + x12 | 0;
        x6 ^= x11;
        x6 = x6 >>> 32 - 12 | x6 << 12;
        x22 = x22 + x7 | 0;
        x13 ^= x22;
        x13 = x13 >>> 32 - 16 | x13 << 16;
        x8 = x8 + x13 | 0;
        x7 ^= x8;
        x7 = x7 >>> 32 - 12 | x7 << 12;
        x32 = x32 + x42 | 0;
        x14 ^= x32;
        x14 = x14 >>> 32 - 16 | x14 << 16;
        x9 = x9 + x14 | 0;
        x42 ^= x9;
        x42 = x42 >>> 32 - 12 | x42 << 12;
        x22 = x22 + x7 | 0;
        x13 ^= x22;
        x13 = x13 >>> 32 - 8 | x13 << 8;
        x8 = x8 + x13 | 0;
        x7 ^= x8;
        x7 = x7 >>> 32 - 7 | x7 << 7;
        x32 = x32 + x42 | 0;
        x14 ^= x32;
        x14 = x14 >>> 32 - 8 | x14 << 8;
        x9 = x9 + x14 | 0;
        x42 ^= x9;
        x42 = x42 >>> 32 - 7 | x42 << 7;
        x1 = x1 + x6 | 0;
        x12 ^= x1;
        x12 = x12 >>> 32 - 8 | x12 << 8;
        x11 = x11 + x12 | 0;
        x6 ^= x11;
        x6 = x6 >>> 32 - 7 | x6 << 7;
        x0 = x0 + x5 | 0;
        x15 ^= x0;
        x15 = x15 >>> 32 - 8 | x15 << 8;
        x10 = x10 + x15 | 0;
        x5 ^= x10;
        x5 = x5 >>> 32 - 7 | x5 << 7;
      }
      binary_1.writeUint32LE(x0 + j0 | 0, out, 0);
      binary_1.writeUint32LE(x1 + j1 | 0, out, 4);
      binary_1.writeUint32LE(x22 + j22 | 0, out, 8);
      binary_1.writeUint32LE(x32 + j32 | 0, out, 12);
      binary_1.writeUint32LE(x42 + j42 | 0, out, 16);
      binary_1.writeUint32LE(x5 + j52 | 0, out, 20);
      binary_1.writeUint32LE(x6 + j62 | 0, out, 24);
      binary_1.writeUint32LE(x7 + j7 | 0, out, 28);
      binary_1.writeUint32LE(x8 + j8 | 0, out, 32);
      binary_1.writeUint32LE(x9 + j9 | 0, out, 36);
      binary_1.writeUint32LE(x10 + j10 | 0, out, 40);
      binary_1.writeUint32LE(x11 + j11 | 0, out, 44);
      binary_1.writeUint32LE(x12 + j12 | 0, out, 48);
      binary_1.writeUint32LE(x13 + j13 | 0, out, 52);
      binary_1.writeUint32LE(x14 + j14 | 0, out, 56);
      binary_1.writeUint32LE(x15 + j15 | 0, out, 60);
    }
    function streamXOR(key, nonce, src2, dst, nonceInplaceCounterLength) {
      if (nonceInplaceCounterLength === void 0) {
        nonceInplaceCounterLength = 0;
      }
      if (key.length !== 32) {
        throw new Error("ChaCha: key size must be 32 bytes");
      }
      if (dst.length < src2.length) {
        throw new Error("ChaCha: destination is shorter than source");
      }
      var nc;
      var counterLength;
      if (nonceInplaceCounterLength === 0) {
        if (nonce.length !== 8 && nonce.length !== 12) {
          throw new Error("ChaCha nonce must be 8 or 12 bytes");
        }
        nc = new Uint8Array(16);
        counterLength = nc.length - nonce.length;
        nc.set(nonce, counterLength);
      } else {
        if (nonce.length !== 16) {
          throw new Error("ChaCha nonce with counter must be 16 bytes");
        }
        nc = nonce;
        counterLength = nonceInplaceCounterLength;
      }
      var block = new Uint8Array(64);
      for (var i3 = 0; i3 < src2.length; i3 += 64) {
        core(block, nc, key);
        for (var j7 = i3; j7 < i3 + 64 && j7 < src2.length; j7++) {
          dst[j7] = src2[j7] ^ block[j7 - i3];
        }
        incrementCounter(nc, 0, counterLength);
      }
      wipe_1.wipe(block);
      if (nonceInplaceCounterLength === 0) {
        wipe_1.wipe(nc);
      }
      return dst;
    }
    exports.streamXOR = streamXOR;
    function stream(key, nonce, dst, nonceInplaceCounterLength) {
      if (nonceInplaceCounterLength === void 0) {
        nonceInplaceCounterLength = 0;
      }
      wipe_1.wipe(dst);
      return streamXOR(key, nonce, dst, dst, nonceInplaceCounterLength);
    }
    exports.stream = stream;
    function incrementCounter(counter, pos, len) {
      var carry = 1;
      while (len--) {
        carry = carry + (counter[pos] & 255) | 0;
        counter[pos] = carry & 255;
        carry >>>= 8;
        pos++;
      }
      if (carry > 0) {
        throw new Error("ChaCha: counter overflow");
      }
    }
  }
});

// node_modules/@stablelib/constant-time/lib/constant-time.js
var require_constant_time = __commonJS({
  "node_modules/@stablelib/constant-time/lib/constant-time.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function select(subject, resultIfOne, resultIfZero) {
      return ~(subject - 1) & resultIfOne | subject - 1 & resultIfZero;
    }
    exports.select = select;
    function lessOrEqual(a2, b6) {
      return (a2 | 0) - (b6 | 0) - 1 >>> 31 & 1;
    }
    exports.lessOrEqual = lessOrEqual;
    function compare2(a2, b6) {
      if (a2.length !== b6.length) {
        return 0;
      }
      var result = 0;
      for (var i3 = 0; i3 < a2.length; i3++) {
        result |= a2[i3] ^ b6[i3];
      }
      return 1 & result - 1 >>> 8;
    }
    exports.compare = compare2;
    function equal(a2, b6) {
      if (a2.length === 0 || b6.length === 0) {
        return false;
      }
      return compare2(a2, b6) !== 0;
    }
    exports.equal = equal;
  }
});

// node_modules/@stablelib/poly1305/lib/poly1305.js
var require_poly1305 = __commonJS({
  "node_modules/@stablelib/poly1305/lib/poly1305.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var constant_time_1 = require_constant_time();
    var wipe_1 = require_wipe();
    exports.DIGEST_LENGTH = 16;
    var Poly1305 = (
      /** @class */
      function() {
        function Poly13052(key) {
          this.digestLength = exports.DIGEST_LENGTH;
          this._buffer = new Uint8Array(16);
          this._r = new Uint16Array(10);
          this._h = new Uint16Array(10);
          this._pad = new Uint16Array(8);
          this._leftover = 0;
          this._fin = 0;
          this._finished = false;
          var t0 = key[0] | key[1] << 8;
          this._r[0] = t0 & 8191;
          var t1 = key[2] | key[3] << 8;
          this._r[1] = (t0 >>> 13 | t1 << 3) & 8191;
          var t2 = key[4] | key[5] << 8;
          this._r[2] = (t1 >>> 10 | t2 << 6) & 7939;
          var t3 = key[6] | key[7] << 8;
          this._r[3] = (t2 >>> 7 | t3 << 9) & 8191;
          var t4 = key[8] | key[9] << 8;
          this._r[4] = (t3 >>> 4 | t4 << 12) & 255;
          this._r[5] = t4 >>> 1 & 8190;
          var t5 = key[10] | key[11] << 8;
          this._r[6] = (t4 >>> 14 | t5 << 2) & 8191;
          var t6 = key[12] | key[13] << 8;
          this._r[7] = (t5 >>> 11 | t6 << 5) & 8065;
          var t7 = key[14] | key[15] << 8;
          this._r[8] = (t6 >>> 8 | t7 << 8) & 8191;
          this._r[9] = t7 >>> 5 & 127;
          this._pad[0] = key[16] | key[17] << 8;
          this._pad[1] = key[18] | key[19] << 8;
          this._pad[2] = key[20] | key[21] << 8;
          this._pad[3] = key[22] | key[23] << 8;
          this._pad[4] = key[24] | key[25] << 8;
          this._pad[5] = key[26] | key[27] << 8;
          this._pad[6] = key[28] | key[29] << 8;
          this._pad[7] = key[30] | key[31] << 8;
        }
        Poly13052.prototype._blocks = function(m3, mpos, bytes) {
          var hibit = this._fin ? 0 : 1 << 11;
          var h0 = this._h[0], h1 = this._h[1], h22 = this._h[2], h32 = this._h[3], h4 = this._h[4], h5 = this._h[5], h6 = this._h[6], h7 = this._h[7], h8 = this._h[8], h9 = this._h[9];
          var r0 = this._r[0], r1 = this._r[1], r2 = this._r[2], r3 = this._r[3], r4 = this._r[4], r5 = this._r[5], r6 = this._r[6], r7 = this._r[7], r8 = this._r[8], r9 = this._r[9];
          while (bytes >= 16) {
            var t0 = m3[mpos + 0] | m3[mpos + 1] << 8;
            h0 += t0 & 8191;
            var t1 = m3[mpos + 2] | m3[mpos + 3] << 8;
            h1 += (t0 >>> 13 | t1 << 3) & 8191;
            var t2 = m3[mpos + 4] | m3[mpos + 5] << 8;
            h22 += (t1 >>> 10 | t2 << 6) & 8191;
            var t3 = m3[mpos + 6] | m3[mpos + 7] << 8;
            h32 += (t2 >>> 7 | t3 << 9) & 8191;
            var t4 = m3[mpos + 8] | m3[mpos + 9] << 8;
            h4 += (t3 >>> 4 | t4 << 12) & 8191;
            h5 += t4 >>> 1 & 8191;
            var t5 = m3[mpos + 10] | m3[mpos + 11] << 8;
            h6 += (t4 >>> 14 | t5 << 2) & 8191;
            var t6 = m3[mpos + 12] | m3[mpos + 13] << 8;
            h7 += (t5 >>> 11 | t6 << 5) & 8191;
            var t7 = m3[mpos + 14] | m3[mpos + 15] << 8;
            h8 += (t6 >>> 8 | t7 << 8) & 8191;
            h9 += t7 >>> 5 | hibit;
            var c4 = 0;
            var d0 = c4;
            d0 += h0 * r0;
            d0 += h1 * (5 * r9);
            d0 += h22 * (5 * r8);
            d0 += h32 * (5 * r7);
            d0 += h4 * (5 * r6);
            c4 = d0 >>> 13;
            d0 &= 8191;
            d0 += h5 * (5 * r5);
            d0 += h6 * (5 * r4);
            d0 += h7 * (5 * r3);
            d0 += h8 * (5 * r2);
            d0 += h9 * (5 * r1);
            c4 += d0 >>> 13;
            d0 &= 8191;
            var d1 = c4;
            d1 += h0 * r1;
            d1 += h1 * r0;
            d1 += h22 * (5 * r9);
            d1 += h32 * (5 * r8);
            d1 += h4 * (5 * r7);
            c4 = d1 >>> 13;
            d1 &= 8191;
            d1 += h5 * (5 * r6);
            d1 += h6 * (5 * r5);
            d1 += h7 * (5 * r4);
            d1 += h8 * (5 * r3);
            d1 += h9 * (5 * r2);
            c4 += d1 >>> 13;
            d1 &= 8191;
            var d22 = c4;
            d22 += h0 * r2;
            d22 += h1 * r1;
            d22 += h22 * r0;
            d22 += h32 * (5 * r9);
            d22 += h4 * (5 * r8);
            c4 = d22 >>> 13;
            d22 &= 8191;
            d22 += h5 * (5 * r7);
            d22 += h6 * (5 * r6);
            d22 += h7 * (5 * r5);
            d22 += h8 * (5 * r4);
            d22 += h9 * (5 * r3);
            c4 += d22 >>> 13;
            d22 &= 8191;
            var d3 = c4;
            d3 += h0 * r3;
            d3 += h1 * r2;
            d3 += h22 * r1;
            d3 += h32 * r0;
            d3 += h4 * (5 * r9);
            c4 = d3 >>> 13;
            d3 &= 8191;
            d3 += h5 * (5 * r8);
            d3 += h6 * (5 * r7);
            d3 += h7 * (5 * r6);
            d3 += h8 * (5 * r5);
            d3 += h9 * (5 * r4);
            c4 += d3 >>> 13;
            d3 &= 8191;
            var d4 = c4;
            d4 += h0 * r4;
            d4 += h1 * r3;
            d4 += h22 * r2;
            d4 += h32 * r1;
            d4 += h4 * r0;
            c4 = d4 >>> 13;
            d4 &= 8191;
            d4 += h5 * (5 * r9);
            d4 += h6 * (5 * r8);
            d4 += h7 * (5 * r7);
            d4 += h8 * (5 * r6);
            d4 += h9 * (5 * r5);
            c4 += d4 >>> 13;
            d4 &= 8191;
            var d5 = c4;
            d5 += h0 * r5;
            d5 += h1 * r4;
            d5 += h22 * r3;
            d5 += h32 * r2;
            d5 += h4 * r1;
            c4 = d5 >>> 13;
            d5 &= 8191;
            d5 += h5 * r0;
            d5 += h6 * (5 * r9);
            d5 += h7 * (5 * r8);
            d5 += h8 * (5 * r7);
            d5 += h9 * (5 * r6);
            c4 += d5 >>> 13;
            d5 &= 8191;
            var d6 = c4;
            d6 += h0 * r6;
            d6 += h1 * r5;
            d6 += h22 * r4;
            d6 += h32 * r3;
            d6 += h4 * r2;
            c4 = d6 >>> 13;
            d6 &= 8191;
            d6 += h5 * r1;
            d6 += h6 * r0;
            d6 += h7 * (5 * r9);
            d6 += h8 * (5 * r8);
            d6 += h9 * (5 * r7);
            c4 += d6 >>> 13;
            d6 &= 8191;
            var d7 = c4;
            d7 += h0 * r7;
            d7 += h1 * r6;
            d7 += h22 * r5;
            d7 += h32 * r4;
            d7 += h4 * r3;
            c4 = d7 >>> 13;
            d7 &= 8191;
            d7 += h5 * r2;
            d7 += h6 * r1;
            d7 += h7 * r0;
            d7 += h8 * (5 * r9);
            d7 += h9 * (5 * r8);
            c4 += d7 >>> 13;
            d7 &= 8191;
            var d8 = c4;
            d8 += h0 * r8;
            d8 += h1 * r7;
            d8 += h22 * r6;
            d8 += h32 * r5;
            d8 += h4 * r4;
            c4 = d8 >>> 13;
            d8 &= 8191;
            d8 += h5 * r3;
            d8 += h6 * r2;
            d8 += h7 * r1;
            d8 += h8 * r0;
            d8 += h9 * (5 * r9);
            c4 += d8 >>> 13;
            d8 &= 8191;
            var d9 = c4;
            d9 += h0 * r9;
            d9 += h1 * r8;
            d9 += h22 * r7;
            d9 += h32 * r6;
            d9 += h4 * r5;
            c4 = d9 >>> 13;
            d9 &= 8191;
            d9 += h5 * r4;
            d9 += h6 * r3;
            d9 += h7 * r2;
            d9 += h8 * r1;
            d9 += h9 * r0;
            c4 += d9 >>> 13;
            d9 &= 8191;
            c4 = (c4 << 2) + c4 | 0;
            c4 = c4 + d0 | 0;
            d0 = c4 & 8191;
            c4 = c4 >>> 13;
            d1 += c4;
            h0 = d0;
            h1 = d1;
            h22 = d22;
            h32 = d3;
            h4 = d4;
            h5 = d5;
            h6 = d6;
            h7 = d7;
            h8 = d8;
            h9 = d9;
            mpos += 16;
            bytes -= 16;
          }
          this._h[0] = h0;
          this._h[1] = h1;
          this._h[2] = h22;
          this._h[3] = h32;
          this._h[4] = h4;
          this._h[5] = h5;
          this._h[6] = h6;
          this._h[7] = h7;
          this._h[8] = h8;
          this._h[9] = h9;
        };
        Poly13052.prototype.finish = function(mac, macpos) {
          if (macpos === void 0) {
            macpos = 0;
          }
          var g5 = new Uint16Array(10);
          var c4;
          var mask;
          var f5;
          var i3;
          if (this._leftover) {
            i3 = this._leftover;
            this._buffer[i3++] = 1;
            for (; i3 < 16; i3++) {
              this._buffer[i3] = 0;
            }
            this._fin = 1;
            this._blocks(this._buffer, 0, 16);
          }
          c4 = this._h[1] >>> 13;
          this._h[1] &= 8191;
          for (i3 = 2; i3 < 10; i3++) {
            this._h[i3] += c4;
            c4 = this._h[i3] >>> 13;
            this._h[i3] &= 8191;
          }
          this._h[0] += c4 * 5;
          c4 = this._h[0] >>> 13;
          this._h[0] &= 8191;
          this._h[1] += c4;
          c4 = this._h[1] >>> 13;
          this._h[1] &= 8191;
          this._h[2] += c4;
          g5[0] = this._h[0] + 5;
          c4 = g5[0] >>> 13;
          g5[0] &= 8191;
          for (i3 = 1; i3 < 10; i3++) {
            g5[i3] = this._h[i3] + c4;
            c4 = g5[i3] >>> 13;
            g5[i3] &= 8191;
          }
          g5[9] -= 1 << 13;
          mask = (c4 ^ 1) - 1;
          for (i3 = 0; i3 < 10; i3++) {
            g5[i3] &= mask;
          }
          mask = ~mask;
          for (i3 = 0; i3 < 10; i3++) {
            this._h[i3] = this._h[i3] & mask | g5[i3];
          }
          this._h[0] = (this._h[0] | this._h[1] << 13) & 65535;
          this._h[1] = (this._h[1] >>> 3 | this._h[2] << 10) & 65535;
          this._h[2] = (this._h[2] >>> 6 | this._h[3] << 7) & 65535;
          this._h[3] = (this._h[3] >>> 9 | this._h[4] << 4) & 65535;
          this._h[4] = (this._h[4] >>> 12 | this._h[5] << 1 | this._h[6] << 14) & 65535;
          this._h[5] = (this._h[6] >>> 2 | this._h[7] << 11) & 65535;
          this._h[6] = (this._h[7] >>> 5 | this._h[8] << 8) & 65535;
          this._h[7] = (this._h[8] >>> 8 | this._h[9] << 5) & 65535;
          f5 = this._h[0] + this._pad[0];
          this._h[0] = f5 & 65535;
          for (i3 = 1; i3 < 8; i3++) {
            f5 = (this._h[i3] + this._pad[i3] | 0) + (f5 >>> 16) | 0;
            this._h[i3] = f5 & 65535;
          }
          mac[macpos + 0] = this._h[0] >>> 0;
          mac[macpos + 1] = this._h[0] >>> 8;
          mac[macpos + 2] = this._h[1] >>> 0;
          mac[macpos + 3] = this._h[1] >>> 8;
          mac[macpos + 4] = this._h[2] >>> 0;
          mac[macpos + 5] = this._h[2] >>> 8;
          mac[macpos + 6] = this._h[3] >>> 0;
          mac[macpos + 7] = this._h[3] >>> 8;
          mac[macpos + 8] = this._h[4] >>> 0;
          mac[macpos + 9] = this._h[4] >>> 8;
          mac[macpos + 10] = this._h[5] >>> 0;
          mac[macpos + 11] = this._h[5] >>> 8;
          mac[macpos + 12] = this._h[6] >>> 0;
          mac[macpos + 13] = this._h[6] >>> 8;
          mac[macpos + 14] = this._h[7] >>> 0;
          mac[macpos + 15] = this._h[7] >>> 8;
          this._finished = true;
          return this;
        };
        Poly13052.prototype.update = function(m3) {
          var mpos = 0;
          var bytes = m3.length;
          var want;
          if (this._leftover) {
            want = 16 - this._leftover;
            if (want > bytes) {
              want = bytes;
            }
            for (var i3 = 0; i3 < want; i3++) {
              this._buffer[this._leftover + i3] = m3[mpos + i3];
            }
            bytes -= want;
            mpos += want;
            this._leftover += want;
            if (this._leftover < 16) {
              return this;
            }
            this._blocks(this._buffer, 0, 16);
            this._leftover = 0;
          }
          if (bytes >= 16) {
            want = bytes - bytes % 16;
            this._blocks(m3, mpos, want);
            mpos += want;
            bytes -= want;
          }
          if (bytes) {
            for (var i3 = 0; i3 < bytes; i3++) {
              this._buffer[this._leftover + i3] = m3[mpos + i3];
            }
            this._leftover += bytes;
          }
          return this;
        };
        Poly13052.prototype.digest = function() {
          if (this._finished) {
            throw new Error("Poly1305 was finished");
          }
          var mac = new Uint8Array(16);
          this.finish(mac);
          return mac;
        };
        Poly13052.prototype.clean = function() {
          wipe_1.wipe(this._buffer);
          wipe_1.wipe(this._r);
          wipe_1.wipe(this._h);
          wipe_1.wipe(this._pad);
          this._leftover = 0;
          this._fin = 0;
          this._finished = true;
          return this;
        };
        return Poly13052;
      }()
    );
    exports.Poly1305 = Poly1305;
    function oneTimeAuth(key, data) {
      var h4 = new Poly1305(key);
      h4.update(data);
      var digest2 = h4.digest();
      h4.clean();
      return digest2;
    }
    exports.oneTimeAuth = oneTimeAuth;
    function equal(a2, b6) {
      if (a2.length !== exports.DIGEST_LENGTH || b6.length !== exports.DIGEST_LENGTH) {
        return false;
      }
      return constant_time_1.equal(a2, b6);
    }
    exports.equal = equal;
  }
});

// node_modules/@stablelib/chacha20poly1305/lib/chacha20poly1305.js
var require_chacha20poly1305 = __commonJS({
  "node_modules/@stablelib/chacha20poly1305/lib/chacha20poly1305.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var chacha_1 = require_chacha();
    var poly1305_1 = require_poly1305();
    var wipe_1 = require_wipe();
    var binary_1 = require_binary();
    var constant_time_1 = require_constant_time();
    exports.KEY_LENGTH = 32;
    exports.NONCE_LENGTH = 12;
    exports.TAG_LENGTH = 16;
    var ZEROS = new Uint8Array(16);
    var ChaCha20Poly1305 = (
      /** @class */
      function() {
        function ChaCha20Poly13052(key) {
          this.nonceLength = exports.NONCE_LENGTH;
          this.tagLength = exports.TAG_LENGTH;
          if (key.length !== exports.KEY_LENGTH) {
            throw new Error("ChaCha20Poly1305 needs 32-byte key");
          }
          this._key = new Uint8Array(key);
        }
        ChaCha20Poly13052.prototype.seal = function(nonce, plaintext, associatedData, dst) {
          if (nonce.length > 16) {
            throw new Error("ChaCha20Poly1305: incorrect nonce length");
          }
          var counter = new Uint8Array(16);
          counter.set(nonce, counter.length - nonce.length);
          var authKey = new Uint8Array(32);
          chacha_1.stream(this._key, counter, authKey, 4);
          var resultLength = plaintext.length + this.tagLength;
          var result;
          if (dst) {
            if (dst.length !== resultLength) {
              throw new Error("ChaCha20Poly1305: incorrect destination length");
            }
            result = dst;
          } else {
            result = new Uint8Array(resultLength);
          }
          chacha_1.streamXOR(this._key, counter, plaintext, result, 4);
          this._authenticate(result.subarray(result.length - this.tagLength, result.length), authKey, result.subarray(0, result.length - this.tagLength), associatedData);
          wipe_1.wipe(counter);
          return result;
        };
        ChaCha20Poly13052.prototype.open = function(nonce, sealed, associatedData, dst) {
          if (nonce.length > 16) {
            throw new Error("ChaCha20Poly1305: incorrect nonce length");
          }
          if (sealed.length < this.tagLength) {
            return null;
          }
          var counter = new Uint8Array(16);
          counter.set(nonce, counter.length - nonce.length);
          var authKey = new Uint8Array(32);
          chacha_1.stream(this._key, counter, authKey, 4);
          var calculatedTag = new Uint8Array(this.tagLength);
          this._authenticate(calculatedTag, authKey, sealed.subarray(0, sealed.length - this.tagLength), associatedData);
          if (!constant_time_1.equal(calculatedTag, sealed.subarray(sealed.length - this.tagLength, sealed.length))) {
            return null;
          }
          var resultLength = sealed.length - this.tagLength;
          var result;
          if (dst) {
            if (dst.length !== resultLength) {
              throw new Error("ChaCha20Poly1305: incorrect destination length");
            }
            result = dst;
          } else {
            result = new Uint8Array(resultLength);
          }
          chacha_1.streamXOR(this._key, counter, sealed.subarray(0, sealed.length - this.tagLength), result, 4);
          wipe_1.wipe(counter);
          return result;
        };
        ChaCha20Poly13052.prototype.clean = function() {
          wipe_1.wipe(this._key);
          return this;
        };
        ChaCha20Poly13052.prototype._authenticate = function(tagOut, authKey, ciphertext, associatedData) {
          var h4 = new poly1305_1.Poly1305(authKey);
          if (associatedData) {
            h4.update(associatedData);
            if (associatedData.length % 16 > 0) {
              h4.update(ZEROS.subarray(associatedData.length % 16));
            }
          }
          h4.update(ciphertext);
          if (ciphertext.length % 16 > 0) {
            h4.update(ZEROS.subarray(ciphertext.length % 16));
          }
          var length2 = new Uint8Array(8);
          if (associatedData) {
            binary_1.writeUint64LE(associatedData.length, length2);
          }
          h4.update(length2);
          binary_1.writeUint64LE(ciphertext.length, length2);
          h4.update(length2);
          var tag = h4.digest();
          for (var i3 = 0; i3 < tag.length; i3++) {
            tagOut[i3] = tag[i3];
          }
          h4.clean();
          wipe_1.wipe(tag);
          wipe_1.wipe(length2);
        };
        return ChaCha20Poly13052;
      }()
    );
    exports.ChaCha20Poly1305 = ChaCha20Poly1305;
  }
});

// node_modules/@stablelib/hash/lib/hash.js
var require_hash = __commonJS({
  "node_modules/@stablelib/hash/lib/hash.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function isSerializableHash(h4) {
      return typeof h4.saveState !== "undefined" && typeof h4.restoreState !== "undefined" && typeof h4.cleanSavedState !== "undefined";
    }
    exports.isSerializableHash = isSerializableHash;
  }
});

// node_modules/@stablelib/hmac/lib/hmac.js
var require_hmac = __commonJS({
  "node_modules/@stablelib/hmac/lib/hmac.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var hash_1 = require_hash();
    var constant_time_1 = require_constant_time();
    var wipe_1 = require_wipe();
    var HMAC = (
      /** @class */
      function() {
        function HMAC2(hash, key) {
          this._finished = false;
          this._inner = new hash();
          this._outer = new hash();
          this.blockSize = this._outer.blockSize;
          this.digestLength = this._outer.digestLength;
          var pad = new Uint8Array(this.blockSize);
          if (key.length > this.blockSize) {
            this._inner.update(key).finish(pad).clean();
          } else {
            pad.set(key);
          }
          for (var i3 = 0; i3 < pad.length; i3++) {
            pad[i3] ^= 54;
          }
          this._inner.update(pad);
          for (var i3 = 0; i3 < pad.length; i3++) {
            pad[i3] ^= 54 ^ 92;
          }
          this._outer.update(pad);
          if (hash_1.isSerializableHash(this._inner) && hash_1.isSerializableHash(this._outer)) {
            this._innerKeyedState = this._inner.saveState();
            this._outerKeyedState = this._outer.saveState();
          }
          wipe_1.wipe(pad);
        }
        HMAC2.prototype.reset = function() {
          if (!hash_1.isSerializableHash(this._inner) || !hash_1.isSerializableHash(this._outer)) {
            throw new Error("hmac: can't reset() because hash doesn't implement restoreState()");
          }
          this._inner.restoreState(this._innerKeyedState);
          this._outer.restoreState(this._outerKeyedState);
          this._finished = false;
          return this;
        };
        HMAC2.prototype.clean = function() {
          if (hash_1.isSerializableHash(this._inner)) {
            this._inner.cleanSavedState(this._innerKeyedState);
          }
          if (hash_1.isSerializableHash(this._outer)) {
            this._outer.cleanSavedState(this._outerKeyedState);
          }
          this._inner.clean();
          this._outer.clean();
        };
        HMAC2.prototype.update = function(data) {
          this._inner.update(data);
          return this;
        };
        HMAC2.prototype.finish = function(out) {
          if (this._finished) {
            this._outer.finish(out);
            return this;
          }
          this._inner.finish(out);
          this._outer.update(out.subarray(0, this.digestLength)).finish(out);
          this._finished = true;
          return this;
        };
        HMAC2.prototype.digest = function() {
          var out = new Uint8Array(this.digestLength);
          this.finish(out);
          return out;
        };
        HMAC2.prototype.saveState = function() {
          if (!hash_1.isSerializableHash(this._inner)) {
            throw new Error("hmac: can't saveState() because hash doesn't implement it");
          }
          return this._inner.saveState();
        };
        HMAC2.prototype.restoreState = function(savedState) {
          if (!hash_1.isSerializableHash(this._inner) || !hash_1.isSerializableHash(this._outer)) {
            throw new Error("hmac: can't restoreState() because hash doesn't implement it");
          }
          this._inner.restoreState(savedState);
          this._outer.restoreState(this._outerKeyedState);
          this._finished = false;
          return this;
        };
        HMAC2.prototype.cleanSavedState = function(savedState) {
          if (!hash_1.isSerializableHash(this._inner)) {
            throw new Error("hmac: can't cleanSavedState() because hash doesn't implement it");
          }
          this._inner.cleanSavedState(savedState);
        };
        return HMAC2;
      }()
    );
    exports.HMAC = HMAC;
    function hmac(hash, key, data) {
      var h4 = new HMAC(hash, key);
      h4.update(data);
      var digest2 = h4.digest();
      h4.clean();
      return digest2;
    }
    exports.hmac = hmac;
    exports.equal = constant_time_1.equal;
  }
});

// node_modules/@stablelib/hkdf/lib/hkdf.js
var require_hkdf = __commonJS({
  "node_modules/@stablelib/hkdf/lib/hkdf.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var hmac_1 = require_hmac();
    var wipe_1 = require_wipe();
    var HKDF = (
      /** @class */
      function() {
        function HKDF2(hash, key, salt, info) {
          if (salt === void 0) {
            salt = new Uint8Array(0);
          }
          this._counter = new Uint8Array(1);
          this._hash = hash;
          this._info = info;
          var okm = hmac_1.hmac(this._hash, salt, key);
          this._hmac = new hmac_1.HMAC(hash, okm);
          this._buffer = new Uint8Array(this._hmac.digestLength);
          this._bufpos = this._buffer.length;
        }
        HKDF2.prototype._fillBuffer = function() {
          this._counter[0]++;
          var ctr = this._counter[0];
          if (ctr === 0) {
            throw new Error("hkdf: cannot expand more");
          }
          this._hmac.reset();
          if (ctr > 1) {
            this._hmac.update(this._buffer);
          }
          if (this._info) {
            this._hmac.update(this._info);
          }
          this._hmac.update(this._counter);
          this._hmac.finish(this._buffer);
          this._bufpos = 0;
        };
        HKDF2.prototype.expand = function(length2) {
          var out = new Uint8Array(length2);
          for (var i3 = 0; i3 < out.length; i3++) {
            if (this._bufpos === this._buffer.length) {
              this._fillBuffer();
            }
            out[i3] = this._buffer[this._bufpos++];
          }
          return out;
        };
        HKDF2.prototype.clean = function() {
          this._hmac.clean();
          wipe_1.wipe(this._buffer);
          wipe_1.wipe(this._counter);
          this._bufpos = 0;
        };
        return HKDF2;
      }()
    );
    exports.HKDF = HKDF;
  }
});

// node_modules/@stablelib/random/lib/source/browser.js
var require_browser = __commonJS({
  "node_modules/@stablelib/random/lib/source/browser.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.BrowserRandomSource = void 0;
    var QUOTA = 65536;
    var BrowserRandomSource = class {
      constructor() {
        this.isAvailable = false;
        this.isInstantiated = false;
        const browserCrypto = typeof self !== "undefined" ? self.crypto || self.msCrypto : null;
        if (browserCrypto && browserCrypto.getRandomValues !== void 0) {
          this._crypto = browserCrypto;
          this.isAvailable = true;
          this.isInstantiated = true;
        }
      }
      randomBytes(length2) {
        if (!this.isAvailable || !this._crypto) {
          throw new Error("Browser random byte generator is not available.");
        }
        const out = new Uint8Array(length2);
        for (let i3 = 0; i3 < out.length; i3 += QUOTA) {
          this._crypto.getRandomValues(out.subarray(i3, i3 + Math.min(out.length - i3, QUOTA)));
        }
        return out;
      }
    };
    exports.BrowserRandomSource = BrowserRandomSource;
  }
});

// browser-external:crypto
var require_crypto = __commonJS({
  "browser-external:crypto"(exports, module) {
    module.exports = Object.create(new Proxy({}, {
      get(_5, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "crypto" has been externalized for browser compatibility. Cannot access "crypto.${key}" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// node_modules/@stablelib/random/lib/source/node.js
var require_node = __commonJS({
  "node_modules/@stablelib/random/lib/source/node.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.NodeRandomSource = void 0;
    var wipe_1 = require_wipe();
    var NodeRandomSource = class {
      constructor() {
        this.isAvailable = false;
        this.isInstantiated = false;
        if (typeof __require !== "undefined") {
          const nodeCrypto = require_crypto();
          if (nodeCrypto && nodeCrypto.randomBytes) {
            this._crypto = nodeCrypto;
            this.isAvailable = true;
            this.isInstantiated = true;
          }
        }
      }
      randomBytes(length2) {
        if (!this.isAvailable || !this._crypto) {
          throw new Error("Node.js random byte generator is not available.");
        }
        let buffer = this._crypto.randomBytes(length2);
        if (buffer.length !== length2) {
          throw new Error("NodeRandomSource: got fewer bytes than requested");
        }
        const out = new Uint8Array(length2);
        for (let i3 = 0; i3 < out.length; i3++) {
          out[i3] = buffer[i3];
        }
        (0, wipe_1.wipe)(buffer);
        return out;
      }
    };
    exports.NodeRandomSource = NodeRandomSource;
  }
});

// node_modules/@stablelib/random/lib/source/system.js
var require_system = __commonJS({
  "node_modules/@stablelib/random/lib/source/system.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SystemRandomSource = void 0;
    var browser_1 = require_browser();
    var node_1 = require_node();
    var SystemRandomSource = class {
      constructor() {
        this.isAvailable = false;
        this.name = "";
        this._source = new browser_1.BrowserRandomSource();
        if (this._source.isAvailable) {
          this.isAvailable = true;
          this.name = "Browser";
          return;
        }
        this._source = new node_1.NodeRandomSource();
        if (this._source.isAvailable) {
          this.isAvailable = true;
          this.name = "Node";
          return;
        }
      }
      randomBytes(length2) {
        if (!this.isAvailable) {
          throw new Error("System random byte generator is not available.");
        }
        return this._source.randomBytes(length2);
      }
    };
    exports.SystemRandomSource = SystemRandomSource;
  }
});

// node_modules/@stablelib/random/lib/random.js
var require_random = __commonJS({
  "node_modules/@stablelib/random/lib/random.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.randomStringForEntropy = exports.randomString = exports.randomUint32 = exports.randomBytes = exports.defaultRandomSource = void 0;
    var system_1 = require_system();
    var binary_1 = require_binary();
    var wipe_1 = require_wipe();
    exports.defaultRandomSource = new system_1.SystemRandomSource();
    function randomBytes(length2, prng = exports.defaultRandomSource) {
      return prng.randomBytes(length2);
    }
    exports.randomBytes = randomBytes;
    function randomUint32(prng = exports.defaultRandomSource) {
      const buf = randomBytes(4, prng);
      const result = (0, binary_1.readUint32LE)(buf);
      (0, wipe_1.wipe)(buf);
      return result;
    }
    exports.randomUint32 = randomUint32;
    var ALPHANUMERIC = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
    function randomString(length2, charset = ALPHANUMERIC, prng = exports.defaultRandomSource) {
      if (charset.length < 2) {
        throw new Error("randomString charset is too short");
      }
      if (charset.length > 256) {
        throw new Error("randomString charset is too long");
      }
      let out = "";
      const charsLen = charset.length;
      const maxByte = 256 - 256 % charsLen;
      while (length2 > 0) {
        const buf = randomBytes(Math.ceil(length2 * 256 / maxByte), prng);
        for (let i3 = 0; i3 < buf.length && length2 > 0; i3++) {
          const randomByte = buf[i3];
          if (randomByte < maxByte) {
            out += charset.charAt(randomByte % charsLen);
            length2--;
          }
        }
        (0, wipe_1.wipe)(buf);
      }
      return out;
    }
    exports.randomString = randomString;
    function randomStringForEntropy(bits, charset = ALPHANUMERIC, prng = exports.defaultRandomSource) {
      const length2 = Math.ceil(bits / (Math.log(charset.length) / Math.LN2));
      return randomString(length2, charset, prng);
    }
    exports.randomStringForEntropy = randomStringForEntropy;
  }
});

// node_modules/@stablelib/sha256/lib/sha256.js
var require_sha256 = __commonJS({
  "node_modules/@stablelib/sha256/lib/sha256.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var binary_1 = require_binary();
    var wipe_1 = require_wipe();
    exports.DIGEST_LENGTH = 32;
    exports.BLOCK_SIZE = 64;
    var SHA256 = (
      /** @class */
      function() {
        function SHA2562() {
          this.digestLength = exports.DIGEST_LENGTH;
          this.blockSize = exports.BLOCK_SIZE;
          this._state = new Int32Array(8);
          this._temp = new Int32Array(64);
          this._buffer = new Uint8Array(128);
          this._bufferLength = 0;
          this._bytesHashed = 0;
          this._finished = false;
          this.reset();
        }
        SHA2562.prototype._initState = function() {
          this._state[0] = 1779033703;
          this._state[1] = 3144134277;
          this._state[2] = 1013904242;
          this._state[3] = 2773480762;
          this._state[4] = 1359893119;
          this._state[5] = 2600822924;
          this._state[6] = 528734635;
          this._state[7] = 1541459225;
        };
        SHA2562.prototype.reset = function() {
          this._initState();
          this._bufferLength = 0;
          this._bytesHashed = 0;
          this._finished = false;
          return this;
        };
        SHA2562.prototype.clean = function() {
          wipe_1.wipe(this._buffer);
          wipe_1.wipe(this._temp);
          this.reset();
        };
        SHA2562.prototype.update = function(data, dataLength) {
          if (dataLength === void 0) {
            dataLength = data.length;
          }
          if (this._finished) {
            throw new Error("SHA256: can't update because hash was finished.");
          }
          var dataPos = 0;
          this._bytesHashed += dataLength;
          if (this._bufferLength > 0) {
            while (this._bufferLength < this.blockSize && dataLength > 0) {
              this._buffer[this._bufferLength++] = data[dataPos++];
              dataLength--;
            }
            if (this._bufferLength === this.blockSize) {
              hashBlocks(this._temp, this._state, this._buffer, 0, this.blockSize);
              this._bufferLength = 0;
            }
          }
          if (dataLength >= this.blockSize) {
            dataPos = hashBlocks(this._temp, this._state, data, dataPos, dataLength);
            dataLength %= this.blockSize;
          }
          while (dataLength > 0) {
            this._buffer[this._bufferLength++] = data[dataPos++];
            dataLength--;
          }
          return this;
        };
        SHA2562.prototype.finish = function(out) {
          if (!this._finished) {
            var bytesHashed = this._bytesHashed;
            var left = this._bufferLength;
            var bitLenHi = bytesHashed / 536870912 | 0;
            var bitLenLo = bytesHashed << 3;
            var padLength = bytesHashed % 64 < 56 ? 64 : 128;
            this._buffer[left] = 128;
            for (var i3 = left + 1; i3 < padLength - 8; i3++) {
              this._buffer[i3] = 0;
            }
            binary_1.writeUint32BE(bitLenHi, this._buffer, padLength - 8);
            binary_1.writeUint32BE(bitLenLo, this._buffer, padLength - 4);
            hashBlocks(this._temp, this._state, this._buffer, 0, padLength);
            this._finished = true;
          }
          for (var i3 = 0; i3 < this.digestLength / 4; i3++) {
            binary_1.writeUint32BE(this._state[i3], out, i3 * 4);
          }
          return this;
        };
        SHA2562.prototype.digest = function() {
          var out = new Uint8Array(this.digestLength);
          this.finish(out);
          return out;
        };
        SHA2562.prototype.saveState = function() {
          if (this._finished) {
            throw new Error("SHA256: cannot save finished state");
          }
          return {
            state: new Int32Array(this._state),
            buffer: this._bufferLength > 0 ? new Uint8Array(this._buffer) : void 0,
            bufferLength: this._bufferLength,
            bytesHashed: this._bytesHashed
          };
        };
        SHA2562.prototype.restoreState = function(savedState) {
          this._state.set(savedState.state);
          this._bufferLength = savedState.bufferLength;
          if (savedState.buffer) {
            this._buffer.set(savedState.buffer);
          }
          this._bytesHashed = savedState.bytesHashed;
          this._finished = false;
          return this;
        };
        SHA2562.prototype.cleanSavedState = function(savedState) {
          wipe_1.wipe(savedState.state);
          if (savedState.buffer) {
            wipe_1.wipe(savedState.buffer);
          }
          savedState.bufferLength = 0;
          savedState.bytesHashed = 0;
        };
        return SHA2562;
      }()
    );
    exports.SHA256 = SHA256;
    var K4 = new Int32Array([
      1116352408,
      1899447441,
      3049323471,
      3921009573,
      961987163,
      1508970993,
      2453635748,
      2870763221,
      3624381080,
      310598401,
      607225278,
      1426881987,
      1925078388,
      2162078206,
      2614888103,
      3248222580,
      3835390401,
      4022224774,
      264347078,
      604807628,
      770255983,
      1249150122,
      1555081692,
      1996064986,
      2554220882,
      2821834349,
      2952996808,
      3210313671,
      3336571891,
      3584528711,
      113926993,
      338241895,
      666307205,
      773529912,
      1294757372,
      1396182291,
      1695183700,
      1986661051,
      2177026350,
      2456956037,
      2730485921,
      2820302411,
      3259730800,
      3345764771,
      3516065817,
      3600352804,
      4094571909,
      275423344,
      430227734,
      506948616,
      659060556,
      883997877,
      958139571,
      1322822218,
      1537002063,
      1747873779,
      1955562222,
      2024104815,
      2227730452,
      2361852424,
      2428436474,
      2756734187,
      3204031479,
      3329325298
    ]);
    function hashBlocks(w5, v3, p5, pos, len) {
      while (len >= 64) {
        var a2 = v3[0];
        var b6 = v3[1];
        var c4 = v3[2];
        var d3 = v3[3];
        var e = v3[4];
        var f5 = v3[5];
        var g5 = v3[6];
        var h4 = v3[7];
        for (var i3 = 0; i3 < 16; i3++) {
          var j7 = pos + i3 * 4;
          w5[i3] = binary_1.readUint32BE(p5, j7);
        }
        for (var i3 = 16; i3 < 64; i3++) {
          var u4 = w5[i3 - 2];
          var t1 = (u4 >>> 17 | u4 << 32 - 17) ^ (u4 >>> 19 | u4 << 32 - 19) ^ u4 >>> 10;
          u4 = w5[i3 - 15];
          var t2 = (u4 >>> 7 | u4 << 32 - 7) ^ (u4 >>> 18 | u4 << 32 - 18) ^ u4 >>> 3;
          w5[i3] = (t1 + w5[i3 - 7] | 0) + (t2 + w5[i3 - 16] | 0);
        }
        for (var i3 = 0; i3 < 64; i3++) {
          var t1 = (((e >>> 6 | e << 32 - 6) ^ (e >>> 11 | e << 32 - 11) ^ (e >>> 25 | e << 32 - 25)) + (e & f5 ^ ~e & g5) | 0) + (h4 + (K4[i3] + w5[i3] | 0) | 0) | 0;
          var t2 = ((a2 >>> 2 | a2 << 32 - 2) ^ (a2 >>> 13 | a2 << 32 - 13) ^ (a2 >>> 22 | a2 << 32 - 22)) + (a2 & b6 ^ a2 & c4 ^ b6 & c4) | 0;
          h4 = g5;
          g5 = f5;
          f5 = e;
          e = d3 + t1 | 0;
          d3 = c4;
          c4 = b6;
          b6 = a2;
          a2 = t1 + t2 | 0;
        }
        v3[0] += a2;
        v3[1] += b6;
        v3[2] += c4;
        v3[3] += d3;
        v3[4] += e;
        v3[5] += f5;
        v3[6] += g5;
        v3[7] += h4;
        pos += 64;
        len -= 64;
      }
      return pos;
    }
    function hash(data) {
      var h4 = new SHA256();
      h4.update(data);
      var digest2 = h4.digest();
      h4.clean();
      return digest2;
    }
    exports.hash = hash;
  }
});

// node_modules/@stablelib/x25519/lib/x25519.js
var require_x25519 = __commonJS({
  "node_modules/@stablelib/x25519/lib/x25519.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.sharedKey = exports.generateKeyPair = exports.generateKeyPairFromSeed = exports.scalarMultBase = exports.scalarMult = exports.SHARED_KEY_LENGTH = exports.SECRET_KEY_LENGTH = exports.PUBLIC_KEY_LENGTH = void 0;
    var random_1 = require_random();
    var wipe_1 = require_wipe();
    exports.PUBLIC_KEY_LENGTH = 32;
    exports.SECRET_KEY_LENGTH = 32;
    exports.SHARED_KEY_LENGTH = 32;
    function gf(init) {
      const r2 = new Float64Array(16);
      if (init) {
        for (let i3 = 0; i3 < init.length; i3++) {
          r2[i3] = init[i3];
        }
      }
      return r2;
    }
    var _9 = new Uint8Array(32);
    _9[0] = 9;
    var _121665 = gf([56129, 1]);
    function car25519(o) {
      let c4 = 1;
      for (let i3 = 0; i3 < 16; i3++) {
        let v3 = o[i3] + c4 + 65535;
        c4 = Math.floor(v3 / 65536);
        o[i3] = v3 - c4 * 65536;
      }
      o[0] += c4 - 1 + 37 * (c4 - 1);
    }
    function sel25519(p5, q4, b6) {
      const c4 = ~(b6 - 1);
      for (let i3 = 0; i3 < 16; i3++) {
        const t = c4 & (p5[i3] ^ q4[i3]);
        p5[i3] ^= t;
        q4[i3] ^= t;
      }
    }
    function pack25519(o, n3) {
      const m3 = gf();
      const t = gf();
      for (let i3 = 0; i3 < 16; i3++) {
        t[i3] = n3[i3];
      }
      car25519(t);
      car25519(t);
      car25519(t);
      for (let j7 = 0; j7 < 2; j7++) {
        m3[0] = t[0] - 65517;
        for (let i3 = 1; i3 < 15; i3++) {
          m3[i3] = t[i3] - 65535 - (m3[i3 - 1] >> 16 & 1);
          m3[i3 - 1] &= 65535;
        }
        m3[15] = t[15] - 32767 - (m3[14] >> 16 & 1);
        const b6 = m3[15] >> 16 & 1;
        m3[14] &= 65535;
        sel25519(t, m3, 1 - b6);
      }
      for (let i3 = 0; i3 < 16; i3++) {
        o[2 * i3] = t[i3] & 255;
        o[2 * i3 + 1] = t[i3] >> 8;
      }
    }
    function unpack25519(o, n3) {
      for (let i3 = 0; i3 < 16; i3++) {
        o[i3] = n3[2 * i3] + (n3[2 * i3 + 1] << 8);
      }
      o[15] &= 32767;
    }
    function add(o, a2, b6) {
      for (let i3 = 0; i3 < 16; i3++) {
        o[i3] = a2[i3] + b6[i3];
      }
    }
    function sub(o, a2, b6) {
      for (let i3 = 0; i3 < 16; i3++) {
        o[i3] = a2[i3] - b6[i3];
      }
    }
    function mul(o, a2, b6) {
      let v3, c4, t0 = 0, t1 = 0, t2 = 0, t3 = 0, t4 = 0, t5 = 0, t6 = 0, t7 = 0, t8 = 0, t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0, t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0, t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0, b0 = b6[0], b1 = b6[1], b22 = b6[2], b32 = b6[3], b42 = b6[4], b52 = b6[5], b62 = b6[6], b7 = b6[7], b8 = b6[8], b9 = b6[9], b10 = b6[10], b11 = b6[11], b12 = b6[12], b13 = b6[13], b14 = b6[14], b15 = b6[15];
      v3 = a2[0];
      t0 += v3 * b0;
      t1 += v3 * b1;
      t2 += v3 * b22;
      t3 += v3 * b32;
      t4 += v3 * b42;
      t5 += v3 * b52;
      t6 += v3 * b62;
      t7 += v3 * b7;
      t8 += v3 * b8;
      t9 += v3 * b9;
      t10 += v3 * b10;
      t11 += v3 * b11;
      t12 += v3 * b12;
      t13 += v3 * b13;
      t14 += v3 * b14;
      t15 += v3 * b15;
      v3 = a2[1];
      t1 += v3 * b0;
      t2 += v3 * b1;
      t3 += v3 * b22;
      t4 += v3 * b32;
      t5 += v3 * b42;
      t6 += v3 * b52;
      t7 += v3 * b62;
      t8 += v3 * b7;
      t9 += v3 * b8;
      t10 += v3 * b9;
      t11 += v3 * b10;
      t12 += v3 * b11;
      t13 += v3 * b12;
      t14 += v3 * b13;
      t15 += v3 * b14;
      t16 += v3 * b15;
      v3 = a2[2];
      t2 += v3 * b0;
      t3 += v3 * b1;
      t4 += v3 * b22;
      t5 += v3 * b32;
      t6 += v3 * b42;
      t7 += v3 * b52;
      t8 += v3 * b62;
      t9 += v3 * b7;
      t10 += v3 * b8;
      t11 += v3 * b9;
      t12 += v3 * b10;
      t13 += v3 * b11;
      t14 += v3 * b12;
      t15 += v3 * b13;
      t16 += v3 * b14;
      t17 += v3 * b15;
      v3 = a2[3];
      t3 += v3 * b0;
      t4 += v3 * b1;
      t5 += v3 * b22;
      t6 += v3 * b32;
      t7 += v3 * b42;
      t8 += v3 * b52;
      t9 += v3 * b62;
      t10 += v3 * b7;
      t11 += v3 * b8;
      t12 += v3 * b9;
      t13 += v3 * b10;
      t14 += v3 * b11;
      t15 += v3 * b12;
      t16 += v3 * b13;
      t17 += v3 * b14;
      t18 += v3 * b15;
      v3 = a2[4];
      t4 += v3 * b0;
      t5 += v3 * b1;
      t6 += v3 * b22;
      t7 += v3 * b32;
      t8 += v3 * b42;
      t9 += v3 * b52;
      t10 += v3 * b62;
      t11 += v3 * b7;
      t12 += v3 * b8;
      t13 += v3 * b9;
      t14 += v3 * b10;
      t15 += v3 * b11;
      t16 += v3 * b12;
      t17 += v3 * b13;
      t18 += v3 * b14;
      t19 += v3 * b15;
      v3 = a2[5];
      t5 += v3 * b0;
      t6 += v3 * b1;
      t7 += v3 * b22;
      t8 += v3 * b32;
      t9 += v3 * b42;
      t10 += v3 * b52;
      t11 += v3 * b62;
      t12 += v3 * b7;
      t13 += v3 * b8;
      t14 += v3 * b9;
      t15 += v3 * b10;
      t16 += v3 * b11;
      t17 += v3 * b12;
      t18 += v3 * b13;
      t19 += v3 * b14;
      t20 += v3 * b15;
      v3 = a2[6];
      t6 += v3 * b0;
      t7 += v3 * b1;
      t8 += v3 * b22;
      t9 += v3 * b32;
      t10 += v3 * b42;
      t11 += v3 * b52;
      t12 += v3 * b62;
      t13 += v3 * b7;
      t14 += v3 * b8;
      t15 += v3 * b9;
      t16 += v3 * b10;
      t17 += v3 * b11;
      t18 += v3 * b12;
      t19 += v3 * b13;
      t20 += v3 * b14;
      t21 += v3 * b15;
      v3 = a2[7];
      t7 += v3 * b0;
      t8 += v3 * b1;
      t9 += v3 * b22;
      t10 += v3 * b32;
      t11 += v3 * b42;
      t12 += v3 * b52;
      t13 += v3 * b62;
      t14 += v3 * b7;
      t15 += v3 * b8;
      t16 += v3 * b9;
      t17 += v3 * b10;
      t18 += v3 * b11;
      t19 += v3 * b12;
      t20 += v3 * b13;
      t21 += v3 * b14;
      t22 += v3 * b15;
      v3 = a2[8];
      t8 += v3 * b0;
      t9 += v3 * b1;
      t10 += v3 * b22;
      t11 += v3 * b32;
      t12 += v3 * b42;
      t13 += v3 * b52;
      t14 += v3 * b62;
      t15 += v3 * b7;
      t16 += v3 * b8;
      t17 += v3 * b9;
      t18 += v3 * b10;
      t19 += v3 * b11;
      t20 += v3 * b12;
      t21 += v3 * b13;
      t22 += v3 * b14;
      t23 += v3 * b15;
      v3 = a2[9];
      t9 += v3 * b0;
      t10 += v3 * b1;
      t11 += v3 * b22;
      t12 += v3 * b32;
      t13 += v3 * b42;
      t14 += v3 * b52;
      t15 += v3 * b62;
      t16 += v3 * b7;
      t17 += v3 * b8;
      t18 += v3 * b9;
      t19 += v3 * b10;
      t20 += v3 * b11;
      t21 += v3 * b12;
      t22 += v3 * b13;
      t23 += v3 * b14;
      t24 += v3 * b15;
      v3 = a2[10];
      t10 += v3 * b0;
      t11 += v3 * b1;
      t12 += v3 * b22;
      t13 += v3 * b32;
      t14 += v3 * b42;
      t15 += v3 * b52;
      t16 += v3 * b62;
      t17 += v3 * b7;
      t18 += v3 * b8;
      t19 += v3 * b9;
      t20 += v3 * b10;
      t21 += v3 * b11;
      t22 += v3 * b12;
      t23 += v3 * b13;
      t24 += v3 * b14;
      t25 += v3 * b15;
      v3 = a2[11];
      t11 += v3 * b0;
      t12 += v3 * b1;
      t13 += v3 * b22;
      t14 += v3 * b32;
      t15 += v3 * b42;
      t16 += v3 * b52;
      t17 += v3 * b62;
      t18 += v3 * b7;
      t19 += v3 * b8;
      t20 += v3 * b9;
      t21 += v3 * b10;
      t22 += v3 * b11;
      t23 += v3 * b12;
      t24 += v3 * b13;
      t25 += v3 * b14;
      t26 += v3 * b15;
      v3 = a2[12];
      t12 += v3 * b0;
      t13 += v3 * b1;
      t14 += v3 * b22;
      t15 += v3 * b32;
      t16 += v3 * b42;
      t17 += v3 * b52;
      t18 += v3 * b62;
      t19 += v3 * b7;
      t20 += v3 * b8;
      t21 += v3 * b9;
      t22 += v3 * b10;
      t23 += v3 * b11;
      t24 += v3 * b12;
      t25 += v3 * b13;
      t26 += v3 * b14;
      t27 += v3 * b15;
      v3 = a2[13];
      t13 += v3 * b0;
      t14 += v3 * b1;
      t15 += v3 * b22;
      t16 += v3 * b32;
      t17 += v3 * b42;
      t18 += v3 * b52;
      t19 += v3 * b62;
      t20 += v3 * b7;
      t21 += v3 * b8;
      t22 += v3 * b9;
      t23 += v3 * b10;
      t24 += v3 * b11;
      t25 += v3 * b12;
      t26 += v3 * b13;
      t27 += v3 * b14;
      t28 += v3 * b15;
      v3 = a2[14];
      t14 += v3 * b0;
      t15 += v3 * b1;
      t16 += v3 * b22;
      t17 += v3 * b32;
      t18 += v3 * b42;
      t19 += v3 * b52;
      t20 += v3 * b62;
      t21 += v3 * b7;
      t22 += v3 * b8;
      t23 += v3 * b9;
      t24 += v3 * b10;
      t25 += v3 * b11;
      t26 += v3 * b12;
      t27 += v3 * b13;
      t28 += v3 * b14;
      t29 += v3 * b15;
      v3 = a2[15];
      t15 += v3 * b0;
      t16 += v3 * b1;
      t17 += v3 * b22;
      t18 += v3 * b32;
      t19 += v3 * b42;
      t20 += v3 * b52;
      t21 += v3 * b62;
      t22 += v3 * b7;
      t23 += v3 * b8;
      t24 += v3 * b9;
      t25 += v3 * b10;
      t26 += v3 * b11;
      t27 += v3 * b12;
      t28 += v3 * b13;
      t29 += v3 * b14;
      t30 += v3 * b15;
      t0 += 38 * t16;
      t1 += 38 * t17;
      t2 += 38 * t18;
      t3 += 38 * t19;
      t4 += 38 * t20;
      t5 += 38 * t21;
      t6 += 38 * t22;
      t7 += 38 * t23;
      t8 += 38 * t24;
      t9 += 38 * t25;
      t10 += 38 * t26;
      t11 += 38 * t27;
      t12 += 38 * t28;
      t13 += 38 * t29;
      t14 += 38 * t30;
      c4 = 1;
      v3 = t0 + c4 + 65535;
      c4 = Math.floor(v3 / 65536);
      t0 = v3 - c4 * 65536;
      v3 = t1 + c4 + 65535;
      c4 = Math.floor(v3 / 65536);
      t1 = v3 - c4 * 65536;
      v3 = t2 + c4 + 65535;
      c4 = Math.floor(v3 / 65536);
      t2 = v3 - c4 * 65536;
      v3 = t3 + c4 + 65535;
      c4 = Math.floor(v3 / 65536);
      t3 = v3 - c4 * 65536;
      v3 = t4 + c4 + 65535;
      c4 = Math.floor(v3 / 65536);
      t4 = v3 - c4 * 65536;
      v3 = t5 + c4 + 65535;
      c4 = Math.floor(v3 / 65536);
      t5 = v3 - c4 * 65536;
      v3 = t6 + c4 + 65535;
      c4 = Math.floor(v3 / 65536);
      t6 = v3 - c4 * 65536;
      v3 = t7 + c4 + 65535;
      c4 = Math.floor(v3 / 65536);
      t7 = v3 - c4 * 65536;
      v3 = t8 + c4 + 65535;
      c4 = Math.floor(v3 / 65536);
      t8 = v3 - c4 * 65536;
      v3 = t9 + c4 + 65535;
      c4 = Math.floor(v3 / 65536);
      t9 = v3 - c4 * 65536;
      v3 = t10 + c4 + 65535;
      c4 = Math.floor(v3 / 65536);
      t10 = v3 - c4 * 65536;
      v3 = t11 + c4 + 65535;
      c4 = Math.floor(v3 / 65536);
      t11 = v3 - c4 * 65536;
      v3 = t12 + c4 + 65535;
      c4 = Math.floor(v3 / 65536);
      t12 = v3 - c4 * 65536;
      v3 = t13 + c4 + 65535;
      c4 = Math.floor(v3 / 65536);
      t13 = v3 - c4 * 65536;
      v3 = t14 + c4 + 65535;
      c4 = Math.floor(v3 / 65536);
      t14 = v3 - c4 * 65536;
      v3 = t15 + c4 + 65535;
      c4 = Math.floor(v3 / 65536);
      t15 = v3 - c4 * 65536;
      t0 += c4 - 1 + 37 * (c4 - 1);
      c4 = 1;
      v3 = t0 + c4 + 65535;
      c4 = Math.floor(v3 / 65536);
      t0 = v3 - c4 * 65536;
      v3 = t1 + c4 + 65535;
      c4 = Math.floor(v3 / 65536);
      t1 = v3 - c4 * 65536;
      v3 = t2 + c4 + 65535;
      c4 = Math.floor(v3 / 65536);
      t2 = v3 - c4 * 65536;
      v3 = t3 + c4 + 65535;
      c4 = Math.floor(v3 / 65536);
      t3 = v3 - c4 * 65536;
      v3 = t4 + c4 + 65535;
      c4 = Math.floor(v3 / 65536);
      t4 = v3 - c4 * 65536;
      v3 = t5 + c4 + 65535;
      c4 = Math.floor(v3 / 65536);
      t5 = v3 - c4 * 65536;
      v3 = t6 + c4 + 65535;
      c4 = Math.floor(v3 / 65536);
      t6 = v3 - c4 * 65536;
      v3 = t7 + c4 + 65535;
      c4 = Math.floor(v3 / 65536);
      t7 = v3 - c4 * 65536;
      v3 = t8 + c4 + 65535;
      c4 = Math.floor(v3 / 65536);
      t8 = v3 - c4 * 65536;
      v3 = t9 + c4 + 65535;
      c4 = Math.floor(v3 / 65536);
      t9 = v3 - c4 * 65536;
      v3 = t10 + c4 + 65535;
      c4 = Math.floor(v3 / 65536);
      t10 = v3 - c4 * 65536;
      v3 = t11 + c4 + 65535;
      c4 = Math.floor(v3 / 65536);
      t11 = v3 - c4 * 65536;
      v3 = t12 + c4 + 65535;
      c4 = Math.floor(v3 / 65536);
      t12 = v3 - c4 * 65536;
      v3 = t13 + c4 + 65535;
      c4 = Math.floor(v3 / 65536);
      t13 = v3 - c4 * 65536;
      v3 = t14 + c4 + 65535;
      c4 = Math.floor(v3 / 65536);
      t14 = v3 - c4 * 65536;
      v3 = t15 + c4 + 65535;
      c4 = Math.floor(v3 / 65536);
      t15 = v3 - c4 * 65536;
      t0 += c4 - 1 + 37 * (c4 - 1);
      o[0] = t0;
      o[1] = t1;
      o[2] = t2;
      o[3] = t3;
      o[4] = t4;
      o[5] = t5;
      o[6] = t6;
      o[7] = t7;
      o[8] = t8;
      o[9] = t9;
      o[10] = t10;
      o[11] = t11;
      o[12] = t12;
      o[13] = t13;
      o[14] = t14;
      o[15] = t15;
    }
    function square(o, a2) {
      mul(o, a2, a2);
    }
    function inv25519(o, inp) {
      const c4 = gf();
      for (let i3 = 0; i3 < 16; i3++) {
        c4[i3] = inp[i3];
      }
      for (let i3 = 253; i3 >= 0; i3--) {
        square(c4, c4);
        if (i3 !== 2 && i3 !== 4) {
          mul(c4, c4, inp);
        }
      }
      for (let i3 = 0; i3 < 16; i3++) {
        o[i3] = c4[i3];
      }
    }
    function scalarMult(n3, p5) {
      const z5 = new Uint8Array(32);
      const x5 = new Float64Array(80);
      const a2 = gf(), b6 = gf(), c4 = gf(), d3 = gf(), e = gf(), f5 = gf();
      for (let i3 = 0; i3 < 31; i3++) {
        z5[i3] = n3[i3];
      }
      z5[31] = n3[31] & 127 | 64;
      z5[0] &= 248;
      unpack25519(x5, p5);
      for (let i3 = 0; i3 < 16; i3++) {
        b6[i3] = x5[i3];
      }
      a2[0] = d3[0] = 1;
      for (let i3 = 254; i3 >= 0; --i3) {
        const r2 = z5[i3 >>> 3] >>> (i3 & 7) & 1;
        sel25519(a2, b6, r2);
        sel25519(c4, d3, r2);
        add(e, a2, c4);
        sub(a2, a2, c4);
        add(c4, b6, d3);
        sub(b6, b6, d3);
        square(d3, e);
        square(f5, a2);
        mul(a2, c4, a2);
        mul(c4, b6, e);
        add(e, a2, c4);
        sub(a2, a2, c4);
        square(b6, a2);
        sub(c4, d3, f5);
        mul(a2, c4, _121665);
        add(a2, a2, d3);
        mul(c4, c4, a2);
        mul(a2, d3, f5);
        mul(d3, b6, x5);
        square(b6, e);
        sel25519(a2, b6, r2);
        sel25519(c4, d3, r2);
      }
      for (let i3 = 0; i3 < 16; i3++) {
        x5[i3 + 16] = a2[i3];
        x5[i3 + 32] = c4[i3];
        x5[i3 + 48] = b6[i3];
        x5[i3 + 64] = d3[i3];
      }
      const x32 = x5.subarray(32);
      const x16 = x5.subarray(16);
      inv25519(x32, x32);
      mul(x16, x16, x32);
      const q4 = new Uint8Array(32);
      pack25519(q4, x16);
      return q4;
    }
    exports.scalarMult = scalarMult;
    function scalarMultBase(n3) {
      return scalarMult(n3, _9);
    }
    exports.scalarMultBase = scalarMultBase;
    function generateKeyPairFromSeed(seed) {
      if (seed.length !== exports.SECRET_KEY_LENGTH) {
        throw new Error(`x25519: seed must be ${exports.SECRET_KEY_LENGTH} bytes`);
      }
      const secretKey = new Uint8Array(seed);
      const publicKey = scalarMultBase(secretKey);
      return {
        publicKey,
        secretKey
      };
    }
    exports.generateKeyPairFromSeed = generateKeyPairFromSeed;
    function generateKeyPair2(prng) {
      const seed = (0, random_1.randomBytes)(32, prng);
      const result = generateKeyPairFromSeed(seed);
      (0, wipe_1.wipe)(seed);
      return result;
    }
    exports.generateKeyPair = generateKeyPair2;
    function sharedKey2(mySecretKey, theirPublicKey, rejectZero = false) {
      if (mySecretKey.length !== exports.PUBLIC_KEY_LENGTH) {
        throw new Error("X25519: incorrect secret key length");
      }
      if (theirPublicKey.length !== exports.PUBLIC_KEY_LENGTH) {
        throw new Error("X25519: incorrect public key length");
      }
      const result = scalarMult(mySecretKey, theirPublicKey);
      if (rejectZero) {
        let zeros = 0;
        for (let i3 = 0; i3 < result.length; i3++) {
          zeros |= result[i3];
        }
        if (zeros === 0) {
          throw new Error("X25519: invalid shared key");
        }
      }
      return result;
    }
    exports.sharedKey = sharedKey2;
  }
});

// node_modules/@walletconnect/time/node_modules/tslib/tslib.es6.js
var tslib_es6_exports = {};
__export(tslib_es6_exports, {
  __assign: () => __assign,
  __asyncDelegator: () => __asyncDelegator,
  __asyncGenerator: () => __asyncGenerator,
  __asyncValues: () => __asyncValues,
  __await: () => __await,
  __awaiter: () => __awaiter,
  __classPrivateFieldGet: () => __classPrivateFieldGet,
  __classPrivateFieldSet: () => __classPrivateFieldSet,
  __createBinding: () => __createBinding,
  __decorate: () => __decorate,
  __exportStar: () => __exportStar,
  __extends: () => __extends,
  __generator: () => __generator,
  __importDefault: () => __importDefault,
  __importStar: () => __importStar,
  __makeTemplateObject: () => __makeTemplateObject,
  __metadata: () => __metadata,
  __param: () => __param,
  __read: () => __read,
  __rest: () => __rest,
  __spread: () => __spread,
  __spreadArrays: () => __spreadArrays,
  __values: () => __values
});
function __extends(d3, b6) {
  extendStatics(d3, b6);
  function __() {
    this.constructor = d3;
  }
  d3.prototype = b6 === null ? Object.create(b6) : (__.prototype = b6.prototype, new __());
}
function __rest(s2, e) {
  var t = {};
  for (var p5 in s2)
    if (Object.prototype.hasOwnProperty.call(s2, p5) && e.indexOf(p5) < 0)
      t[p5] = s2[p5];
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i3 = 0, p5 = Object.getOwnPropertySymbols(s2); i3 < p5.length; i3++) {
      if (e.indexOf(p5[i3]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p5[i3]))
        t[p5[i3]] = s2[p5[i3]];
    }
  return t;
}
function __decorate(decorators, target, key, desc) {
  var c4 = arguments.length, r2 = c4 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d3;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
    r2 = Reflect.decorate(decorators, target, key, desc);
  else
    for (var i3 = decorators.length - 1; i3 >= 0; i3--)
      if (d3 = decorators[i3])
        r2 = (c4 < 3 ? d3(r2) : c4 > 3 ? d3(target, key, r2) : d3(target, key)) || r2;
  return c4 > 3 && r2 && Object.defineProperty(target, key, r2), r2;
}
function __param(paramIndex, decorator) {
  return function(target, key) {
    decorator(target, key, paramIndex);
  };
}
function __metadata(metadataKey, metadataValue) {
  if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
    return Reflect.metadata(metadataKey, metadataValue);
}
function __awaiter(thisArg, _arguments, P3, generator) {
  function adopt(value) {
    return value instanceof P3 ? value : new P3(function(resolve) {
      resolve(value);
    });
  }
  return new (P3 || (P3 = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}
function __generator(thisArg, body) {
  var _5 = { label: 0, sent: function() {
    if (t[0] & 1)
      throw t[1];
    return t[1];
  }, trys: [], ops: [] }, f5, y5, t, g5;
  return g5 = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g5[Symbol.iterator] = function() {
    return this;
  }), g5;
  function verb(n3) {
    return function(v3) {
      return step([n3, v3]);
    };
  }
  function step(op) {
    if (f5)
      throw new TypeError("Generator is already executing.");
    while (_5)
      try {
        if (f5 = 1, y5 && (t = op[0] & 2 ? y5["return"] : op[0] ? y5["throw"] || ((t = y5["return"]) && t.call(y5), 0) : y5.next) && !(t = t.call(y5, op[1])).done)
          return t;
        if (y5 = 0, t)
          op = [op[0] & 2, t.value];
        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;
          case 4:
            _5.label++;
            return { value: op[1], done: false };
          case 5:
            _5.label++;
            y5 = op[1];
            op = [0];
            continue;
          case 7:
            op = _5.ops.pop();
            _5.trys.pop();
            continue;
          default:
            if (!(t = _5.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _5 = 0;
              continue;
            }
            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _5.label = op[1];
              break;
            }
            if (op[0] === 6 && _5.label < t[1]) {
              _5.label = t[1];
              t = op;
              break;
            }
            if (t && _5.label < t[2]) {
              _5.label = t[2];
              _5.ops.push(op);
              break;
            }
            if (t[2])
              _5.ops.pop();
            _5.trys.pop();
            continue;
        }
        op = body.call(thisArg, _5);
      } catch (e) {
        op = [6, e];
        y5 = 0;
      } finally {
        f5 = t = 0;
      }
    if (op[0] & 5)
      throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
}
function __createBinding(o, m3, k5, k22) {
  if (k22 === void 0)
    k22 = k5;
  o[k22] = m3[k5];
}
function __exportStar(m3, exports) {
  for (var p5 in m3)
    if (p5 !== "default" && !exports.hasOwnProperty(p5))
      exports[p5] = m3[p5];
}
function __values(o) {
  var s2 = typeof Symbol === "function" && Symbol.iterator, m3 = s2 && o[s2], i3 = 0;
  if (m3)
    return m3.call(o);
  if (o && typeof o.length === "number")
    return {
      next: function() {
        if (o && i3 >= o.length)
          o = void 0;
        return { value: o && o[i3++], done: !o };
      }
    };
  throw new TypeError(s2 ? "Object is not iterable." : "Symbol.iterator is not defined.");
}
function __read(o, n3) {
  var m3 = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m3)
    return o;
  var i3 = m3.call(o), r2, ar3 = [], e;
  try {
    while ((n3 === void 0 || n3-- > 0) && !(r2 = i3.next()).done)
      ar3.push(r2.value);
  } catch (error) {
    e = { error };
  } finally {
    try {
      if (r2 && !r2.done && (m3 = i3["return"]))
        m3.call(i3);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar3;
}
function __spread() {
  for (var ar3 = [], i3 = 0; i3 < arguments.length; i3++)
    ar3 = ar3.concat(__read(arguments[i3]));
  return ar3;
}
function __spreadArrays() {
  for (var s2 = 0, i3 = 0, il = arguments.length; i3 < il; i3++)
    s2 += arguments[i3].length;
  for (var r2 = Array(s2), k5 = 0, i3 = 0; i3 < il; i3++)
    for (var a2 = arguments[i3], j7 = 0, jl = a2.length; j7 < jl; j7++, k5++)
      r2[k5] = a2[j7];
  return r2;
}
function __await(v3) {
  return this instanceof __await ? (this.v = v3, this) : new __await(v3);
}
function __asyncGenerator(thisArg, _arguments, generator) {
  if (!Symbol.asyncIterator)
    throw new TypeError("Symbol.asyncIterator is not defined.");
  var g5 = generator.apply(thisArg, _arguments || []), i3, q4 = [];
  return i3 = {}, verb("next"), verb("throw"), verb("return"), i3[Symbol.asyncIterator] = function() {
    return this;
  }, i3;
  function verb(n3) {
    if (g5[n3])
      i3[n3] = function(v3) {
        return new Promise(function(a2, b6) {
          q4.push([n3, v3, a2, b6]) > 1 || resume(n3, v3);
        });
      };
  }
  function resume(n3, v3) {
    try {
      step(g5[n3](v3));
    } catch (e) {
      settle(q4[0][3], e);
    }
  }
  function step(r2) {
    r2.value instanceof __await ? Promise.resolve(r2.value.v).then(fulfill, reject) : settle(q4[0][2], r2);
  }
  function fulfill(value) {
    resume("next", value);
  }
  function reject(value) {
    resume("throw", value);
  }
  function settle(f5, v3) {
    if (f5(v3), q4.shift(), q4.length)
      resume(q4[0][0], q4[0][1]);
  }
}
function __asyncDelegator(o) {
  var i3, p5;
  return i3 = {}, verb("next"), verb("throw", function(e) {
    throw e;
  }), verb("return"), i3[Symbol.iterator] = function() {
    return this;
  }, i3;
  function verb(n3, f5) {
    i3[n3] = o[n3] ? function(v3) {
      return (p5 = !p5) ? { value: __await(o[n3](v3)), done: n3 === "return" } : f5 ? f5(v3) : v3;
    } : f5;
  }
}
function __asyncValues(o) {
  if (!Symbol.asyncIterator)
    throw new TypeError("Symbol.asyncIterator is not defined.");
  var m3 = o[Symbol.asyncIterator], i3;
  return m3 ? m3.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i3 = {}, verb("next"), verb("throw"), verb("return"), i3[Symbol.asyncIterator] = function() {
    return this;
  }, i3);
  function verb(n3) {
    i3[n3] = o[n3] && function(v3) {
      return new Promise(function(resolve, reject) {
        v3 = o[n3](v3), settle(resolve, reject, v3.done, v3.value);
      });
    };
  }
  function settle(resolve, reject, d3, v3) {
    Promise.resolve(v3).then(function(v4) {
      resolve({ value: v4, done: d3 });
    }, reject);
  }
}
function __makeTemplateObject(cooked, raw) {
  if (Object.defineProperty) {
    Object.defineProperty(cooked, "raw", { value: raw });
  } else {
    cooked.raw = raw;
  }
  return cooked;
}
function __importStar(mod) {
  if (mod && mod.__esModule)
    return mod;
  var result = {};
  if (mod != null) {
    for (var k5 in mod)
      if (Object.hasOwnProperty.call(mod, k5))
        result[k5] = mod[k5];
  }
  result.default = mod;
  return result;
}
function __importDefault(mod) {
  return mod && mod.__esModule ? mod : { default: mod };
}
function __classPrivateFieldGet(receiver, privateMap) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to get private field on non-instance");
  }
  return privateMap.get(receiver);
}
function __classPrivateFieldSet(receiver, privateMap, value) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to set private field on non-instance");
  }
  privateMap.set(receiver, value);
  return value;
}
var extendStatics, __assign;
var init_tslib_es6 = __esm({
  "node_modules/@walletconnect/time/node_modules/tslib/tslib.es6.js"() {
    extendStatics = function(d3, b6) {
      extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d4, b7) {
        d4.__proto__ = b7;
      } || function(d4, b7) {
        for (var p5 in b7)
          if (b7.hasOwnProperty(p5))
            d4[p5] = b7[p5];
      };
      return extendStatics(d3, b6);
    };
    __assign = function() {
      __assign = Object.assign || function __assign3(t) {
        for (var s2, i3 = 1, n3 = arguments.length; i3 < n3; i3++) {
          s2 = arguments[i3];
          for (var p5 in s2)
            if (Object.prototype.hasOwnProperty.call(s2, p5))
              t[p5] = s2[p5];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
  }
});

// node_modules/@walletconnect/time/dist/cjs/utils/delay.js
var require_delay = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/utils/delay.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.delay = void 0;
    function delay(timeout) {
      return new Promise((resolve) => {
        setTimeout(() => {
          resolve(true);
        }, timeout);
      });
    }
    exports.delay = delay;
  }
});

// node_modules/@walletconnect/time/dist/cjs/constants/misc.js
var require_misc = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/constants/misc.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ONE_THOUSAND = exports.ONE_HUNDRED = void 0;
    exports.ONE_HUNDRED = 100;
    exports.ONE_THOUSAND = 1e3;
  }
});

// node_modules/@walletconnect/time/dist/cjs/constants/time.js
var require_time = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/constants/time.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ONE_YEAR = exports.FOUR_WEEKS = exports.THREE_WEEKS = exports.TWO_WEEKS = exports.ONE_WEEK = exports.THIRTY_DAYS = exports.SEVEN_DAYS = exports.FIVE_DAYS = exports.THREE_DAYS = exports.ONE_DAY = exports.TWENTY_FOUR_HOURS = exports.TWELVE_HOURS = exports.SIX_HOURS = exports.THREE_HOURS = exports.ONE_HOUR = exports.SIXTY_MINUTES = exports.THIRTY_MINUTES = exports.TEN_MINUTES = exports.FIVE_MINUTES = exports.ONE_MINUTE = exports.SIXTY_SECONDS = exports.THIRTY_SECONDS = exports.TEN_SECONDS = exports.FIVE_SECONDS = exports.ONE_SECOND = void 0;
    exports.ONE_SECOND = 1;
    exports.FIVE_SECONDS = 5;
    exports.TEN_SECONDS = 10;
    exports.THIRTY_SECONDS = 30;
    exports.SIXTY_SECONDS = 60;
    exports.ONE_MINUTE = exports.SIXTY_SECONDS;
    exports.FIVE_MINUTES = exports.ONE_MINUTE * 5;
    exports.TEN_MINUTES = exports.ONE_MINUTE * 10;
    exports.THIRTY_MINUTES = exports.ONE_MINUTE * 30;
    exports.SIXTY_MINUTES = exports.ONE_MINUTE * 60;
    exports.ONE_HOUR = exports.SIXTY_MINUTES;
    exports.THREE_HOURS = exports.ONE_HOUR * 3;
    exports.SIX_HOURS = exports.ONE_HOUR * 6;
    exports.TWELVE_HOURS = exports.ONE_HOUR * 12;
    exports.TWENTY_FOUR_HOURS = exports.ONE_HOUR * 24;
    exports.ONE_DAY = exports.TWENTY_FOUR_HOURS;
    exports.THREE_DAYS = exports.ONE_DAY * 3;
    exports.FIVE_DAYS = exports.ONE_DAY * 5;
    exports.SEVEN_DAYS = exports.ONE_DAY * 7;
    exports.THIRTY_DAYS = exports.ONE_DAY * 30;
    exports.ONE_WEEK = exports.SEVEN_DAYS;
    exports.TWO_WEEKS = exports.ONE_WEEK * 2;
    exports.THREE_WEEKS = exports.ONE_WEEK * 3;
    exports.FOUR_WEEKS = exports.ONE_WEEK * 4;
    exports.ONE_YEAR = exports.ONE_DAY * 365;
  }
});

// node_modules/@walletconnect/time/dist/cjs/constants/index.js
var require_constants = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/constants/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    tslib_1.__exportStar(require_misc(), exports);
    tslib_1.__exportStar(require_time(), exports);
  }
});

// node_modules/@walletconnect/time/dist/cjs/utils/convert.js
var require_convert = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/utils/convert.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.fromMiliseconds = exports.toMiliseconds = void 0;
    var constants_1 = require_constants();
    function toMiliseconds(seconds) {
      return seconds * constants_1.ONE_THOUSAND;
    }
    exports.toMiliseconds = toMiliseconds;
    function fromMiliseconds(miliseconds) {
      return Math.floor(miliseconds / constants_1.ONE_THOUSAND);
    }
    exports.fromMiliseconds = fromMiliseconds;
  }
});

// node_modules/@walletconnect/time/dist/cjs/utils/index.js
var require_utils = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/utils/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    tslib_1.__exportStar(require_delay(), exports);
    tslib_1.__exportStar(require_convert(), exports);
  }
});

// node_modules/@walletconnect/time/dist/cjs/watch.js
var require_watch = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/watch.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Watch = void 0;
    var Watch = class {
      constructor() {
        this.timestamps = /* @__PURE__ */ new Map();
      }
      start(label) {
        if (this.timestamps.has(label)) {
          throw new Error(`Watch already started for label: ${label}`);
        }
        this.timestamps.set(label, { started: Date.now() });
      }
      stop(label) {
        const timestamp = this.get(label);
        if (typeof timestamp.elapsed !== "undefined") {
          throw new Error(`Watch already stopped for label: ${label}`);
        }
        const elapsed = Date.now() - timestamp.started;
        this.timestamps.set(label, { started: timestamp.started, elapsed });
      }
      get(label) {
        const timestamp = this.timestamps.get(label);
        if (typeof timestamp === "undefined") {
          throw new Error(`No timestamp found for label: ${label}`);
        }
        return timestamp;
      }
      elapsed(label) {
        const timestamp = this.get(label);
        const elapsed = timestamp.elapsed || Date.now() - timestamp.started;
        return elapsed;
      }
    };
    exports.Watch = Watch;
    exports.default = Watch;
  }
});

// node_modules/@walletconnect/time/dist/cjs/types/watch.js
var require_watch2 = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/types/watch.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.IWatch = void 0;
    var IWatch = class {
    };
    exports.IWatch = IWatch;
  }
});

// node_modules/@walletconnect/time/dist/cjs/types/index.js
var require_types = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/types/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    tslib_1.__exportStar(require_watch2(), exports);
  }
});

// node_modules/@walletconnect/time/dist/cjs/index.js
var require_cjs3 = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    tslib_1.__exportStar(require_utils(), exports);
    tslib_1.__exportStar(require_watch(), exports);
    tslib_1.__exportStar(require_types(), exports);
    tslib_1.__exportStar(require_constants(), exports);
  }
});

// node_modules/@walletconnect/utils/node_modules/query-string/index.js
var require_query_string = __commonJS({
  "node_modules/@walletconnect/utils/node_modules/query-string/index.js"(exports) {
    "use strict";
    var strictUriEncode = require_strict_uri_encode();
    var decodeComponent = require_decode_uri_component();
    var splitOnFirst = require_split_on_first();
    var filterObject = require_filter_obj();
    var isNullOrUndefined = (value) => value === null || value === void 0;
    var encodeFragmentIdentifier = Symbol("encodeFragmentIdentifier");
    function encoderForArrayFormat(options) {
      switch (options.arrayFormat) {
        case "index":
          return (key) => (result, value) => {
            const index = result.length;
            if (value === void 0 || options.skipNull && value === null || options.skipEmptyString && value === "") {
              return result;
            }
            if (value === null) {
              return [...result, [encode5(key, options), "[", index, "]"].join("")];
            }
            return [
              ...result,
              [encode5(key, options), "[", encode5(index, options), "]=", encode5(value, options)].join("")
            ];
          };
        case "bracket":
          return (key) => (result, value) => {
            if (value === void 0 || options.skipNull && value === null || options.skipEmptyString && value === "") {
              return result;
            }
            if (value === null) {
              return [...result, [encode5(key, options), "[]"].join("")];
            }
            return [...result, [encode5(key, options), "[]=", encode5(value, options)].join("")];
          };
        case "colon-list-separator":
          return (key) => (result, value) => {
            if (value === void 0 || options.skipNull && value === null || options.skipEmptyString && value === "") {
              return result;
            }
            if (value === null) {
              return [...result, [encode5(key, options), ":list="].join("")];
            }
            return [...result, [encode5(key, options), ":list=", encode5(value, options)].join("")];
          };
        case "comma":
        case "separator":
        case "bracket-separator": {
          const keyValueSep = options.arrayFormat === "bracket-separator" ? "[]=" : "=";
          return (key) => (result, value) => {
            if (value === void 0 || options.skipNull && value === null || options.skipEmptyString && value === "") {
              return result;
            }
            value = value === null ? "" : value;
            if (result.length === 0) {
              return [[encode5(key, options), keyValueSep, encode5(value, options)].join("")];
            }
            return [[result, encode5(value, options)].join(options.arrayFormatSeparator)];
          };
        }
        default:
          return (key) => (result, value) => {
            if (value === void 0 || options.skipNull && value === null || options.skipEmptyString && value === "") {
              return result;
            }
            if (value === null) {
              return [...result, encode5(key, options)];
            }
            return [...result, [encode5(key, options), "=", encode5(value, options)].join("")];
          };
      }
    }
    function parserForArrayFormat(options) {
      let result;
      switch (options.arrayFormat) {
        case "index":
          return (key, value, accumulator) => {
            result = /\[(\d*)\]$/.exec(key);
            key = key.replace(/\[\d*\]$/, "");
            if (!result) {
              accumulator[key] = value;
              return;
            }
            if (accumulator[key] === void 0) {
              accumulator[key] = {};
            }
            accumulator[key][result[1]] = value;
          };
        case "bracket":
          return (key, value, accumulator) => {
            result = /(\[\])$/.exec(key);
            key = key.replace(/\[\]$/, "");
            if (!result) {
              accumulator[key] = value;
              return;
            }
            if (accumulator[key] === void 0) {
              accumulator[key] = [value];
              return;
            }
            accumulator[key] = [].concat(accumulator[key], value);
          };
        case "colon-list-separator":
          return (key, value, accumulator) => {
            result = /(:list)$/.exec(key);
            key = key.replace(/:list$/, "");
            if (!result) {
              accumulator[key] = value;
              return;
            }
            if (accumulator[key] === void 0) {
              accumulator[key] = [value];
              return;
            }
            accumulator[key] = [].concat(accumulator[key], value);
          };
        case "comma":
        case "separator":
          return (key, value, accumulator) => {
            const isArray = typeof value === "string" && value.includes(options.arrayFormatSeparator);
            const isEncodedArray = typeof value === "string" && !isArray && decode6(value, options).includes(options.arrayFormatSeparator);
            value = isEncodedArray ? decode6(value, options) : value;
            const newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map((item) => decode6(item, options)) : value === null ? value : decode6(value, options);
            accumulator[key] = newValue;
          };
        case "bracket-separator":
          return (key, value, accumulator) => {
            const isArray = /(\[\])$/.test(key);
            key = key.replace(/\[\]$/, "");
            if (!isArray) {
              accumulator[key] = value ? decode6(value, options) : value;
              return;
            }
            const arrayValue = value === null ? [] : value.split(options.arrayFormatSeparator).map((item) => decode6(item, options));
            if (accumulator[key] === void 0) {
              accumulator[key] = arrayValue;
              return;
            }
            accumulator[key] = [].concat(accumulator[key], arrayValue);
          };
        default:
          return (key, value, accumulator) => {
            if (accumulator[key] === void 0) {
              accumulator[key] = value;
              return;
            }
            accumulator[key] = [].concat(accumulator[key], value);
          };
      }
    }
    function validateArrayFormatSeparator(value) {
      if (typeof value !== "string" || value.length !== 1) {
        throw new TypeError("arrayFormatSeparator must be single character string");
      }
    }
    function encode5(value, options) {
      if (options.encode) {
        return options.strict ? strictUriEncode(value) : encodeURIComponent(value);
      }
      return value;
    }
    function decode6(value, options) {
      if (options.decode) {
        return decodeComponent(value);
      }
      return value;
    }
    function keysSorter(input) {
      if (Array.isArray(input)) {
        return input.sort();
      }
      if (typeof input === "object") {
        return keysSorter(Object.keys(input)).sort((a2, b6) => Number(a2) - Number(b6)).map((key) => input[key]);
      }
      return input;
    }
    function removeHash(input) {
      const hashStart = input.indexOf("#");
      if (hashStart !== -1) {
        input = input.slice(0, hashStart);
      }
      return input;
    }
    function getHash(url) {
      let hash = "";
      const hashStart = url.indexOf("#");
      if (hashStart !== -1) {
        hash = url.slice(hashStart);
      }
      return hash;
    }
    function extract(input) {
      input = removeHash(input);
      const queryStart = input.indexOf("?");
      if (queryStart === -1) {
        return "";
      }
      return input.slice(queryStart + 1);
    }
    function parseValue(value, options) {
      if (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === "string" && value.trim() !== "")) {
        value = Number(value);
      } else if (options.parseBooleans && value !== null && (value.toLowerCase() === "true" || value.toLowerCase() === "false")) {
        value = value.toLowerCase() === "true";
      }
      return value;
    }
    function parse2(query, options) {
      options = Object.assign({
        decode: true,
        sort: true,
        arrayFormat: "none",
        arrayFormatSeparator: ",",
        parseNumbers: false,
        parseBooleans: false
      }, options);
      validateArrayFormatSeparator(options.arrayFormatSeparator);
      const formatter = parserForArrayFormat(options);
      const ret = /* @__PURE__ */ Object.create(null);
      if (typeof query !== "string") {
        return ret;
      }
      query = query.trim().replace(/^[?#&]/, "");
      if (!query) {
        return ret;
      }
      for (const param of query.split("&")) {
        if (param === "") {
          continue;
        }
        let [key, value] = splitOnFirst(options.decode ? param.replace(/\+/g, " ") : param, "=");
        value = value === void 0 ? null : ["comma", "separator", "bracket-separator"].includes(options.arrayFormat) ? value : decode6(value, options);
        formatter(decode6(key, options), value, ret);
      }
      for (const key of Object.keys(ret)) {
        const value = ret[key];
        if (typeof value === "object" && value !== null) {
          for (const k5 of Object.keys(value)) {
            value[k5] = parseValue(value[k5], options);
          }
        } else {
          ret[key] = parseValue(value, options);
        }
      }
      if (options.sort === false) {
        return ret;
      }
      return (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {
        const value = ret[key];
        if (Boolean(value) && typeof value === "object" && !Array.isArray(value)) {
          result[key] = keysSorter(value);
        } else {
          result[key] = value;
        }
        return result;
      }, /* @__PURE__ */ Object.create(null));
    }
    exports.extract = extract;
    exports.parse = parse2;
    exports.stringify = (object, options) => {
      if (!object) {
        return "";
      }
      options = Object.assign({
        encode: true,
        strict: true,
        arrayFormat: "none",
        arrayFormatSeparator: ","
      }, options);
      validateArrayFormatSeparator(options.arrayFormatSeparator);
      const shouldFilter = (key) => options.skipNull && isNullOrUndefined(object[key]) || options.skipEmptyString && object[key] === "";
      const formatter = encoderForArrayFormat(options);
      const objectCopy = {};
      for (const key of Object.keys(object)) {
        if (!shouldFilter(key)) {
          objectCopy[key] = object[key];
        }
      }
      const keys2 = Object.keys(objectCopy);
      if (options.sort !== false) {
        keys2.sort(options.sort);
      }
      return keys2.map((key) => {
        const value = object[key];
        if (value === void 0) {
          return "";
        }
        if (value === null) {
          return encode5(key, options);
        }
        if (Array.isArray(value)) {
          if (value.length === 0 && options.arrayFormat === "bracket-separator") {
            return encode5(key, options) + "[]";
          }
          return value.reduce(formatter(key), []).join("&");
        }
        return encode5(key, options) + "=" + encode5(value, options);
      }).filter((x5) => x5.length > 0).join("&");
    };
    exports.parseUrl = (url, options) => {
      options = Object.assign({
        decode: true
      }, options);
      const [url_, hash] = splitOnFirst(url, "#");
      return Object.assign(
        {
          url: url_.split("?")[0] || "",
          query: parse2(extract(url), options)
        },
        options && options.parseFragmentIdentifier && hash ? { fragmentIdentifier: decode6(hash, options) } : {}
      );
    };
    exports.stringifyUrl = (object, options) => {
      options = Object.assign({
        encode: true,
        strict: true,
        [encodeFragmentIdentifier]: true
      }, options);
      const url = removeHash(object.url).split("?")[0] || "";
      const queryFromUrl = exports.extract(object.url);
      const parsedQueryFromUrl = exports.parse(queryFromUrl, { sort: false });
      const query = Object.assign(parsedQueryFromUrl, object.query);
      let queryString = exports.stringify(query, options);
      if (queryString) {
        queryString = `?${queryString}`;
      }
      let hash = getHash(object.url);
      if (object.fragmentIdentifier) {
        hash = `#${options[encodeFragmentIdentifier] ? encode5(object.fragmentIdentifier, options) : object.fragmentIdentifier}`;
      }
      return `${url}${queryString}${hash}`;
    };
    exports.pick = (input, filter, options) => {
      options = Object.assign({
        parseFragmentIdentifier: true,
        [encodeFragmentIdentifier]: false
      }, options);
      const { url, query, fragmentIdentifier } = exports.parseUrl(input, options);
      return exports.stringifyUrl({
        url,
        query: filterObject(query, filter),
        fragmentIdentifier
      }, options);
    };
    exports.exclude = (input, filter, options) => {
      const exclusionFilter = Array.isArray(filter) ? (key) => !filter.includes(key) : (key, value) => !filter(key, value);
      return exports.pick(input, exclusionFilter, options);
    };
  }
});

// node_modules/@walletconnect/heartbeat/node_modules/tslib/tslib.es6.js
var tslib_es6_exports2 = {};
__export(tslib_es6_exports2, {
  __assign: () => __assign2,
  __asyncDelegator: () => __asyncDelegator2,
  __asyncGenerator: () => __asyncGenerator2,
  __asyncValues: () => __asyncValues2,
  __await: () => __await2,
  __awaiter: () => __awaiter2,
  __classPrivateFieldGet: () => __classPrivateFieldGet2,
  __classPrivateFieldSet: () => __classPrivateFieldSet2,
  __createBinding: () => __createBinding2,
  __decorate: () => __decorate2,
  __exportStar: () => __exportStar2,
  __extends: () => __extends2,
  __generator: () => __generator2,
  __importDefault: () => __importDefault2,
  __importStar: () => __importStar2,
  __makeTemplateObject: () => __makeTemplateObject2,
  __metadata: () => __metadata2,
  __param: () => __param2,
  __read: () => __read2,
  __rest: () => __rest2,
  __spread: () => __spread2,
  __spreadArrays: () => __spreadArrays2,
  __values: () => __values2
});
function __extends2(d3, b6) {
  extendStatics2(d3, b6);
  function __() {
    this.constructor = d3;
  }
  d3.prototype = b6 === null ? Object.create(b6) : (__.prototype = b6.prototype, new __());
}
function __rest2(s2, e) {
  var t = {};
  for (var p5 in s2)
    if (Object.prototype.hasOwnProperty.call(s2, p5) && e.indexOf(p5) < 0)
      t[p5] = s2[p5];
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i3 = 0, p5 = Object.getOwnPropertySymbols(s2); i3 < p5.length; i3++) {
      if (e.indexOf(p5[i3]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p5[i3]))
        t[p5[i3]] = s2[p5[i3]];
    }
  return t;
}
function __decorate2(decorators, target, key, desc) {
  var c4 = arguments.length, r2 = c4 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d3;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
    r2 = Reflect.decorate(decorators, target, key, desc);
  else
    for (var i3 = decorators.length - 1; i3 >= 0; i3--)
      if (d3 = decorators[i3])
        r2 = (c4 < 3 ? d3(r2) : c4 > 3 ? d3(target, key, r2) : d3(target, key)) || r2;
  return c4 > 3 && r2 && Object.defineProperty(target, key, r2), r2;
}
function __param2(paramIndex, decorator) {
  return function(target, key) {
    decorator(target, key, paramIndex);
  };
}
function __metadata2(metadataKey, metadataValue) {
  if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
    return Reflect.metadata(metadataKey, metadataValue);
}
function __awaiter2(thisArg, _arguments, P3, generator) {
  function adopt(value) {
    return value instanceof P3 ? value : new P3(function(resolve) {
      resolve(value);
    });
  }
  return new (P3 || (P3 = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}
function __generator2(thisArg, body) {
  var _5 = { label: 0, sent: function() {
    if (t[0] & 1)
      throw t[1];
    return t[1];
  }, trys: [], ops: [] }, f5, y5, t, g5;
  return g5 = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g5[Symbol.iterator] = function() {
    return this;
  }), g5;
  function verb(n3) {
    return function(v3) {
      return step([n3, v3]);
    };
  }
  function step(op) {
    if (f5)
      throw new TypeError("Generator is already executing.");
    while (_5)
      try {
        if (f5 = 1, y5 && (t = op[0] & 2 ? y5["return"] : op[0] ? y5["throw"] || ((t = y5["return"]) && t.call(y5), 0) : y5.next) && !(t = t.call(y5, op[1])).done)
          return t;
        if (y5 = 0, t)
          op = [op[0] & 2, t.value];
        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;
          case 4:
            _5.label++;
            return { value: op[1], done: false };
          case 5:
            _5.label++;
            y5 = op[1];
            op = [0];
            continue;
          case 7:
            op = _5.ops.pop();
            _5.trys.pop();
            continue;
          default:
            if (!(t = _5.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _5 = 0;
              continue;
            }
            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _5.label = op[1];
              break;
            }
            if (op[0] === 6 && _5.label < t[1]) {
              _5.label = t[1];
              t = op;
              break;
            }
            if (t && _5.label < t[2]) {
              _5.label = t[2];
              _5.ops.push(op);
              break;
            }
            if (t[2])
              _5.ops.pop();
            _5.trys.pop();
            continue;
        }
        op = body.call(thisArg, _5);
      } catch (e) {
        op = [6, e];
        y5 = 0;
      } finally {
        f5 = t = 0;
      }
    if (op[0] & 5)
      throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
}
function __createBinding2(o, m3, k5, k22) {
  if (k22 === void 0)
    k22 = k5;
  o[k22] = m3[k5];
}
function __exportStar2(m3, exports) {
  for (var p5 in m3)
    if (p5 !== "default" && !exports.hasOwnProperty(p5))
      exports[p5] = m3[p5];
}
function __values2(o) {
  var s2 = typeof Symbol === "function" && Symbol.iterator, m3 = s2 && o[s2], i3 = 0;
  if (m3)
    return m3.call(o);
  if (o && typeof o.length === "number")
    return {
      next: function() {
        if (o && i3 >= o.length)
          o = void 0;
        return { value: o && o[i3++], done: !o };
      }
    };
  throw new TypeError(s2 ? "Object is not iterable." : "Symbol.iterator is not defined.");
}
function __read2(o, n3) {
  var m3 = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m3)
    return o;
  var i3 = m3.call(o), r2, ar3 = [], e;
  try {
    while ((n3 === void 0 || n3-- > 0) && !(r2 = i3.next()).done)
      ar3.push(r2.value);
  } catch (error) {
    e = { error };
  } finally {
    try {
      if (r2 && !r2.done && (m3 = i3["return"]))
        m3.call(i3);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar3;
}
function __spread2() {
  for (var ar3 = [], i3 = 0; i3 < arguments.length; i3++)
    ar3 = ar3.concat(__read2(arguments[i3]));
  return ar3;
}
function __spreadArrays2() {
  for (var s2 = 0, i3 = 0, il = arguments.length; i3 < il; i3++)
    s2 += arguments[i3].length;
  for (var r2 = Array(s2), k5 = 0, i3 = 0; i3 < il; i3++)
    for (var a2 = arguments[i3], j7 = 0, jl = a2.length; j7 < jl; j7++, k5++)
      r2[k5] = a2[j7];
  return r2;
}
function __await2(v3) {
  return this instanceof __await2 ? (this.v = v3, this) : new __await2(v3);
}
function __asyncGenerator2(thisArg, _arguments, generator) {
  if (!Symbol.asyncIterator)
    throw new TypeError("Symbol.asyncIterator is not defined.");
  var g5 = generator.apply(thisArg, _arguments || []), i3, q4 = [];
  return i3 = {}, verb("next"), verb("throw"), verb("return"), i3[Symbol.asyncIterator] = function() {
    return this;
  }, i3;
  function verb(n3) {
    if (g5[n3])
      i3[n3] = function(v3) {
        return new Promise(function(a2, b6) {
          q4.push([n3, v3, a2, b6]) > 1 || resume(n3, v3);
        });
      };
  }
  function resume(n3, v3) {
    try {
      step(g5[n3](v3));
    } catch (e) {
      settle(q4[0][3], e);
    }
  }
  function step(r2) {
    r2.value instanceof __await2 ? Promise.resolve(r2.value.v).then(fulfill, reject) : settle(q4[0][2], r2);
  }
  function fulfill(value) {
    resume("next", value);
  }
  function reject(value) {
    resume("throw", value);
  }
  function settle(f5, v3) {
    if (f5(v3), q4.shift(), q4.length)
      resume(q4[0][0], q4[0][1]);
  }
}
function __asyncDelegator2(o) {
  var i3, p5;
  return i3 = {}, verb("next"), verb("throw", function(e) {
    throw e;
  }), verb("return"), i3[Symbol.iterator] = function() {
    return this;
  }, i3;
  function verb(n3, f5) {
    i3[n3] = o[n3] ? function(v3) {
      return (p5 = !p5) ? { value: __await2(o[n3](v3)), done: n3 === "return" } : f5 ? f5(v3) : v3;
    } : f5;
  }
}
function __asyncValues2(o) {
  if (!Symbol.asyncIterator)
    throw new TypeError("Symbol.asyncIterator is not defined.");
  var m3 = o[Symbol.asyncIterator], i3;
  return m3 ? m3.call(o) : (o = typeof __values2 === "function" ? __values2(o) : o[Symbol.iterator](), i3 = {}, verb("next"), verb("throw"), verb("return"), i3[Symbol.asyncIterator] = function() {
    return this;
  }, i3);
  function verb(n3) {
    i3[n3] = o[n3] && function(v3) {
      return new Promise(function(resolve, reject) {
        v3 = o[n3](v3), settle(resolve, reject, v3.done, v3.value);
      });
    };
  }
  function settle(resolve, reject, d3, v3) {
    Promise.resolve(v3).then(function(v4) {
      resolve({ value: v4, done: d3 });
    }, reject);
  }
}
function __makeTemplateObject2(cooked, raw) {
  if (Object.defineProperty) {
    Object.defineProperty(cooked, "raw", { value: raw });
  } else {
    cooked.raw = raw;
  }
  return cooked;
}
function __importStar2(mod) {
  if (mod && mod.__esModule)
    return mod;
  var result = {};
  if (mod != null) {
    for (var k5 in mod)
      if (Object.hasOwnProperty.call(mod, k5))
        result[k5] = mod[k5];
  }
  result.default = mod;
  return result;
}
function __importDefault2(mod) {
  return mod && mod.__esModule ? mod : { default: mod };
}
function __classPrivateFieldGet2(receiver, privateMap) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to get private field on non-instance");
  }
  return privateMap.get(receiver);
}
function __classPrivateFieldSet2(receiver, privateMap, value) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to set private field on non-instance");
  }
  privateMap.set(receiver, value);
  return value;
}
var extendStatics2, __assign2;
var init_tslib_es62 = __esm({
  "node_modules/@walletconnect/heartbeat/node_modules/tslib/tslib.es6.js"() {
    extendStatics2 = function(d3, b6) {
      extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d4, b7) {
        d4.__proto__ = b7;
      } || function(d4, b7) {
        for (var p5 in b7)
          if (b7.hasOwnProperty(p5))
            d4[p5] = b7[p5];
      };
      return extendStatics2(d3, b6);
    };
    __assign2 = function() {
      __assign2 = Object.assign || function __assign3(t) {
        for (var s2, i3 = 1, n3 = arguments.length; i3 < n3; i3++) {
          s2 = arguments[i3];
          for (var p5 in s2)
            if (Object.prototype.hasOwnProperty.call(s2, p5))
              t[p5] = s2[p5];
        }
        return t;
      };
      return __assign2.apply(this, arguments);
    };
  }
});

// node_modules/@walletconnect/events/dist/esm/events.js
var IEvents;
var init_events = __esm({
  "node_modules/@walletconnect/events/dist/esm/events.js"() {
    IEvents = class {
    };
  }
});

// node_modules/@walletconnect/events/dist/esm/index.js
var esm_exports2 = {};
__export(esm_exports2, {
  IEvents: () => IEvents
});
var init_esm3 = __esm({
  "node_modules/@walletconnect/events/dist/esm/index.js"() {
    init_events();
  }
});

// node_modules/@walletconnect/heartbeat/dist/cjs/types/heartbeat.js
var require_heartbeat = __commonJS({
  "node_modules/@walletconnect/heartbeat/dist/cjs/types/heartbeat.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.IHeartBeat = void 0;
    var events_1 = (init_esm3(), __toCommonJS(esm_exports2));
    var IHeartBeat = class extends events_1.IEvents {
      constructor(opts) {
        super();
      }
    };
    exports.IHeartBeat = IHeartBeat;
  }
});

// node_modules/@walletconnect/heartbeat/dist/cjs/types/index.js
var require_types2 = __commonJS({
  "node_modules/@walletconnect/heartbeat/dist/cjs/types/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es62(), __toCommonJS(tslib_es6_exports2));
    tslib_1.__exportStar(require_heartbeat(), exports);
  }
});

// node_modules/@walletconnect/heartbeat/dist/cjs/constants/heartbeat.js
var require_heartbeat2 = __commonJS({
  "node_modules/@walletconnect/heartbeat/dist/cjs/constants/heartbeat.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.HEARTBEAT_EVENTS = exports.HEARTBEAT_INTERVAL = void 0;
    var time_1 = require_cjs3();
    exports.HEARTBEAT_INTERVAL = time_1.FIVE_SECONDS;
    exports.HEARTBEAT_EVENTS = {
      pulse: "heartbeat_pulse"
    };
  }
});

// node_modules/@walletconnect/heartbeat/dist/cjs/constants/index.js
var require_constants2 = __commonJS({
  "node_modules/@walletconnect/heartbeat/dist/cjs/constants/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es62(), __toCommonJS(tslib_es6_exports2));
    tslib_1.__exportStar(require_heartbeat2(), exports);
  }
});

// node_modules/@walletconnect/heartbeat/dist/cjs/heartbeat.js
var require_heartbeat3 = __commonJS({
  "node_modules/@walletconnect/heartbeat/dist/cjs/heartbeat.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.HeartBeat = void 0;
    var tslib_1 = (init_tslib_es62(), __toCommonJS(tslib_es6_exports2));
    var events_1 = require_events();
    var time_1 = require_cjs3();
    var types_1 = require_types2();
    var constants_1 = require_constants2();
    var HeartBeat = class _HeartBeat extends types_1.IHeartBeat {
      constructor(opts) {
        super(opts);
        this.events = new events_1.EventEmitter();
        this.interval = constants_1.HEARTBEAT_INTERVAL;
        this.interval = (opts === null || opts === void 0 ? void 0 : opts.interval) || constants_1.HEARTBEAT_INTERVAL;
      }
      static init(opts) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
          const heartbeat = new _HeartBeat(opts);
          yield heartbeat.init();
          return heartbeat;
        });
      }
      init() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
          yield this.initialize();
        });
      }
      stop() {
        clearInterval(this.intervalRef);
      }
      on(event, listener) {
        this.events.on(event, listener);
      }
      once(event, listener) {
        this.events.once(event, listener);
      }
      off(event, listener) {
        this.events.off(event, listener);
      }
      removeListener(event, listener) {
        this.events.removeListener(event, listener);
      }
      initialize() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
          this.intervalRef = setInterval(() => this.pulse(), time_1.toMiliseconds(this.interval));
        });
      }
      pulse() {
        this.events.emit(constants_1.HEARTBEAT_EVENTS.pulse);
      }
    };
    exports.HeartBeat = HeartBeat;
  }
});

// node_modules/@walletconnect/heartbeat/dist/cjs/index.js
var require_cjs4 = __commonJS({
  "node_modules/@walletconnect/heartbeat/dist/cjs/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es62(), __toCommonJS(tslib_es6_exports2));
    tslib_1.__exportStar(require_heartbeat3(), exports);
    tslib_1.__exportStar(require_types2(), exports);
    tslib_1.__exportStar(require_constants2(), exports);
  }
});

// node_modules/quick-format-unescaped/index.js
var require_quick_format_unescaped = __commonJS({
  "node_modules/quick-format-unescaped/index.js"(exports, module) {
    "use strict";
    function tryStringify(o) {
      try {
        return JSON.stringify(o);
      } catch (e) {
        return '"[Circular]"';
      }
    }
    module.exports = format;
    function format(f5, args, opts) {
      var ss3 = opts && opts.stringify || tryStringify;
      var offset = 1;
      if (typeof f5 === "object" && f5 !== null) {
        var len = args.length + offset;
        if (len === 1)
          return f5;
        var objects = new Array(len);
        objects[0] = ss3(f5);
        for (var index = 1; index < len; index++) {
          objects[index] = ss3(args[index]);
        }
        return objects.join(" ");
      }
      if (typeof f5 !== "string") {
        return f5;
      }
      var argLen = args.length;
      if (argLen === 0)
        return f5;
      var str = "";
      var a2 = 1 - offset;
      var lastPos = -1;
      var flen = f5 && f5.length || 0;
      for (var i3 = 0; i3 < flen; ) {
        if (f5.charCodeAt(i3) === 37 && i3 + 1 < flen) {
          lastPos = lastPos > -1 ? lastPos : 0;
          switch (f5.charCodeAt(i3 + 1)) {
            case 100:
            case 102:
              if (a2 >= argLen)
                break;
              if (args[a2] == null)
                break;
              if (lastPos < i3)
                str += f5.slice(lastPos, i3);
              str += Number(args[a2]);
              lastPos = i3 + 2;
              i3++;
              break;
            case 105:
              if (a2 >= argLen)
                break;
              if (args[a2] == null)
                break;
              if (lastPos < i3)
                str += f5.slice(lastPos, i3);
              str += Math.floor(Number(args[a2]));
              lastPos = i3 + 2;
              i3++;
              break;
            case 79:
            case 111:
            case 106:
              if (a2 >= argLen)
                break;
              if (args[a2] === void 0)
                break;
              if (lastPos < i3)
                str += f5.slice(lastPos, i3);
              var type = typeof args[a2];
              if (type === "string") {
                str += "'" + args[a2] + "'";
                lastPos = i3 + 2;
                i3++;
                break;
              }
              if (type === "function") {
                str += args[a2].name || "<anonymous>";
                lastPos = i3 + 2;
                i3++;
                break;
              }
              str += ss3(args[a2]);
              lastPos = i3 + 2;
              i3++;
              break;
            case 115:
              if (a2 >= argLen)
                break;
              if (lastPos < i3)
                str += f5.slice(lastPos, i3);
              str += String(args[a2]);
              lastPos = i3 + 2;
              i3++;
              break;
            case 37:
              if (lastPos < i3)
                str += f5.slice(lastPos, i3);
              str += "%";
              lastPos = i3 + 2;
              i3++;
              a2--;
              break;
          }
          ++a2;
        }
        ++i3;
      }
      if (lastPos === -1)
        return f5;
      else if (lastPos < flen) {
        str += f5.slice(lastPos);
      }
      return str;
    }
  }
});

// node_modules/pino/browser.js
var require_browser2 = __commonJS({
  "node_modules/pino/browser.js"(exports, module) {
    "use strict";
    var format = require_quick_format_unescaped();
    module.exports = pino;
    var _console = pfGlobalThisOrFallback().console || {};
    var stdSerializers = {
      mapHttpRequest: mock,
      mapHttpResponse: mock,
      wrapRequestSerializer: passthrough,
      wrapResponseSerializer: passthrough,
      wrapErrorSerializer: passthrough,
      req: mock,
      res: mock,
      err: asErrValue
    };
    function shouldSerialize(serialize, serializers) {
      if (Array.isArray(serialize)) {
        const hasToFilter = serialize.filter(function(k5) {
          return k5 !== "!stdSerializers.err";
        });
        return hasToFilter;
      } else if (serialize === true) {
        return Object.keys(serializers);
      }
      return false;
    }
    function pino(opts) {
      opts = opts || {};
      opts.browser = opts.browser || {};
      const transmit2 = opts.browser.transmit;
      if (transmit2 && typeof transmit2.send !== "function") {
        throw Error("pino: transmit option must have a send function");
      }
      const proto = opts.browser.write || _console;
      if (opts.browser.write)
        opts.browser.asObject = true;
      const serializers = opts.serializers || {};
      const serialize = shouldSerialize(opts.browser.serialize, serializers);
      let stdErrSerialize = opts.browser.serialize;
      if (Array.isArray(opts.browser.serialize) && opts.browser.serialize.indexOf("!stdSerializers.err") > -1)
        stdErrSerialize = false;
      const levels = ["error", "fatal", "warn", "info", "debug", "trace"];
      if (typeof proto === "function") {
        proto.error = proto.fatal = proto.warn = proto.info = proto.debug = proto.trace = proto;
      }
      if (opts.enabled === false)
        opts.level = "silent";
      const level = opts.level || "info";
      const logger = Object.create(proto);
      if (!logger.log)
        logger.log = noop;
      Object.defineProperty(logger, "levelVal", {
        get: getLevelVal
      });
      Object.defineProperty(logger, "level", {
        get: getLevel,
        set: setLevel
      });
      const setOpts = {
        transmit: transmit2,
        serialize,
        asObject: opts.browser.asObject,
        levels,
        timestamp: getTimeFunction(opts)
      };
      logger.levels = pino.levels;
      logger.level = level;
      logger.setMaxListeners = logger.getMaxListeners = logger.emit = logger.addListener = logger.on = logger.prependListener = logger.once = logger.prependOnceListener = logger.removeListener = logger.removeAllListeners = logger.listeners = logger.listenerCount = logger.eventNames = logger.write = logger.flush = noop;
      logger.serializers = serializers;
      logger._serialize = serialize;
      logger._stdErrSerialize = stdErrSerialize;
      logger.child = child;
      if (transmit2)
        logger._logEvent = createLogEventShape();
      function getLevelVal() {
        return this.level === "silent" ? Infinity : this.levels.values[this.level];
      }
      function getLevel() {
        return this._level;
      }
      function setLevel(level2) {
        if (level2 !== "silent" && !this.levels.values[level2]) {
          throw Error("unknown level " + level2);
        }
        this._level = level2;
        set2(setOpts, logger, "error", "log");
        set2(setOpts, logger, "fatal", "error");
        set2(setOpts, logger, "warn", "error");
        set2(setOpts, logger, "info", "log");
        set2(setOpts, logger, "debug", "log");
        set2(setOpts, logger, "trace", "log");
      }
      function child(bindings, childOptions) {
        if (!bindings) {
          throw new Error("missing bindings for child Pino");
        }
        childOptions = childOptions || {};
        if (serialize && bindings.serializers) {
          childOptions.serializers = bindings.serializers;
        }
        const childOptionsSerializers = childOptions.serializers;
        if (serialize && childOptionsSerializers) {
          var childSerializers = Object.assign({}, serializers, childOptionsSerializers);
          var childSerialize = opts.browser.serialize === true ? Object.keys(childSerializers) : serialize;
          delete bindings.serializers;
          applySerializers([bindings], childSerialize, childSerializers, this._stdErrSerialize);
        }
        function Child(parent) {
          this._childLevel = (parent._childLevel | 0) + 1;
          this.error = bind(parent, bindings, "error");
          this.fatal = bind(parent, bindings, "fatal");
          this.warn = bind(parent, bindings, "warn");
          this.info = bind(parent, bindings, "info");
          this.debug = bind(parent, bindings, "debug");
          this.trace = bind(parent, bindings, "trace");
          if (childSerializers) {
            this.serializers = childSerializers;
            this._serialize = childSerialize;
          }
          if (transmit2) {
            this._logEvent = createLogEventShape(
              [].concat(parent._logEvent.bindings, bindings)
            );
          }
        }
        Child.prototype = this;
        return new Child(this);
      }
      return logger;
    }
    pino.levels = {
      values: {
        fatal: 60,
        error: 50,
        warn: 40,
        info: 30,
        debug: 20,
        trace: 10
      },
      labels: {
        10: "trace",
        20: "debug",
        30: "info",
        40: "warn",
        50: "error",
        60: "fatal"
      }
    };
    pino.stdSerializers = stdSerializers;
    pino.stdTimeFunctions = Object.assign({}, { nullTime, epochTime, unixTime, isoTime });
    function set2(opts, logger, level, fallback) {
      const proto = Object.getPrototypeOf(logger);
      logger[level] = logger.levelVal > logger.levels.values[level] ? noop : proto[level] ? proto[level] : _console[level] || _console[fallback] || noop;
      wrap(opts, logger, level);
    }
    function wrap(opts, logger, level) {
      if (!opts.transmit && logger[level] === noop)
        return;
      logger[level] = function(write) {
        return function LOG() {
          const ts3 = opts.timestamp();
          const args = new Array(arguments.length);
          const proto = Object.getPrototypeOf && Object.getPrototypeOf(this) === _console ? _console : this;
          for (var i3 = 0; i3 < args.length; i3++)
            args[i3] = arguments[i3];
          if (opts.serialize && !opts.asObject) {
            applySerializers(args, this._serialize, this.serializers, this._stdErrSerialize);
          }
          if (opts.asObject)
            write.call(proto, asObject(this, level, args, ts3));
          else
            write.apply(proto, args);
          if (opts.transmit) {
            const transmitLevel = opts.transmit.level || logger.level;
            const transmitValue = pino.levels.values[transmitLevel];
            const methodValue = pino.levels.values[level];
            if (methodValue < transmitValue)
              return;
            transmit(this, {
              ts: ts3,
              methodLevel: level,
              methodValue,
              transmitLevel,
              transmitValue: pino.levels.values[opts.transmit.level || logger.level],
              send: opts.transmit.send,
              val: logger.levelVal
            }, args);
          }
        };
      }(logger[level]);
    }
    function asObject(logger, level, args, ts3) {
      if (logger._serialize)
        applySerializers(args, logger._serialize, logger.serializers, logger._stdErrSerialize);
      const argsCloned = args.slice();
      let msg = argsCloned[0];
      const o = {};
      if (ts3) {
        o.time = ts3;
      }
      o.level = pino.levels.values[level];
      let lvl = (logger._childLevel | 0) + 1;
      if (lvl < 1)
        lvl = 1;
      if (msg !== null && typeof msg === "object") {
        while (lvl-- && typeof argsCloned[0] === "object") {
          Object.assign(o, argsCloned.shift());
        }
        msg = argsCloned.length ? format(argsCloned.shift(), argsCloned) : void 0;
      } else if (typeof msg === "string")
        msg = format(argsCloned.shift(), argsCloned);
      if (msg !== void 0)
        o.msg = msg;
      return o;
    }
    function applySerializers(args, serialize, serializers, stdErrSerialize) {
      for (const i3 in args) {
        if (stdErrSerialize && args[i3] instanceof Error) {
          args[i3] = pino.stdSerializers.err(args[i3]);
        } else if (typeof args[i3] === "object" && !Array.isArray(args[i3])) {
          for (const k5 in args[i3]) {
            if (serialize && serialize.indexOf(k5) > -1 && k5 in serializers) {
              args[i3][k5] = serializers[k5](args[i3][k5]);
            }
          }
        }
      }
    }
    function bind(parent, bindings, level) {
      return function() {
        const args = new Array(1 + arguments.length);
        args[0] = bindings;
        for (var i3 = 1; i3 < args.length; i3++) {
          args[i3] = arguments[i3 - 1];
        }
        return parent[level].apply(this, args);
      };
    }
    function transmit(logger, opts, args) {
      const send = opts.send;
      const ts3 = opts.ts;
      const methodLevel = opts.methodLevel;
      const methodValue = opts.methodValue;
      const val = opts.val;
      const bindings = logger._logEvent.bindings;
      applySerializers(
        args,
        logger._serialize || Object.keys(logger.serializers),
        logger.serializers,
        logger._stdErrSerialize === void 0 ? true : logger._stdErrSerialize
      );
      logger._logEvent.ts = ts3;
      logger._logEvent.messages = args.filter(function(arg) {
        return bindings.indexOf(arg) === -1;
      });
      logger._logEvent.level.label = methodLevel;
      logger._logEvent.level.value = methodValue;
      send(methodLevel, logger._logEvent, val);
      logger._logEvent = createLogEventShape(bindings);
    }
    function createLogEventShape(bindings) {
      return {
        ts: 0,
        messages: [],
        bindings: bindings || [],
        level: { label: "", value: 0 }
      };
    }
    function asErrValue(err) {
      const obj = {
        type: err.constructor.name,
        msg: err.message,
        stack: err.stack
      };
      for (const key in err) {
        if (obj[key] === void 0) {
          obj[key] = err[key];
        }
      }
      return obj;
    }
    function getTimeFunction(opts) {
      if (typeof opts.timestamp === "function") {
        return opts.timestamp;
      }
      if (opts.timestamp === false) {
        return nullTime;
      }
      return epochTime;
    }
    function mock() {
      return {};
    }
    function passthrough(a2) {
      return a2;
    }
    function noop() {
    }
    function nullTime() {
      return false;
    }
    function epochTime() {
      return Date.now();
    }
    function unixTime() {
      return Math.round(Date.now() / 1e3);
    }
    function isoTime() {
      return new Date(Date.now()).toISOString();
    }
    function pfGlobalThisOrFallback() {
      function defd(o) {
        return typeof o !== "undefined" && o;
      }
      try {
        if (typeof globalThis !== "undefined")
          return globalThis;
        Object.defineProperty(Object.prototype, "globalThis", {
          get: function() {
            delete Object.prototype.globalThis;
            return this.globalThis = this;
          },
          configurable: true
        });
        return globalThis;
      } catch (e) {
        return defd(self) || defd(window) || defd(this) || {};
      }
    }
  }
});

// node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/browser.js
var require_browser3 = __commonJS({
  "node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/browser.js"(exports, module) {
    "use strict";
    module.exports = function() {
      throw new Error(
        "ws does not work in the browser. Browser clients must use the native WebSocket object"
      );
    };
  }
});

// node_modules/lodash.isequal/index.js
var require_lodash = __commonJS({
  "node_modules/lodash.isequal/index.js"(exports, module) {
    var LARGE_ARRAY_SIZE = 200;
    var HASH_UNDEFINED = "__lodash_hash_undefined__";
    var COMPARE_PARTIAL_FLAG = 1;
    var COMPARE_UNORDERED_FLAG = 2;
    var MAX_SAFE_INTEGER = 9007199254740991;
    var argsTag = "[object Arguments]";
    var arrayTag = "[object Array]";
    var asyncTag = "[object AsyncFunction]";
    var boolTag = "[object Boolean]";
    var dateTag = "[object Date]";
    var errorTag = "[object Error]";
    var funcTag = "[object Function]";
    var genTag = "[object GeneratorFunction]";
    var mapTag = "[object Map]";
    var numberTag = "[object Number]";
    var nullTag = "[object Null]";
    var objectTag = "[object Object]";
    var promiseTag = "[object Promise]";
    var proxyTag = "[object Proxy]";
    var regexpTag = "[object RegExp]";
    var setTag = "[object Set]";
    var stringTag = "[object String]";
    var symbolTag = "[object Symbol]";
    var undefinedTag = "[object Undefined]";
    var weakMapTag = "[object WeakMap]";
    var arrayBufferTag = "[object ArrayBuffer]";
    var dataViewTag = "[object DataView]";
    var float32Tag = "[object Float32Array]";
    var float64Tag = "[object Float64Array]";
    var int8Tag = "[object Int8Array]";
    var int16Tag = "[object Int16Array]";
    var int32Tag = "[object Int32Array]";
    var uint8Tag = "[object Uint8Array]";
    var uint8ClampedTag = "[object Uint8ClampedArray]";
    var uint16Tag = "[object Uint16Array]";
    var uint32Tag = "[object Uint32Array]";
    var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
    var reIsHostCtor = /^\[object .+?Constructor\]$/;
    var reIsUint = /^(?:0|[1-9]\d*)$/;
    var typedArrayTags = {};
    typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
    typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
    var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
    var freeSelf = typeof self == "object" && self && self.Object === Object && self;
    var root = freeGlobal || freeSelf || Function("return this")();
    var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
    var freeModule = freeExports && typeof module == "object" && module && !module.nodeType && module;
    var moduleExports = freeModule && freeModule.exports === freeExports;
    var freeProcess = moduleExports && freeGlobal.process;
    var nodeUtil = function() {
      try {
        return freeProcess && freeProcess.binding && freeProcess.binding("util");
      } catch (e) {
      }
    }();
    var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
    function arrayFilter(array, predicate) {
      var index = -1, length2 = array == null ? 0 : array.length, resIndex = 0, result = [];
      while (++index < length2) {
        var value = array[index];
        if (predicate(value, index, array)) {
          result[resIndex++] = value;
        }
      }
      return result;
    }
    function arrayPush(array, values) {
      var index = -1, length2 = values.length, offset = array.length;
      while (++index < length2) {
        array[offset + index] = values[index];
      }
      return array;
    }
    function arraySome(array, predicate) {
      var index = -1, length2 = array == null ? 0 : array.length;
      while (++index < length2) {
        if (predicate(array[index], index, array)) {
          return true;
        }
      }
      return false;
    }
    function baseTimes(n3, iteratee) {
      var index = -1, result = Array(n3);
      while (++index < n3) {
        result[index] = iteratee(index);
      }
      return result;
    }
    function baseUnary(func) {
      return function(value) {
        return func(value);
      };
    }
    function cacheHas(cache, key) {
      return cache.has(key);
    }
    function getValue(object, key) {
      return object == null ? void 0 : object[key];
    }
    function mapToArray(map) {
      var index = -1, result = Array(map.size);
      map.forEach(function(value, key) {
        result[++index] = [key, value];
      });
      return result;
    }
    function overArg(func, transform) {
      return function(arg) {
        return func(transform(arg));
      };
    }
    function setToArray(set2) {
      var index = -1, result = Array(set2.size);
      set2.forEach(function(value) {
        result[++index] = value;
      });
      return result;
    }
    var arrayProto = Array.prototype;
    var funcProto = Function.prototype;
    var objectProto = Object.prototype;
    var coreJsData = root["__core-js_shared__"];
    var funcToString = funcProto.toString;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var maskSrcKey = function() {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
      return uid ? "Symbol(src)_1." + uid : "";
    }();
    var nativeObjectToString = objectProto.toString;
    var reIsNative = RegExp(
      "^" + funcToString.call(hasOwnProperty).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
    );
    var Buffer2 = moduleExports ? root.Buffer : void 0;
    var Symbol2 = root.Symbol;
    var Uint8Array2 = root.Uint8Array;
    var propertyIsEnumerable = objectProto.propertyIsEnumerable;
    var splice = arrayProto.splice;
    var symToStringTag = Symbol2 ? Symbol2.toStringTag : void 0;
    var nativeGetSymbols = Object.getOwnPropertySymbols;
    var nativeIsBuffer = Buffer2 ? Buffer2.isBuffer : void 0;
    var nativeKeys = overArg(Object.keys, Object);
    var DataView2 = getNative(root, "DataView");
    var Map2 = getNative(root, "Map");
    var Promise2 = getNative(root, "Promise");
    var Set2 = getNative(root, "Set");
    var WeakMap2 = getNative(root, "WeakMap");
    var nativeCreate = getNative(Object, "create");
    var dataViewCtorString = toSource(DataView2);
    var mapCtorString = toSource(Map2);
    var promiseCtorString = toSource(Promise2);
    var setCtorString = toSource(Set2);
    var weakMapCtorString = toSource(WeakMap2);
    var symbolProto = Symbol2 ? Symbol2.prototype : void 0;
    var symbolValueOf = symbolProto ? symbolProto.valueOf : void 0;
    function Hash(entries) {
      var index = -1, length2 = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length2) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
      this.size = 0;
    }
    function hashDelete(key) {
      var result = this.has(key) && delete this.__data__[key];
      this.size -= result ? 1 : 0;
      return result;
    }
    function hashGet(key) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? void 0 : result;
      }
      return hasOwnProperty.call(data, key) ? data[key] : void 0;
    }
    function hashHas(key) {
      var data = this.__data__;
      return nativeCreate ? data[key] !== void 0 : hasOwnProperty.call(data, key);
    }
    function hashSet(key, value) {
      var data = this.__data__;
      this.size += this.has(key) ? 0 : 1;
      data[key] = nativeCreate && value === void 0 ? HASH_UNDEFINED : value;
      return this;
    }
    Hash.prototype.clear = hashClear;
    Hash.prototype["delete"] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;
    function ListCache(entries) {
      var index = -1, length2 = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length2) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    function listCacheClear() {
      this.__data__ = [];
      this.size = 0;
    }
    function listCacheDelete(key) {
      var data = this.__data__, index = assocIndexOf(data, key);
      if (index < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index, 1);
      }
      --this.size;
      return true;
    }
    function listCacheGet(key) {
      var data = this.__data__, index = assocIndexOf(data, key);
      return index < 0 ? void 0 : data[index][1];
    }
    function listCacheHas(key) {
      return assocIndexOf(this.__data__, key) > -1;
    }
    function listCacheSet(key, value) {
      var data = this.__data__, index = assocIndexOf(data, key);
      if (index < 0) {
        ++this.size;
        data.push([key, value]);
      } else {
        data[index][1] = value;
      }
      return this;
    }
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype["delete"] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;
    function MapCache(entries) {
      var index = -1, length2 = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length2) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    function mapCacheClear() {
      this.size = 0;
      this.__data__ = {
        "hash": new Hash(),
        "map": new (Map2 || ListCache)(),
        "string": new Hash()
      };
    }
    function mapCacheDelete(key) {
      var result = getMapData(this, key)["delete"](key);
      this.size -= result ? 1 : 0;
      return result;
    }
    function mapCacheGet(key) {
      return getMapData(this, key).get(key);
    }
    function mapCacheHas(key) {
      return getMapData(this, key).has(key);
    }
    function mapCacheSet(key, value) {
      var data = getMapData(this, key), size = data.size;
      data.set(key, value);
      this.size += data.size == size ? 0 : 1;
      return this;
    }
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype["delete"] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;
    function SetCache(values) {
      var index = -1, length2 = values == null ? 0 : values.length;
      this.__data__ = new MapCache();
      while (++index < length2) {
        this.add(values[index]);
      }
    }
    function setCacheAdd(value) {
      this.__data__.set(value, HASH_UNDEFINED);
      return this;
    }
    function setCacheHas(value) {
      return this.__data__.has(value);
    }
    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
    SetCache.prototype.has = setCacheHas;
    function Stack(entries) {
      var data = this.__data__ = new ListCache(entries);
      this.size = data.size;
    }
    function stackClear() {
      this.__data__ = new ListCache();
      this.size = 0;
    }
    function stackDelete(key) {
      var data = this.__data__, result = data["delete"](key);
      this.size = data.size;
      return result;
    }
    function stackGet(key) {
      return this.__data__.get(key);
    }
    function stackHas(key) {
      return this.__data__.has(key);
    }
    function stackSet(key, value) {
      var data = this.__data__;
      if (data instanceof ListCache) {
        var pairs = data.__data__;
        if (!Map2 || pairs.length < LARGE_ARRAY_SIZE - 1) {
          pairs.push([key, value]);
          this.size = ++data.size;
          return this;
        }
        data = this.__data__ = new MapCache(pairs);
      }
      data.set(key, value);
      this.size = data.size;
      return this;
    }
    Stack.prototype.clear = stackClear;
    Stack.prototype["delete"] = stackDelete;
    Stack.prototype.get = stackGet;
    Stack.prototype.has = stackHas;
    Stack.prototype.set = stackSet;
    function arrayLikeKeys(value, inherited) {
      var isArr = isArray(value), isArg = !isArr && isArguments(value), isBuff = !isArr && !isArg && isBuffer(value), isType = !isArr && !isArg && !isBuff && isTypedArray(value), skipIndexes = isArr || isArg || isBuff || isType, result = skipIndexes ? baseTimes(value.length, String) : [], length2 = result.length;
      for (var key in value) {
        if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && // Safari 9 has enumerable `arguments.length` in strict mode.
        (key == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
        isBuff && (key == "offset" || key == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
        isType && (key == "buffer" || key == "byteLength" || key == "byteOffset") || // Skip index properties.
        isIndex(key, length2)))) {
          result.push(key);
        }
      }
      return result;
    }
    function assocIndexOf(array, key) {
      var length2 = array.length;
      while (length2--) {
        if (eq(array[length2][0], key)) {
          return length2;
        }
      }
      return -1;
    }
    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
      var result = keysFunc(object);
      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
    }
    function baseGetTag(value) {
      if (value == null) {
        return value === void 0 ? undefinedTag : nullTag;
      }
      return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
    }
    function baseIsArguments(value) {
      return isObjectLike(value) && baseGetTag(value) == argsTag;
    }
    function baseIsEqual(value, other, bitmask, customizer, stack) {
      if (value === other) {
        return true;
      }
      if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {
        return value !== value && other !== other;
      }
      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
    }
    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
      var objIsArr = isArray(object), othIsArr = isArray(other), objTag = objIsArr ? arrayTag : getTag(object), othTag = othIsArr ? arrayTag : getTag(other);
      objTag = objTag == argsTag ? objectTag : objTag;
      othTag = othTag == argsTag ? objectTag : othTag;
      var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag;
      if (isSameTag && isBuffer(object)) {
        if (!isBuffer(other)) {
          return false;
        }
        objIsArr = true;
        objIsObj = false;
      }
      if (isSameTag && !objIsObj) {
        stack || (stack = new Stack());
        return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
      }
      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
        var objIsWrapped = objIsObj && hasOwnProperty.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty.call(other, "__wrapped__");
        if (objIsWrapped || othIsWrapped) {
          var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
          stack || (stack = new Stack());
          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
        }
      }
      if (!isSameTag) {
        return false;
      }
      stack || (stack = new Stack());
      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
    }
    function baseIsNative(value) {
      if (!isObject(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }
    function baseIsTypedArray(value) {
      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
    }
    function baseKeys(object) {
      if (!isPrototype(object)) {
        return nativeKeys(object);
      }
      var result = [];
      for (var key in Object(object)) {
        if (hasOwnProperty.call(object, key) && key != "constructor") {
          result.push(key);
        }
      }
      return result;
    }
    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG, arrLength = array.length, othLength = other.length;
      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
        return false;
      }
      var stacked = stack.get(array);
      if (stacked && stack.get(other)) {
        return stacked == other;
      }
      var index = -1, result = true, seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : void 0;
      stack.set(array, other);
      stack.set(other, array);
      while (++index < arrLength) {
        var arrValue = array[index], othValue = other[index];
        if (customizer) {
          var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
        }
        if (compared !== void 0) {
          if (compared) {
            continue;
          }
          result = false;
          break;
        }
        if (seen) {
          if (!arraySome(other, function(othValue2, othIndex) {
            if (!cacheHas(seen, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack))) {
              return seen.push(othIndex);
            }
          })) {
            result = false;
            break;
          }
        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
          result = false;
          break;
        }
      }
      stack["delete"](array);
      stack["delete"](other);
      return result;
    }
    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
      switch (tag) {
        case dataViewTag:
          if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
            return false;
          }
          object = object.buffer;
          other = other.buffer;
        case arrayBufferTag:
          if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array2(object), new Uint8Array2(other))) {
            return false;
          }
          return true;
        case boolTag:
        case dateTag:
        case numberTag:
          return eq(+object, +other);
        case errorTag:
          return object.name == other.name && object.message == other.message;
        case regexpTag:
        case stringTag:
          return object == other + "";
        case mapTag:
          var convert = mapToArray;
        case setTag:
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
          convert || (convert = setToArray);
          if (object.size != other.size && !isPartial) {
            return false;
          }
          var stacked = stack.get(object);
          if (stacked) {
            return stacked == other;
          }
          bitmask |= COMPARE_UNORDERED_FLAG;
          stack.set(object, other);
          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
          stack["delete"](object);
          return result;
        case symbolTag:
          if (symbolValueOf) {
            return symbolValueOf.call(object) == symbolValueOf.call(other);
          }
      }
      return false;
    }
    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG, objProps = getAllKeys(object), objLength = objProps.length, othProps = getAllKeys(other), othLength = othProps.length;
      if (objLength != othLength && !isPartial) {
        return false;
      }
      var index = objLength;
      while (index--) {
        var key = objProps[index];
        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
          return false;
        }
      }
      var stacked = stack.get(object);
      if (stacked && stack.get(other)) {
        return stacked == other;
      }
      var result = true;
      stack.set(object, other);
      stack.set(other, object);
      var skipCtor = isPartial;
      while (++index < objLength) {
        key = objProps[index];
        var objValue = object[key], othValue = other[key];
        if (customizer) {
          var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
        }
        if (!(compared === void 0 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
          result = false;
          break;
        }
        skipCtor || (skipCtor = key == "constructor");
      }
      if (result && !skipCtor) {
        var objCtor = object.constructor, othCtor = other.constructor;
        if (objCtor != othCtor && ("constructor" in object && "constructor" in other) && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
          result = false;
        }
      }
      stack["delete"](object);
      stack["delete"](other);
      return result;
    }
    function getAllKeys(object) {
      return baseGetAllKeys(object, keys2, getSymbols);
    }
    function getMapData(map, key) {
      var data = map.__data__;
      return isKeyable(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
    }
    function getNative(object, key) {
      var value = getValue(object, key);
      return baseIsNative(value) ? value : void 0;
    }
    function getRawTag(value) {
      var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];
      try {
        value[symToStringTag] = void 0;
        var unmasked = true;
      } catch (e) {
      }
      var result = nativeObjectToString.call(value);
      if (unmasked) {
        if (isOwn) {
          value[symToStringTag] = tag;
        } else {
          delete value[symToStringTag];
        }
      }
      return result;
    }
    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
      if (object == null) {
        return [];
      }
      object = Object(object);
      return arrayFilter(nativeGetSymbols(object), function(symbol) {
        return propertyIsEnumerable.call(object, symbol);
      });
    };
    var getTag = baseGetTag;
    if (DataView2 && getTag(new DataView2(new ArrayBuffer(1))) != dataViewTag || Map2 && getTag(new Map2()) != mapTag || Promise2 && getTag(Promise2.resolve()) != promiseTag || Set2 && getTag(new Set2()) != setTag || WeakMap2 && getTag(new WeakMap2()) != weakMapTag) {
      getTag = function(value) {
        var result = baseGetTag(value), Ctor = result == objectTag ? value.constructor : void 0, ctorString = Ctor ? toSource(Ctor) : "";
        if (ctorString) {
          switch (ctorString) {
            case dataViewCtorString:
              return dataViewTag;
            case mapCtorString:
              return mapTag;
            case promiseCtorString:
              return promiseTag;
            case setCtorString:
              return setTag;
            case weakMapCtorString:
              return weakMapTag;
          }
        }
        return result;
      };
    }
    function isIndex(value, length2) {
      length2 = length2 == null ? MAX_SAFE_INTEGER : length2;
      return !!length2 && (typeof value == "number" || reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length2);
    }
    function isKeyable(value) {
      var type = typeof value;
      return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
    }
    function isMasked(func) {
      return !!maskSrcKey && maskSrcKey in func;
    }
    function isPrototype(value) {
      var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto;
      return value === proto;
    }
    function objectToString(value) {
      return nativeObjectToString.call(value);
    }
    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e) {
        }
        try {
          return func + "";
        } catch (e) {
        }
      }
      return "";
    }
    function eq(value, other) {
      return value === other || value !== value && other !== other;
    }
    var isArguments = baseIsArguments(function() {
      return arguments;
    }()) ? baseIsArguments : function(value) {
      return isObjectLike(value) && hasOwnProperty.call(value, "callee") && !propertyIsEnumerable.call(value, "callee");
    };
    var isArray = Array.isArray;
    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction(value);
    }
    var isBuffer = nativeIsBuffer || stubFalse;
    function isEqual(value, other) {
      return baseIsEqual(value, other);
    }
    function isFunction(value) {
      if (!isObject(value)) {
        return false;
      }
      var tag = baseGetTag(value);
      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
    }
    function isLength(value) {
      return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }
    function isObject(value) {
      var type = typeof value;
      return value != null && (type == "object" || type == "function");
    }
    function isObjectLike(value) {
      return value != null && typeof value == "object";
    }
    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
    function keys2(object) {
      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
    }
    function stubArray() {
      return [];
    }
    function stubFalse() {
      return false;
    }
    module.exports = isEqual;
  }
});

// node_modules/@walletconnect/ethereum-provider/dist/index.es.js
var import_events9 = __toESM(require_events());

// node_modules/@walletconnect/utils/dist/index.es.js
var import_chacha20poly1305 = __toESM(require_chacha20poly1305());
var import_hkdf = __toESM(require_hkdf());
var import_random = __toESM(require_random());
var import_sha256 = __toESM(require_sha256());
var ue = __toESM(require_x25519());

// node_modules/uint8arrays/esm/src/util/as-uint8array.js
function asUint8Array(buf) {
  if (globalThis.Buffer != null) {
    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);
  }
  return buf;
}

// node_modules/uint8arrays/esm/src/alloc.js
function allocUnsafe(size = 0) {
  if (globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null) {
    return asUint8Array(globalThis.Buffer.allocUnsafe(size));
  }
  return new Uint8Array(size);
}

// node_modules/uint8arrays/esm/src/concat.js
function concat(arrays, length2) {
  if (!length2) {
    length2 = arrays.reduce((acc, curr) => acc + curr.length, 0);
  }
  const output = allocUnsafe(length2);
  let offset = 0;
  for (const arr of arrays) {
    output.set(arr, offset);
    offset += arr.length;
  }
  return asUint8Array(output);
}

// node_modules/multiformats/esm/src/bases/identity.js
var identity_exports = {};
__export(identity_exports, {
  identity: () => identity
});

// node_modules/multiformats/esm/vendor/base-x.js
function base(ALPHABET, name2) {
  if (ALPHABET.length >= 255) {
    throw new TypeError("Alphabet too long");
  }
  var BASE_MAP = new Uint8Array(256);
  for (var j7 = 0; j7 < BASE_MAP.length; j7++) {
    BASE_MAP[j7] = 255;
  }
  for (var i3 = 0; i3 < ALPHABET.length; i3++) {
    var x5 = ALPHABET.charAt(i3);
    var xc = x5.charCodeAt(0);
    if (BASE_MAP[xc] !== 255) {
      throw new TypeError(x5 + " is ambiguous");
    }
    BASE_MAP[xc] = i3;
  }
  var BASE = ALPHABET.length;
  var LEADER = ALPHABET.charAt(0);
  var FACTOR = Math.log(BASE) / Math.log(256);
  var iFACTOR = Math.log(256) / Math.log(BASE);
  function encode5(source) {
    if (source instanceof Uint8Array)
      ;
    else if (ArrayBuffer.isView(source)) {
      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);
    } else if (Array.isArray(source)) {
      source = Uint8Array.from(source);
    }
    if (!(source instanceof Uint8Array)) {
      throw new TypeError("Expected Uint8Array");
    }
    if (source.length === 0) {
      return "";
    }
    var zeroes = 0;
    var length2 = 0;
    var pbegin = 0;
    var pend = source.length;
    while (pbegin !== pend && source[pbegin] === 0) {
      pbegin++;
      zeroes++;
    }
    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;
    var b58 = new Uint8Array(size);
    while (pbegin !== pend) {
      var carry = source[pbegin];
      var i4 = 0;
      for (var it1 = size - 1; (carry !== 0 || i4 < length2) && it1 !== -1; it1--, i4++) {
        carry += 256 * b58[it1] >>> 0;
        b58[it1] = carry % BASE >>> 0;
        carry = carry / BASE >>> 0;
      }
      if (carry !== 0) {
        throw new Error("Non-zero carry");
      }
      length2 = i4;
      pbegin++;
    }
    var it22 = size - length2;
    while (it22 !== size && b58[it22] === 0) {
      it22++;
    }
    var str = LEADER.repeat(zeroes);
    for (; it22 < size; ++it22) {
      str += ALPHABET.charAt(b58[it22]);
    }
    return str;
  }
  function decodeUnsafe(source) {
    if (typeof source !== "string") {
      throw new TypeError("Expected String");
    }
    if (source.length === 0) {
      return new Uint8Array();
    }
    var psz = 0;
    if (source[psz] === " ") {
      return;
    }
    var zeroes = 0;
    var length2 = 0;
    while (source[psz] === LEADER) {
      zeroes++;
      psz++;
    }
    var size = (source.length - psz) * FACTOR + 1 >>> 0;
    var b256 = new Uint8Array(size);
    while (source[psz]) {
      var carry = BASE_MAP[source.charCodeAt(psz)];
      if (carry === 255) {
        return;
      }
      var i4 = 0;
      for (var it32 = size - 1; (carry !== 0 || i4 < length2) && it32 !== -1; it32--, i4++) {
        carry += BASE * b256[it32] >>> 0;
        b256[it32] = carry % 256 >>> 0;
        carry = carry / 256 >>> 0;
      }
      if (carry !== 0) {
        throw new Error("Non-zero carry");
      }
      length2 = i4;
      psz++;
    }
    if (source[psz] === " ") {
      return;
    }
    var it4 = size - length2;
    while (it4 !== size && b256[it4] === 0) {
      it4++;
    }
    var vch = new Uint8Array(zeroes + (size - it4));
    var j8 = zeroes;
    while (it4 !== size) {
      vch[j8++] = b256[it4++];
    }
    return vch;
  }
  function decode6(string2) {
    var buffer = decodeUnsafe(string2);
    if (buffer) {
      return buffer;
    }
    throw new Error(`Non-${name2} character`);
  }
  return {
    encode: encode5,
    decodeUnsafe,
    decode: decode6
  };
}
var src = base;
var _brrp__multiformats_scope_baseX = src;
var base_x_default = _brrp__multiformats_scope_baseX;

// node_modules/multiformats/esm/src/bytes.js
var empty = new Uint8Array(0);
var equals = (aa, bb) => {
  if (aa === bb)
    return true;
  if (aa.byteLength !== bb.byteLength) {
    return false;
  }
  for (let ii = 0; ii < aa.byteLength; ii++) {
    if (aa[ii] !== bb[ii]) {
      return false;
    }
  }
  return true;
};
var coerce = (o) => {
  if (o instanceof Uint8Array && o.constructor.name === "Uint8Array")
    return o;
  if (o instanceof ArrayBuffer)
    return new Uint8Array(o);
  if (ArrayBuffer.isView(o)) {
    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);
  }
  throw new Error("Unknown type, must be binary type");
};
var fromString = (str) => new TextEncoder().encode(str);
var toString = (b6) => new TextDecoder().decode(b6);

// node_modules/multiformats/esm/src/bases/base.js
var Encoder = class {
  constructor(name2, prefix, baseEncode) {
    this.name = name2;
    this.prefix = prefix;
    this.baseEncode = baseEncode;
  }
  encode(bytes) {
    if (bytes instanceof Uint8Array) {
      return `${this.prefix}${this.baseEncode(bytes)}`;
    } else {
      throw Error("Unknown type, must be binary type");
    }
  }
};
var Decoder = class {
  constructor(name2, prefix, baseDecode) {
    this.name = name2;
    this.prefix = prefix;
    if (prefix.codePointAt(0) === void 0) {
      throw new Error("Invalid prefix character");
    }
    this.prefixCodePoint = prefix.codePointAt(0);
    this.baseDecode = baseDecode;
  }
  decode(text) {
    if (typeof text === "string") {
      if (text.codePointAt(0) !== this.prefixCodePoint) {
        throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);
      }
      return this.baseDecode(text.slice(this.prefix.length));
    } else {
      throw Error("Can only multibase decode strings");
    }
  }
  or(decoder) {
    return or(this, decoder);
  }
};
var ComposedDecoder = class {
  constructor(decoders) {
    this.decoders = decoders;
  }
  or(decoder) {
    return or(this, decoder);
  }
  decode(input) {
    const prefix = input[0];
    const decoder = this.decoders[prefix];
    if (decoder) {
      return decoder.decode(input);
    } else {
      throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);
    }
  }
};
var or = (left, right) => new ComposedDecoder({
  ...left.decoders || { [left.prefix]: left },
  ...right.decoders || { [right.prefix]: right }
});
var Codec = class {
  constructor(name2, prefix, baseEncode, baseDecode) {
    this.name = name2;
    this.prefix = prefix;
    this.baseEncode = baseEncode;
    this.baseDecode = baseDecode;
    this.encoder = new Encoder(name2, prefix, baseEncode);
    this.decoder = new Decoder(name2, prefix, baseDecode);
  }
  encode(input) {
    return this.encoder.encode(input);
  }
  decode(input) {
    return this.decoder.decode(input);
  }
};
var from = ({ name: name2, prefix, encode: encode5, decode: decode6 }) => new Codec(name2, prefix, encode5, decode6);
var baseX = ({ prefix, name: name2, alphabet: alphabet2 }) => {
  const { encode: encode5, decode: decode6 } = base_x_default(alphabet2, name2);
  return from({
    prefix,
    name: name2,
    encode: encode5,
    decode: (text) => coerce(decode6(text))
  });
};
var decode = (string2, alphabet2, bitsPerChar, name2) => {
  const codes = {};
  for (let i3 = 0; i3 < alphabet2.length; ++i3) {
    codes[alphabet2[i3]] = i3;
  }
  let end = string2.length;
  while (string2[end - 1] === "=") {
    --end;
  }
  const out = new Uint8Array(end * bitsPerChar / 8 | 0);
  let bits = 0;
  let buffer = 0;
  let written = 0;
  for (let i3 = 0; i3 < end; ++i3) {
    const value = codes[string2[i3]];
    if (value === void 0) {
      throw new SyntaxError(`Non-${name2} character`);
    }
    buffer = buffer << bitsPerChar | value;
    bits += bitsPerChar;
    if (bits >= 8) {
      bits -= 8;
      out[written++] = 255 & buffer >> bits;
    }
  }
  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {
    throw new SyntaxError("Unexpected end of data");
  }
  return out;
};
var encode = (data, alphabet2, bitsPerChar) => {
  const pad = alphabet2[alphabet2.length - 1] === "=";
  const mask = (1 << bitsPerChar) - 1;
  let out = "";
  let bits = 0;
  let buffer = 0;
  for (let i3 = 0; i3 < data.length; ++i3) {
    buffer = buffer << 8 | data[i3];
    bits += 8;
    while (bits > bitsPerChar) {
      bits -= bitsPerChar;
      out += alphabet2[mask & buffer >> bits];
    }
  }
  if (bits) {
    out += alphabet2[mask & buffer << bitsPerChar - bits];
  }
  if (pad) {
    while (out.length * bitsPerChar & 7) {
      out += "=";
    }
  }
  return out;
};
var rfc4648 = ({ name: name2, prefix, bitsPerChar, alphabet: alphabet2 }) => {
  return from({
    prefix,
    name: name2,
    encode(input) {
      return encode(input, alphabet2, bitsPerChar);
    },
    decode(input) {
      return decode(input, alphabet2, bitsPerChar, name2);
    }
  });
};

// node_modules/multiformats/esm/src/bases/identity.js
var identity = from({
  prefix: "\0",
  name: "identity",
  encode: (buf) => toString(buf),
  decode: (str) => fromString(str)
});

// node_modules/multiformats/esm/src/bases/base2.js
var base2_exports = {};
__export(base2_exports, {
  base2: () => base2
});
var base2 = rfc4648({
  prefix: "0",
  name: "base2",
  alphabet: "01",
  bitsPerChar: 1
});

// node_modules/multiformats/esm/src/bases/base8.js
var base8_exports = {};
__export(base8_exports, {
  base8: () => base8
});
var base8 = rfc4648({
  prefix: "7",
  name: "base8",
  alphabet: "01234567",
  bitsPerChar: 3
});

// node_modules/multiformats/esm/src/bases/base10.js
var base10_exports = {};
__export(base10_exports, {
  base10: () => base10
});
var base10 = baseX({
  prefix: "9",
  name: "base10",
  alphabet: "0123456789"
});

// node_modules/multiformats/esm/src/bases/base16.js
var base16_exports = {};
__export(base16_exports, {
  base16: () => base16,
  base16upper: () => base16upper
});
var base16 = rfc4648({
  prefix: "f",
  name: "base16",
  alphabet: "0123456789abcdef",
  bitsPerChar: 4
});
var base16upper = rfc4648({
  prefix: "F",
  name: "base16upper",
  alphabet: "0123456789ABCDEF",
  bitsPerChar: 4
});

// node_modules/multiformats/esm/src/bases/base32.js
var base32_exports = {};
__export(base32_exports, {
  base32: () => base32,
  base32hex: () => base32hex,
  base32hexpad: () => base32hexpad,
  base32hexpadupper: () => base32hexpadupper,
  base32hexupper: () => base32hexupper,
  base32pad: () => base32pad,
  base32padupper: () => base32padupper,
  base32upper: () => base32upper,
  base32z: () => base32z
});
var base32 = rfc4648({
  prefix: "b",
  name: "base32",
  alphabet: "abcdefghijklmnopqrstuvwxyz234567",
  bitsPerChar: 5
});
var base32upper = rfc4648({
  prefix: "B",
  name: "base32upper",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",
  bitsPerChar: 5
});
var base32pad = rfc4648({
  prefix: "c",
  name: "base32pad",
  alphabet: "abcdefghijklmnopqrstuvwxyz234567=",
  bitsPerChar: 5
});
var base32padupper = rfc4648({
  prefix: "C",
  name: "base32padupper",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",
  bitsPerChar: 5
});
var base32hex = rfc4648({
  prefix: "v",
  name: "base32hex",
  alphabet: "0123456789abcdefghijklmnopqrstuv",
  bitsPerChar: 5
});
var base32hexupper = rfc4648({
  prefix: "V",
  name: "base32hexupper",
  alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV",
  bitsPerChar: 5
});
var base32hexpad = rfc4648({
  prefix: "t",
  name: "base32hexpad",
  alphabet: "0123456789abcdefghijklmnopqrstuv=",
  bitsPerChar: 5
});
var base32hexpadupper = rfc4648({
  prefix: "T",
  name: "base32hexpadupper",
  alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV=",
  bitsPerChar: 5
});
var base32z = rfc4648({
  prefix: "h",
  name: "base32z",
  alphabet: "ybndrfg8ejkmcpqxot1uwisza345h769",
  bitsPerChar: 5
});

// node_modules/multiformats/esm/src/bases/base36.js
var base36_exports = {};
__export(base36_exports, {
  base36: () => base36,
  base36upper: () => base36upper
});
var base36 = baseX({
  prefix: "k",
  name: "base36",
  alphabet: "0123456789abcdefghijklmnopqrstuvwxyz"
});
var base36upper = baseX({
  prefix: "K",
  name: "base36upper",
  alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"
});

// node_modules/multiformats/esm/src/bases/base58.js
var base58_exports = {};
__export(base58_exports, {
  base58btc: () => base58btc,
  base58flickr: () => base58flickr
});
var base58btc = baseX({
  name: "base58btc",
  prefix: "z",
  alphabet: "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"
});
var base58flickr = baseX({
  name: "base58flickr",
  prefix: "Z",
  alphabet: "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"
});

// node_modules/multiformats/esm/src/bases/base64.js
var base64_exports = {};
__export(base64_exports, {
  base64: () => base64,
  base64pad: () => base64pad,
  base64url: () => base64url,
  base64urlpad: () => base64urlpad
});
var base64 = rfc4648({
  prefix: "m",
  name: "base64",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
  bitsPerChar: 6
});
var base64pad = rfc4648({
  prefix: "M",
  name: "base64pad",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
  bitsPerChar: 6
});
var base64url = rfc4648({
  prefix: "u",
  name: "base64url",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",
  bitsPerChar: 6
});
var base64urlpad = rfc4648({
  prefix: "U",
  name: "base64urlpad",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",
  bitsPerChar: 6
});

// node_modules/multiformats/esm/src/bases/base256emoji.js
var base256emoji_exports = {};
__export(base256emoji_exports, {
  base256emoji: () => base256emoji
});
var alphabet = Array.from("🚀🪐☄🛰🌌🌑🌒🌓🌔🌕🌖🌗🌘🌍🌏🌎🐉☀💻🖥💾💿😂❤😍🤣😊🙏💕😭😘👍😅👏😁🔥🥰💔💖💙😢🤔😆🙄💪😉☺👌🤗💜😔😎😇🌹🤦🎉💞✌✨🤷😱😌🌸🙌😋💗💚😏💛🙂💓🤩😄😀🖤😃💯🙈👇🎶😒🤭❣😜💋👀😪😑💥🙋😞😩😡🤪👊🥳😥🤤👉💃😳✋😚😝😴🌟😬🙃🍀🌷😻😓⭐✅🥺🌈😈🤘💦✔😣🏃💐☹🎊💘😠☝😕🌺🎂🌻😐🖕💝🙊😹🗣💫💀👑🎵🤞😛🔴😤🌼😫⚽🤙☕🏆🤫👈😮🙆🍻🍃🐶💁😲🌿🧡🎁⚡🌞🎈❌✊👋😰🤨😶🤝🚶💰🍓💢🤟🙁🚨💨🤬✈🎀🍺🤓😙💟🌱😖👶🥴▶➡❓💎💸⬇😨🌚🦋😷🕺⚠🙅😟😵👎🤲🤠🤧📌🔵💅🧐🐾🍒😗🤑🌊🤯🐷☎💧😯💆👆🎤🙇🍑❄🌴💣🐸💌📍🥀🤢👅💡💩👐📸👻🤐🤮🎼🥵🚩🍎🍊👼💍📣🥂");
var alphabetBytesToChars = alphabet.reduce((p5, c4, i3) => {
  p5[i3] = c4;
  return p5;
}, []);
var alphabetCharsToBytes = alphabet.reduce((p5, c4, i3) => {
  p5[c4.codePointAt(0)] = i3;
  return p5;
}, []);
function encode2(data) {
  return data.reduce((p5, c4) => {
    p5 += alphabetBytesToChars[c4];
    return p5;
  }, "");
}
function decode2(str) {
  const byts = [];
  for (const char of str) {
    const byt = alphabetCharsToBytes[char.codePointAt(0)];
    if (byt === void 0) {
      throw new Error(`Non-base256emoji character: ${char}`);
    }
    byts.push(byt);
  }
  return new Uint8Array(byts);
}
var base256emoji = from({
  prefix: "🚀",
  name: "base256emoji",
  encode: encode2,
  decode: decode2
});

// node_modules/multiformats/esm/src/hashes/sha2-browser.js
var sha2_browser_exports = {};
__export(sha2_browser_exports, {
  sha256: () => sha256,
  sha512: () => sha512
});

// node_modules/multiformats/esm/vendor/varint.js
var encode_1 = encode3;
var MSB = 128;
var REST = 127;
var MSBALL = ~REST;
var INT = Math.pow(2, 31);
function encode3(num, out, offset) {
  out = out || [];
  offset = offset || 0;
  var oldOffset = offset;
  while (num >= INT) {
    out[offset++] = num & 255 | MSB;
    num /= 128;
  }
  while (num & MSBALL) {
    out[offset++] = num & 255 | MSB;
    num >>>= 7;
  }
  out[offset] = num | 0;
  encode3.bytes = offset - oldOffset + 1;
  return out;
}
var decode3 = read;
var MSB$1 = 128;
var REST$1 = 127;
function read(buf, offset) {
  var res = 0, offset = offset || 0, shift = 0, counter = offset, b6, l3 = buf.length;
  do {
    if (counter >= l3) {
      read.bytes = 0;
      throw new RangeError("Could not decode varint");
    }
    b6 = buf[counter++];
    res += shift < 28 ? (b6 & REST$1) << shift : (b6 & REST$1) * Math.pow(2, shift);
    shift += 7;
  } while (b6 >= MSB$1);
  read.bytes = counter - offset;
  return res;
}
var N1 = Math.pow(2, 7);
var N2 = Math.pow(2, 14);
var N3 = Math.pow(2, 21);
var N4 = Math.pow(2, 28);
var N5 = Math.pow(2, 35);
var N6 = Math.pow(2, 42);
var N7 = Math.pow(2, 49);
var N8 = Math.pow(2, 56);
var N9 = Math.pow(2, 63);
var length = function(value) {
  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;
};
var varint = {
  encode: encode_1,
  decode: decode3,
  encodingLength: length
};
var _brrp_varint = varint;
var varint_default = _brrp_varint;

// node_modules/multiformats/esm/src/varint.js
var decode4 = (data, offset = 0) => {
  const code2 = varint_default.decode(data, offset);
  return [
    code2,
    varint_default.decode.bytes
  ];
};
var encodeTo = (int, target, offset = 0) => {
  varint_default.encode(int, target, offset);
  return target;
};
var encodingLength = (int) => {
  return varint_default.encodingLength(int);
};

// node_modules/multiformats/esm/src/hashes/digest.js
var create = (code2, digest2) => {
  const size = digest2.byteLength;
  const sizeOffset = encodingLength(code2);
  const digestOffset = sizeOffset + encodingLength(size);
  const bytes = new Uint8Array(digestOffset + size);
  encodeTo(code2, bytes, 0);
  encodeTo(size, bytes, sizeOffset);
  bytes.set(digest2, digestOffset);
  return new Digest(code2, size, digest2, bytes);
};
var decode5 = (multihash) => {
  const bytes = coerce(multihash);
  const [code2, sizeOffset] = decode4(bytes);
  const [size, digestOffset] = decode4(bytes.subarray(sizeOffset));
  const digest2 = bytes.subarray(sizeOffset + digestOffset);
  if (digest2.byteLength !== size) {
    throw new Error("Incorrect length");
  }
  return new Digest(code2, size, digest2, bytes);
};
var equals2 = (a2, b6) => {
  if (a2 === b6) {
    return true;
  } else {
    return a2.code === b6.code && a2.size === b6.size && equals(a2.bytes, b6.bytes);
  }
};
var Digest = class {
  constructor(code2, size, digest2, bytes) {
    this.code = code2;
    this.size = size;
    this.digest = digest2;
    this.bytes = bytes;
  }
};

// node_modules/multiformats/esm/src/hashes/hasher.js
var from2 = ({ name: name2, code: code2, encode: encode5 }) => new Hasher(name2, code2, encode5);
var Hasher = class {
  constructor(name2, code2, encode5) {
    this.name = name2;
    this.code = code2;
    this.encode = encode5;
  }
  digest(input) {
    if (input instanceof Uint8Array) {
      const result = this.encode(input);
      return result instanceof Uint8Array ? create(this.code, result) : result.then((digest2) => create(this.code, digest2));
    } else {
      throw Error("Unknown type, must be binary type");
    }
  }
};

// node_modules/multiformats/esm/src/hashes/sha2-browser.js
var sha = (name2) => async (data) => new Uint8Array(await crypto.subtle.digest(name2, data));
var sha256 = from2({
  name: "sha2-256",
  code: 18,
  encode: sha("SHA-256")
});
var sha512 = from2({
  name: "sha2-512",
  code: 19,
  encode: sha("SHA-512")
});

// node_modules/multiformats/esm/src/hashes/identity.js
var identity_exports2 = {};
__export(identity_exports2, {
  identity: () => identity2
});
var code = 0;
var name = "identity";
var encode4 = coerce;
var digest = (input) => create(code, encode4(input));
var identity2 = {
  code,
  name,
  encode: encode4,
  digest
};

// node_modules/multiformats/esm/src/codecs/json.js
var textEncoder = new TextEncoder();
var textDecoder = new TextDecoder();

// node_modules/multiformats/esm/src/cid.js
var CID = class _CID {
  constructor(version2, code2, multihash, bytes) {
    this.code = code2;
    this.version = version2;
    this.multihash = multihash;
    this.bytes = bytes;
    this.byteOffset = bytes.byteOffset;
    this.byteLength = bytes.byteLength;
    this.asCID = this;
    this._baseCache = /* @__PURE__ */ new Map();
    Object.defineProperties(this, {
      byteOffset: hidden,
      byteLength: hidden,
      code: readonly,
      version: readonly,
      multihash: readonly,
      bytes: readonly,
      _baseCache: hidden,
      asCID: hidden
    });
  }
  toV0() {
    switch (this.version) {
      case 0: {
        return this;
      }
      default: {
        const { code: code2, multihash } = this;
        if (code2 !== DAG_PB_CODE) {
          throw new Error("Cannot convert a non dag-pb CID to CIDv0");
        }
        if (multihash.code !== SHA_256_CODE) {
          throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");
        }
        return _CID.createV0(multihash);
      }
    }
  }
  toV1() {
    switch (this.version) {
      case 0: {
        const { code: code2, digest: digest2 } = this.multihash;
        const multihash = create(code2, digest2);
        return _CID.createV1(this.code, multihash);
      }
      case 1: {
        return this;
      }
      default: {
        throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`);
      }
    }
  }
  equals(other) {
    return other && this.code === other.code && this.version === other.version && equals2(this.multihash, other.multihash);
  }
  toString(base3) {
    const { bytes, version: version2, _baseCache } = this;
    switch (version2) {
      case 0:
        return toStringV0(bytes, _baseCache, base3 || base58btc.encoder);
      default:
        return toStringV1(bytes, _baseCache, base3 || base32.encoder);
    }
  }
  toJSON() {
    return {
      code: this.code,
      version: this.version,
      hash: this.multihash.bytes
    };
  }
  get [Symbol.toStringTag]() {
    return "CID";
  }
  [Symbol.for("nodejs.util.inspect.custom")]() {
    return "CID(" + this.toString() + ")";
  }
  static isCID(value) {
    deprecate(/^0\.0/, IS_CID_DEPRECATION);
    return !!(value && (value[cidSymbol] || value.asCID === value));
  }
  get toBaseEncodedString() {
    throw new Error("Deprecated, use .toString()");
  }
  get codec() {
    throw new Error('"codec" property is deprecated, use integer "code" property instead');
  }
  get buffer() {
    throw new Error("Deprecated .buffer property, use .bytes to get Uint8Array instead");
  }
  get multibaseName() {
    throw new Error('"multibaseName" property is deprecated');
  }
  get prefix() {
    throw new Error('"prefix" property is deprecated');
  }
  static asCID(value) {
    if (value instanceof _CID) {
      return value;
    } else if (value != null && value.asCID === value) {
      const { version: version2, code: code2, multihash, bytes } = value;
      return new _CID(version2, code2, multihash, bytes || encodeCID(version2, code2, multihash.bytes));
    } else if (value != null && value[cidSymbol] === true) {
      const { version: version2, multihash, code: code2 } = value;
      const digest2 = decode5(multihash);
      return _CID.create(version2, code2, digest2);
    } else {
      return null;
    }
  }
  static create(version2, code2, digest2) {
    if (typeof code2 !== "number") {
      throw new Error("String codecs are no longer supported");
    }
    switch (version2) {
      case 0: {
        if (code2 !== DAG_PB_CODE) {
          throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE}) block encoding`);
        } else {
          return new _CID(version2, code2, digest2, digest2.bytes);
        }
      }
      case 1: {
        const bytes = encodeCID(version2, code2, digest2.bytes);
        return new _CID(version2, code2, digest2, bytes);
      }
      default: {
        throw new Error("Invalid version");
      }
    }
  }
  static createV0(digest2) {
    return _CID.create(0, DAG_PB_CODE, digest2);
  }
  static createV1(code2, digest2) {
    return _CID.create(1, code2, digest2);
  }
  static decode(bytes) {
    const [cid, remainder] = _CID.decodeFirst(bytes);
    if (remainder.length) {
      throw new Error("Incorrect length");
    }
    return cid;
  }
  static decodeFirst(bytes) {
    const specs = _CID.inspectBytes(bytes);
    const prefixSize = specs.size - specs.multihashSize;
    const multihashBytes = coerce(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));
    if (multihashBytes.byteLength !== specs.multihashSize) {
      throw new Error("Incorrect length");
    }
    const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);
    const digest2 = new Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);
    const cid = specs.version === 0 ? _CID.createV0(digest2) : _CID.createV1(specs.codec, digest2);
    return [
      cid,
      bytes.subarray(specs.size)
    ];
  }
  static inspectBytes(initialBytes) {
    let offset = 0;
    const next = () => {
      const [i3, length2] = decode4(initialBytes.subarray(offset));
      offset += length2;
      return i3;
    };
    let version2 = next();
    let codec = DAG_PB_CODE;
    if (version2 === 18) {
      version2 = 0;
      offset = 0;
    } else if (version2 === 1) {
      codec = next();
    }
    if (version2 !== 0 && version2 !== 1) {
      throw new RangeError(`Invalid CID version ${version2}`);
    }
    const prefixSize = offset;
    const multihashCode = next();
    const digestSize = next();
    const size = offset + digestSize;
    const multihashSize = size - prefixSize;
    return {
      version: version2,
      codec,
      multihashCode,
      digestSize,
      multihashSize,
      size
    };
  }
  static parse(source, base3) {
    const [prefix, bytes] = parseCIDtoBytes(source, base3);
    const cid = _CID.decode(bytes);
    cid._baseCache.set(prefix, source);
    return cid;
  }
};
var parseCIDtoBytes = (source, base3) => {
  switch (source[0]) {
    case "Q": {
      const decoder = base3 || base58btc;
      return [
        base58btc.prefix,
        decoder.decode(`${base58btc.prefix}${source}`)
      ];
    }
    case base58btc.prefix: {
      const decoder = base3 || base58btc;
      return [
        base58btc.prefix,
        decoder.decode(source)
      ];
    }
    case base32.prefix: {
      const decoder = base3 || base32;
      return [
        base32.prefix,
        decoder.decode(source)
      ];
    }
    default: {
      if (base3 == null) {
        throw Error("To parse non base32 or base58btc encoded CID multibase decoder must be provided");
      }
      return [
        source[0],
        base3.decode(source)
      ];
    }
  }
};
var toStringV0 = (bytes, cache, base3) => {
  const { prefix } = base3;
  if (prefix !== base58btc.prefix) {
    throw Error(`Cannot string encode V0 in ${base3.name} encoding`);
  }
  const cid = cache.get(prefix);
  if (cid == null) {
    const cid2 = base3.encode(bytes).slice(1);
    cache.set(prefix, cid2);
    return cid2;
  } else {
    return cid;
  }
};
var toStringV1 = (bytes, cache, base3) => {
  const { prefix } = base3;
  const cid = cache.get(prefix);
  if (cid == null) {
    const cid2 = base3.encode(bytes);
    cache.set(prefix, cid2);
    return cid2;
  } else {
    return cid;
  }
};
var DAG_PB_CODE = 112;
var SHA_256_CODE = 18;
var encodeCID = (version2, code2, multihash) => {
  const codeOffset = encodingLength(version2);
  const hashOffset = codeOffset + encodingLength(code2);
  const bytes = new Uint8Array(hashOffset + multihash.byteLength);
  encodeTo(version2, bytes, 0);
  encodeTo(code2, bytes, codeOffset);
  bytes.set(multihash, hashOffset);
  return bytes;
};
var cidSymbol = Symbol.for("@ipld/js-cid/CID");
var readonly = {
  writable: false,
  configurable: false,
  enumerable: true
};
var hidden = {
  writable: false,
  enumerable: false,
  configurable: false
};
var version = "0.0.0-dev";
var deprecate = (range, message) => {
  if (range.test(version)) {
    console.warn(message);
  } else {
    throw new Error(message);
  }
};
var IS_CID_DEPRECATION = `CID.isCID(v) is deprecated and will be removed in the next major release.
Following code pattern:

if (CID.isCID(value)) {
  doSomethingWithCID(value)
}

Is replaced with:

const cid = CID.asCID(value)
if (cid) {
  // Make sure to use cid instead of value
  doSomethingWithCID(cid)
}
`;

// node_modules/multiformats/esm/src/basics.js
var bases = {
  ...identity_exports,
  ...base2_exports,
  ...base8_exports,
  ...base10_exports,
  ...base16_exports,
  ...base32_exports,
  ...base36_exports,
  ...base58_exports,
  ...base64_exports,
  ...base256emoji_exports
};
var hashes = {
  ...sha2_browser_exports,
  ...identity_exports2
};

// node_modules/uint8arrays/esm/src/util/bases.js
function createCodec(name2, prefix, encode5, decode6) {
  return {
    name: name2,
    prefix,
    encoder: {
      name: name2,
      prefix,
      encode: encode5
    },
    decoder: { decode: decode6 }
  };
}
var string = createCodec("utf8", "u", (buf) => {
  const decoder = new TextDecoder("utf8");
  return "u" + decoder.decode(buf);
}, (str) => {
  const encoder = new TextEncoder();
  return encoder.encode(str.substring(1));
});
var ascii = createCodec("ascii", "a", (buf) => {
  let string2 = "a";
  for (let i3 = 0; i3 < buf.length; i3++) {
    string2 += String.fromCharCode(buf[i3]);
  }
  return string2;
}, (str) => {
  str = str.substring(1);
  const buf = allocUnsafe(str.length);
  for (let i3 = 0; i3 < str.length; i3++) {
    buf[i3] = str.charCodeAt(i3);
  }
  return buf;
});
var BASES = {
  utf8: string,
  "utf-8": string,
  hex: bases.base16,
  latin1: ascii,
  ascii,
  binary: ascii,
  ...bases
};
var bases_default = BASES;

// node_modules/uint8arrays/esm/src/from-string.js
function fromString2(string2, encoding = "utf8") {
  const base3 = bases_default[encoding];
  if (!base3) {
    throw new Error(`Unsupported encoding "${encoding}"`);
  }
  if ((encoding === "utf8" || encoding === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null) {
    return asUint8Array(globalThis.Buffer.from(string2, "utf-8"));
  }
  return base3.decoder.decode(`${base3.prefix}${string2}`);
}

// node_modules/uint8arrays/esm/src/to-string.js
function toString2(array, encoding = "utf8") {
  const base3 = bases_default[encoding];
  if (!base3) {
    throw new Error(`Unsupported encoding "${encoding}"`);
  }
  if ((encoding === "utf8" || encoding === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null) {
    return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString("utf8");
  }
  return base3.encoder.encode(array).substring(1);
}

// node_modules/@walletconnect/utils/dist/index.es.js
init_es();
var import_time = __toESM(require_cjs3());
var import_window_getters = __toESM(require_cjs());
var import_window_metadata = __toESM(require_cjs2());
var V = __toESM(require_query_string());

// node_modules/@walletconnect/relay-api/dist/index.es.js
var C = { waku: { publish: "waku_publish", batchPublish: "waku_batchPublish", subscribe: "waku_subscribe", batchSubscribe: "waku_batchSubscribe", subscription: "waku_subscription", unsubscribe: "waku_unsubscribe", batchUnsubscribe: "waku_batchUnsubscribe", batchFetchMessages: "waku_batchFetchMessages" }, irn: { publish: "irn_publish", batchPublish: "irn_batchPublish", subscribe: "irn_subscribe", batchSubscribe: "irn_batchSubscribe", subscription: "irn_subscription", unsubscribe: "irn_unsubscribe", batchUnsubscribe: "irn_batchUnsubscribe", batchFetchMessages: "irn_batchFetchMessages" }, iridium: { publish: "iridium_publish", batchPublish: "iridium_batchPublish", subscribe: "iridium_subscribe", batchSubscribe: "iridium_batchSubscribe", subscription: "iridium_subscription", unsubscribe: "iridium_unsubscribe", batchUnsubscribe: "iridium_batchUnsubscribe", batchFetchMessages: "iridium_batchFetchMessages" } };

// node_modules/@walletconnect/utils/dist/index.es.js
function On(e, n3 = []) {
  const t = [];
  return Object.keys(e).forEach((r2) => {
    if (n3.length && !n3.includes(r2))
      return;
    const o = e[r2];
    t.push(...o.accounts);
  }), t;
}
function k(e, n3) {
  return e.includes(":") ? [e] : n3.chains || [];
}
var B = "base10";
var f2 = "base16";
var L = "base64pad";
var x = "utf8";
var Y = 0;
var U = 1;
var Rn = 0;
var Oe = 1;
var J = 12;
var Q = 32;
function wn() {
  const e = ue.generateKeyPair();
  return { privateKey: toString2(e.secretKey, f2), publicKey: toString2(e.publicKey, f2) };
}
function An() {
  const e = (0, import_random.randomBytes)(Q);
  return toString2(e, f2);
}
function Un(e, n3) {
  const t = ue.sharedKey(fromString2(e, f2), fromString2(n3, f2)), r2 = new import_hkdf.HKDF(import_sha256.SHA256, t).expand(Q);
  return toString2(r2, f2);
}
function _n(e) {
  const n3 = (0, import_sha256.hash)(fromString2(e, f2));
  return toString2(n3, f2);
}
function $n(e) {
  const n3 = (0, import_sha256.hash)(fromString2(e, x));
  return toString2(n3, f2);
}
function Se(e) {
  return fromString2(`${e}`, B);
}
function $(e) {
  return Number(toString2(e, B));
}
function jn(e) {
  const n3 = Se(typeof e.type < "u" ? e.type : Y);
  if ($(n3) === U && typeof e.senderPublicKey > "u")
    throw new Error("Missing sender public key for type 1 envelope");
  const t = typeof e.senderPublicKey < "u" ? fromString2(e.senderPublicKey, f2) : void 0, r2 = typeof e.iv < "u" ? fromString2(e.iv, f2) : (0, import_random.randomBytes)(J), o = new import_chacha20poly1305.ChaCha20Poly1305(fromString2(e.symKey, f2)).seal(r2, fromString2(e.message, x));
  return Ie({ type: n3, sealed: o, iv: r2, senderPublicKey: t });
}
function Cn(e) {
  const n3 = new import_chacha20poly1305.ChaCha20Poly1305(fromString2(e.symKey, f2)), { sealed: t, iv: r2 } = Z(e.encoded), o = n3.open(r2, t);
  if (o === null)
    throw new Error("Failed to decrypt");
  return toString2(o, x);
}
function Ie(e) {
  if ($(e.type) === U) {
    if (typeof e.senderPublicKey > "u")
      throw new Error("Missing sender public key for type 1 envelope");
    return toString2(concat([e.type, e.senderPublicKey, e.iv, e.sealed]), L);
  }
  return toString2(concat([e.type, e.iv, e.sealed]), L);
}
function Z(e) {
  const n3 = fromString2(e, L), t = n3.slice(Rn, Oe), r2 = Oe;
  if ($(t) === U) {
    const l3 = r2 + Q, d3 = l3 + J, c4 = n3.slice(r2, l3), u4 = n3.slice(l3, d3), a2 = n3.slice(d3);
    return { type: t, sealed: a2, iv: u4, senderPublicKey: c4 };
  }
  const o = r2 + J, s2 = n3.slice(r2, o), i3 = n3.slice(o);
  return { type: t, sealed: i3, iv: s2 };
}
function Dn(e, n3) {
  const t = Z(e);
  return Pe({ type: $(t.type), senderPublicKey: typeof t.senderPublicKey < "u" ? toString2(t.senderPublicKey, f2) : void 0, receiverPublicKey: n3 == null ? void 0 : n3.receiverPublicKey });
}
function Pe(e) {
  const n3 = (e == null ? void 0 : e.type) || Y;
  if (n3 === U) {
    if (typeof (e == null ? void 0 : e.senderPublicKey) > "u")
      throw new Error("missing sender public key");
    if (typeof (e == null ? void 0 : e.receiverPublicKey) > "u")
      throw new Error("missing receiver public key");
  }
  return { type: n3, senderPublicKey: e == null ? void 0 : e.senderPublicKey, receiverPublicKey: e == null ? void 0 : e.receiverPublicKey };
}
function Vn(e) {
  return e.type === U && typeof e.senderPublicKey == "string" && typeof e.receiverPublicKey == "string";
}
var Mn = Object.defineProperty;
var Te = Object.getOwnPropertySymbols;
var kn = Object.prototype.hasOwnProperty;
var Kn = Object.prototype.propertyIsEnumerable;
var Re = (e, n3, t) => n3 in e ? Mn(e, n3, { enumerable: true, configurable: true, writable: true, value: t }) : e[n3] = t;
var we = (e, n3) => {
  for (var t in n3 || (n3 = {}))
    kn.call(n3, t) && Re(e, t, n3[t]);
  if (Te)
    for (var t of Te(n3))
      Kn.call(n3, t) && Re(e, t, n3[t]);
  return e;
};
var Ae = "ReactNative";
var N = { reactNative: "react-native", node: "node", browser: "browser", unknown: "unknown" };
var _e = "js";
function ee() {
  return typeof process < "u" && typeof process.versions < "u" && typeof process.versions.node < "u";
}
function $e() {
  return !(0, import_window_getters.getDocument)() && !!(0, import_window_getters.getNavigator)() && navigator.product === Ae;
}
function je() {
  return !ee() && !!(0, import_window_getters.getNavigator)();
}
function j() {
  return $e() ? N.reactNative : ee() ? N.node : je() ? N.browser : N.unknown;
}
function Ce(e, n3) {
  let t = V.parse(e);
  return t = we(we({}, t), n3), e = V.stringify(t), e;
}
function Fn() {
  return (0, import_window_metadata.getWindowMetadata)() || { name: "", description: "", url: "", icons: [""] };
}
function De() {
  if (j() === N.reactNative && typeof global < "u" && typeof (global == null ? void 0 : global.Platform) < "u") {
    const { OS: t, Version: r2 } = global.Platform;
    return [t, r2].join("-");
  }
  const e = detect();
  if (e === null)
    return "unknown";
  const n3 = e.os ? e.os.replace(" ", "").toLowerCase() : "unknown";
  return e.type === "browser" ? [n3, e.name, e.version].join("-") : [n3, e.version].join("-");
}
function Ve() {
  var e;
  const n3 = j();
  return n3 === N.browser ? [n3, ((e = (0, import_window_getters.getLocation)()) == null ? void 0 : e.host) || "unknown"].join(":") : n3;
}
function Me(e, n3, t) {
  const r2 = De(), o = Ve();
  return [[e, n3].join("-"), [_e, t].join("-"), r2, o].join("/");
}
function qn({ protocol: e, version: n3, relayUrl: t, sdkVersion: r2, auth: o, projectId: s2, useOnCloseEvent: i3 }) {
  const l3 = t.split("?"), d3 = Me(e, n3, r2), c4 = { auth: o, ua: d3, projectId: s2, useOnCloseEvent: i3 || void 0 }, u4 = Ce(l3[1] || "", c4);
  return l3[0] + "?" + u4;
}
function O(e, n3) {
  return e.filter((t) => n3.includes(t)).length === e.length;
}
function Bn(e) {
  return Object.fromEntries(e.entries());
}
function Yn(e) {
  return new Map(Object.entries(e));
}
function Xn(e = import_time.FIVE_MINUTES, n3) {
  const t = (0, import_time.toMiliseconds)(e || import_time.FIVE_MINUTES);
  let r2, o, s2;
  return { resolve: (i3) => {
    s2 && r2 && (clearTimeout(s2), r2(i3));
  }, reject: (i3) => {
    s2 && o && (clearTimeout(s2), o(i3));
  }, done: () => new Promise((i3, l3) => {
    s2 = setTimeout(() => {
      l3(new Error(n3));
    }, t), r2 = i3, o = l3;
  }) };
}
function et(e, n3, t) {
  return new Promise(async (r2, o) => {
    const s2 = setTimeout(() => o(new Error(t)), n3);
    try {
      const i3 = await e;
      r2(i3);
    } catch (i3) {
      o(i3);
    }
    clearTimeout(s2);
  });
}
function ne(e, n3) {
  if (typeof n3 == "string" && n3.startsWith(`${e}:`))
    return n3;
  if (e.toLowerCase() === "topic") {
    if (typeof n3 != "string")
      throw new Error('Value must be "string" for expirer target type: topic');
    return `topic:${n3}`;
  } else if (e.toLowerCase() === "id") {
    if (typeof n3 != "number")
      throw new Error('Value must be "number" for expirer target type: id');
    return `id:${n3}`;
  }
  throw new Error(`Unknown expirer target type: ${e}`);
}
function nt(e) {
  return ne("topic", e);
}
function tt(e) {
  return ne("id", e);
}
function rt(e) {
  const [n3, t] = e.split(":"), r2 = { id: void 0, topic: void 0 };
  if (n3 === "topic" && typeof t == "string")
    r2.topic = t;
  else if (n3 === "id" && Number.isInteger(Number(t)))
    r2.id = Number(t);
  else
    throw new Error(`Invalid target, expected id:number or topic:string, got ${n3}:${t}`);
  return r2;
}
function ot(e, n3) {
  return (0, import_time.fromMiliseconds)((n3 || Date.now()) + (0, import_time.toMiliseconds)(e));
}
function st(e) {
  return Date.now() >= (0, import_time.toMiliseconds)(e);
}
function it(e, n3) {
  return `${e}${n3 ? `:${n3}` : ""}`;
}
function S(e = [], n3 = []) {
  return [.../* @__PURE__ */ new Set([...e, ...n3])];
}
async function ct({ id: e, topic: n3, wcDeepLink: t }) {
  try {
    if (!t)
      return;
    const r2 = typeof t == "string" ? JSON.parse(t) : t;
    let o = r2 == null ? void 0 : r2.href;
    if (typeof o != "string")
      return;
    o.endsWith("/") && (o = o.slice(0, -1));
    const s2 = `${o}/wc?requestId=${e}&sessionTopic=${n3}`, i3 = j();
    i3 === N.browser ? s2.startsWith("https://") ? window.open(s2, "_blank", "noreferrer noopener") : window.open(s2, "_self", "noreferrer noopener") : i3 === N.reactNative && typeof (global == null ? void 0 : global.Linking) < "u" && await global.Linking.openURL(s2);
  } catch (r2) {
    console.error(r2);
  }
}
var xe = "irn";
function at(e) {
  return (e == null ? void 0 : e.relay) || { protocol: xe };
}
function ut(e) {
  const n3 = C[e];
  if (typeof n3 > "u")
    throw new Error(`Relay Protocol not supported: ${e}`);
  return n3;
}
var lt = Object.defineProperty;
var Fe = Object.getOwnPropertySymbols;
var dt = Object.prototype.hasOwnProperty;
var ft = Object.prototype.propertyIsEnumerable;
var He = (e, n3, t) => n3 in e ? lt(e, n3, { enumerable: true, configurable: true, writable: true, value: t }) : e[n3] = t;
var pt = (e, n3) => {
  for (var t in n3 || (n3 = {}))
    dt.call(n3, t) && He(e, t, n3[t]);
  if (Fe)
    for (var t of Fe(n3))
      ft.call(n3, t) && He(e, t, n3[t]);
  return e;
};
function qe(e, n3 = "-") {
  const t = {}, r2 = "relay" + n3;
  return Object.keys(e).forEach((o) => {
    if (o.startsWith(r2)) {
      const s2 = o.replace(r2, ""), i3 = e[o];
      t[s2] = i3;
    }
  }), t;
}
function mt(e) {
  const n3 = e.indexOf(":"), t = e.indexOf("?") !== -1 ? e.indexOf("?") : void 0, r2 = e.substring(0, n3), o = e.substring(n3 + 1, t).split("@"), s2 = typeof t < "u" ? e.substring(t) : "", i3 = V.parse(s2);
  return { protocol: r2, topic: ze(o[0]), version: parseInt(o[1], 10), symKey: i3.symKey, relay: qe(i3) };
}
function ze(e) {
  return e.startsWith("//") ? e.substring(2) : e;
}
function Ge(e, n3 = "-") {
  const t = "relay", r2 = {};
  return Object.keys(e).forEach((o) => {
    const s2 = t + n3 + o;
    e[o] && (r2[s2] = e[o]);
  }), r2;
}
function yt(e) {
  return `${e.protocol}:${e.topic}@${e.version}?` + V.stringify(pt({ symKey: e.symKey }, Ge(e.relay)));
}
function R(e) {
  const n3 = [];
  return e.forEach((t) => {
    const [r2, o] = t.split(":");
    n3.push(`${r2}:${o}`);
  }), n3;
}
function Ye(e) {
  const n3 = [];
  return Object.values(e).forEach((t) => {
    n3.push(...R(t.accounts));
  }), n3;
}
function Je(e, n3) {
  const t = [];
  return Object.values(e).forEach((r2) => {
    R(r2.accounts).includes(n3) && t.push(...r2.methods);
  }), t;
}
function Qe(e, n3) {
  const t = [];
  return Object.values(e).forEach((r2) => {
    R(r2.accounts).includes(n3) && t.push(...r2.events);
  }), t;
}
function St(e, n3) {
  const t = sn(e, n3);
  if (t)
    throw new Error(t.message);
  const r2 = {};
  for (const [o, s2] of Object.entries(e))
    r2[o] = { methods: s2.methods, events: s2.events, chains: s2.accounts.map((i3) => `${i3.split(":")[0]}:${i3.split(":")[1]}`) };
  return r2;
}
function te(e) {
  return e.includes(":");
}
function Ze(e) {
  return te(e) ? e.split(":")[0] : e;
}
var Pt = { INVALID_METHOD: { message: "Invalid method.", code: 1001 }, INVALID_EVENT: { message: "Invalid event.", code: 1002 }, INVALID_UPDATE_REQUEST: { message: "Invalid update request.", code: 1003 }, INVALID_EXTEND_REQUEST: { message: "Invalid extend request.", code: 1004 }, INVALID_SESSION_SETTLE_REQUEST: { message: "Invalid session settle request.", code: 1005 }, UNAUTHORIZED_METHOD: { message: "Unauthorized method.", code: 3001 }, UNAUTHORIZED_EVENT: { message: "Unauthorized event.", code: 3002 }, UNAUTHORIZED_UPDATE_REQUEST: { message: "Unauthorized update request.", code: 3003 }, UNAUTHORIZED_EXTEND_REQUEST: { message: "Unauthorized extend request.", code: 3004 }, USER_REJECTED: { message: "User rejected.", code: 5e3 }, USER_REJECTED_CHAINS: { message: "User rejected chains.", code: 5001 }, USER_REJECTED_METHODS: { message: "User rejected methods.", code: 5002 }, USER_REJECTED_EVENTS: { message: "User rejected events.", code: 5003 }, UNSUPPORTED_CHAINS: { message: "Unsupported chains.", code: 5100 }, UNSUPPORTED_METHODS: { message: "Unsupported methods.", code: 5101 }, UNSUPPORTED_EVENTS: { message: "Unsupported events.", code: 5102 }, UNSUPPORTED_ACCOUNTS: { message: "Unsupported accounts.", code: 5103 }, UNSUPPORTED_NAMESPACE_KEY: { message: "Unsupported namespace key.", code: 5104 }, USER_DISCONNECTED: { message: "User disconnected.", code: 6e3 }, SESSION_SETTLEMENT_FAILED: { message: "Session settlement failed.", code: 7e3 }, WC_METHOD_UNSUPPORTED: { message: "Unsupported wc_ method.", code: 10001 } };
var Tt = { NOT_INITIALIZED: { message: "Not initialized.", code: 1 }, NO_MATCHING_KEY: { message: "No matching key.", code: 2 }, RESTORE_WILL_OVERRIDE: { message: "Restore will override.", code: 3 }, RESUBSCRIBED: { message: "Resubscribed.", code: 4 }, MISSING_OR_INVALID: { message: "Missing or invalid.", code: 5 }, EXPIRED: { message: "Expired.", code: 6 }, UNKNOWN_TYPE: { message: "Unknown type.", code: 7 }, MISMATCHED_TOPIC: { message: "Mismatched topic.", code: 8 }, NON_CONFORMING_NAMESPACES: { message: "Non conforming namespaces.", code: 9 } };
function b(e, n3) {
  const { message: t, code: r2 } = Tt[e];
  return { message: n3 ? `${t} ${n3}` : t, code: r2 };
}
function w(e, n3) {
  const { message: t, code: r2 } = Pt[e];
  return { message: n3 ? `${t} ${n3}` : t, code: r2 };
}
function C2(e, n3) {
  return Array.isArray(e) ? typeof n3 < "u" && e.length ? e.every(n3) : true : false;
}
function H(e) {
  return Object.getPrototypeOf(e) === Object.prototype && Object.keys(e).length;
}
function I(e) {
  return typeof e > "u";
}
function m(e, n3) {
  return n3 && I(e) ? true : typeof e == "string" && !!e.trim().length;
}
function q(e, n3) {
  return n3 && I(e) ? true : typeof e == "number" && !isNaN(e);
}
function Rt(e, n3) {
  const { requiredNamespaces: t } = n3, r2 = Object.keys(e.namespaces), o = Object.keys(t);
  let s2 = true;
  return O(o, r2) ? (r2.forEach((i3) => {
    const { accounts: l3, methods: d3, events: c4 } = e.namespaces[i3], u4 = R(l3), a2 = t[i3];
    (!O(k(i3, a2), u4) || !O(a2.methods, d3) || !O(a2.events, c4)) && (s2 = false);
  }), s2) : false;
}
function D(e) {
  return m(e, false) && e.includes(":") ? e.split(":").length === 2 : false;
}
function Xe(e) {
  if (m(e, false) && e.includes(":")) {
    const n3 = e.split(":");
    if (n3.length === 3) {
      const t = n3[0] + ":" + n3[1];
      return !!n3[2] && D(t);
    }
  }
  return false;
}
function wt(e) {
  if (m(e, false))
    try {
      return typeof new URL(e) < "u";
    } catch {
      return false;
    }
  return false;
}
function At(e) {
  var n3;
  return (n3 = e == null ? void 0 : e.proposer) == null ? void 0 : n3.publicKey;
}
function Ut(e) {
  return e == null ? void 0 : e.topic;
}
function _t(e, n3) {
  let t = null;
  return m(e == null ? void 0 : e.publicKey, false) || (t = b("MISSING_OR_INVALID", `${n3} controller public key should be a string`)), t;
}
function oe(e) {
  let n3 = true;
  return C2(e) ? e.length && (n3 = e.every((t) => m(t, false))) : n3 = false, n3;
}
function en(e, n3, t) {
  let r2 = null;
  return C2(n3) && n3.length ? n3.forEach((o) => {
    r2 || D(o) || (r2 = w("UNSUPPORTED_CHAINS", `${t}, chain ${o} should be a string and conform to "namespace:chainId" format`));
  }) : D(e) || (r2 = w("UNSUPPORTED_CHAINS", `${t}, chains must be defined as "namespace:chainId" e.g. "eip155:1": {...} in the namespace key OR as an array of CAIP-2 chainIds e.g. eip155: { chains: ["eip155:1", "eip155:5"] }`)), r2;
}
function nn(e, n3, t) {
  let r2 = null;
  return Object.entries(e).forEach(([o, s2]) => {
    if (r2)
      return;
    const i3 = en(o, k(o, s2), `${n3} ${t}`);
    i3 && (r2 = i3);
  }), r2;
}
function tn(e, n3) {
  let t = null;
  return C2(e) ? e.forEach((r2) => {
    t || Xe(r2) || (t = w("UNSUPPORTED_ACCOUNTS", `${n3}, account ${r2} should be a string and conform to "namespace:chainId:address" format`));
  }) : t = w("UNSUPPORTED_ACCOUNTS", `${n3}, accounts should be an array of strings conforming to "namespace:chainId:address" format`), t;
}
function rn(e, n3) {
  let t = null;
  return Object.values(e).forEach((r2) => {
    if (t)
      return;
    const o = tn(r2 == null ? void 0 : r2.accounts, `${n3} namespace`);
    o && (t = o);
  }), t;
}
function on(e, n3) {
  let t = null;
  return oe(e == null ? void 0 : e.methods) ? oe(e == null ? void 0 : e.events) || (t = w("UNSUPPORTED_EVENTS", `${n3}, events should be an array of strings or empty array for no events`)) : t = w("UNSUPPORTED_METHODS", `${n3}, methods should be an array of strings or empty array for no methods`), t;
}
function se(e, n3) {
  let t = null;
  return Object.values(e).forEach((r2) => {
    if (t)
      return;
    const o = on(r2, `${n3}, namespace`);
    o && (t = o);
  }), t;
}
function $t(e, n3, t) {
  let r2 = null;
  if (e && H(e)) {
    const o = se(e, n3);
    o && (r2 = o);
    const s2 = nn(e, n3, t);
    s2 && (r2 = s2);
  } else
    r2 = b("MISSING_OR_INVALID", `${n3}, ${t} should be an object with data`);
  return r2;
}
function sn(e, n3) {
  let t = null;
  if (e && H(e)) {
    const r2 = se(e, n3);
    r2 && (t = r2);
    const o = rn(e, n3);
    o && (t = o);
  } else
    t = b("MISSING_OR_INVALID", `${n3}, namespaces should be an object with data`);
  return t;
}
function cn(e) {
  return m(e.protocol, true);
}
function jt(e, n3) {
  let t = false;
  return n3 && !e ? t = true : e && C2(e) && e.length && e.forEach((r2) => {
    t = cn(r2);
  }), t;
}
function Ct(e) {
  return typeof e == "number";
}
function Dt(e) {
  return typeof e < "u" && typeof e !== null;
}
function Vt(e) {
  return !(!e || typeof e != "object" || !e.code || !q(e.code, false) || !e.message || !m(e.message, false));
}
function Mt(e) {
  return !(I(e) || !m(e.method, false));
}
function kt(e) {
  return !(I(e) || I(e.result) && I(e.error) || !q(e.id, false) || !m(e.jsonrpc, false));
}
function Kt(e) {
  return !(I(e) || !m(e.name, false));
}
function Lt(e, n3) {
  return !(!D(n3) || !Ye(e).includes(n3));
}
function xt(e, n3, t) {
  return m(t, false) ? Je(e, n3).includes(t) : false;
}
function Ft(e, n3, t) {
  return m(t, false) ? Qe(e, n3).includes(t) : false;
}
function an(e, n3, t) {
  let r2 = null;
  const o = Ht(e), s2 = qt(n3), i3 = Object.keys(o), l3 = Object.keys(s2), d3 = un(Object.keys(e)), c4 = un(Object.keys(n3)), u4 = d3.filter((a2) => !c4.includes(a2));
  return u4.length && (r2 = b("NON_CONFORMING_NAMESPACES", `${t} namespaces keys don't satisfy requiredNamespaces.
      Required: ${u4.toString()}
      Received: ${Object.keys(n3).toString()}`)), O(i3, l3) || (r2 = b("NON_CONFORMING_NAMESPACES", `${t} namespaces chains don't satisfy required namespaces.
      Required: ${i3.toString()}
      Approved: ${l3.toString()}`)), Object.keys(n3).forEach((a2) => {
    if (!a2.includes(":") || r2)
      return;
    const g5 = R(n3[a2].accounts);
    g5.includes(a2) || (r2 = b("NON_CONFORMING_NAMESPACES", `${t} namespaces accounts don't satisfy namespace accounts for ${a2}
        Required: ${a2}
        Approved: ${g5.toString()}`));
  }), i3.forEach((a2) => {
    r2 || (O(o[a2].methods, s2[a2].methods) ? O(o[a2].events, s2[a2].events) || (r2 = b("NON_CONFORMING_NAMESPACES", `${t} namespaces events don't satisfy namespace events for ${a2}`)) : r2 = b("NON_CONFORMING_NAMESPACES", `${t} namespaces methods don't satisfy namespace methods for ${a2}`));
  }), r2;
}
function Ht(e) {
  const n3 = {};
  return Object.keys(e).forEach((t) => {
    var r2;
    t.includes(":") ? n3[t] = e[t] : (r2 = e[t].chains) == null || r2.forEach((o) => {
      n3[o] = { methods: e[t].methods, events: e[t].events };
    });
  }), n3;
}
function un(e) {
  return [...new Set(e.map((n3) => n3.includes(":") ? n3.split(":")[0] : n3))];
}
function qt(e) {
  const n3 = {};
  return Object.keys(e).forEach((t) => {
    if (t.includes(":"))
      n3[t] = e[t];
    else {
      const r2 = R(e[t].accounts);
      r2 == null ? void 0 : r2.forEach((o) => {
        n3[o] = { accounts: e[t].accounts.filter((s2) => s2.includes(`${o}:`)), methods: e[t].methods, events: e[t].events };
      });
    }
  }), n3;
}
function zt(e, n3) {
  return q(e, false) && e <= n3.max && e >= n3.min;
}

// node_modules/@walletconnect/core/dist/index.es.js
var import_events5 = __toESM(require_events());

// node_modules/destr/dist/index.mjs
var suspectProtoRx = /"(?:_|\\u0{2}5[Ff]){2}(?:p|\\u0{2}70)(?:r|\\u0{2}72)(?:o|\\u0{2}6[Ff])(?:t|\\u0{2}74)(?:o|\\u0{2}6[Ff])(?:_|\\u0{2}5[Ff]){2}"\s*:/;
var suspectConstructorRx = /"(?:c|\\u0063)(?:o|\\u006[Ff])(?:n|\\u006[Ee])(?:s|\\u0073)(?:t|\\u0074)(?:r|\\u0072)(?:u|\\u0075)(?:c|\\u0063)(?:t|\\u0074)(?:o|\\u006[Ff])(?:r|\\u0072)"\s*:/;
var JsonSigRx = /^\s*["[{]|^\s*-?\d{1,16}(\.\d{1,17})?([Ee][+-]?\d+)?\s*$/;
function jsonParseTransform(key, value) {
  if (key === "__proto__" || key === "constructor" && value && typeof value === "object" && "prototype" in value) {
    warnKeyDropped(key);
    return;
  }
  return value;
}
function warnKeyDropped(key) {
  console.warn(`[destr] Dropping "${key}" key to prevent prototype pollution.`);
}
function destr(value, options = {}) {
  if (typeof value !== "string") {
    return value;
  }
  if (value[0] === '"' && value[value.length - 1] === '"' && value.indexOf("\\") === -1) {
    return value.slice(1, -1);
  }
  const _value = value.trim();
  if (_value.length <= 9) {
    switch (_value.toLowerCase()) {
      case "true": {
        return true;
      }
      case "false": {
        return false;
      }
      case "undefined": {
        return void 0;
      }
      case "null": {
        return null;
      }
      case "nan": {
        return Number.NaN;
      }
      case "infinity": {
        return Number.POSITIVE_INFINITY;
      }
      case "-infinity": {
        return Number.NEGATIVE_INFINITY;
      }
    }
  }
  if (!JsonSigRx.test(value)) {
    if (options.strict) {
      throw new SyntaxError("[destr] Invalid JSON");
    }
    return value;
  }
  try {
    if (suspectProtoRx.test(value) || suspectConstructorRx.test(value)) {
      if (options.strict) {
        throw new Error("[destr] Possible prototype pollution");
      }
      return JSON.parse(value, jsonParseTransform);
    }
    return JSON.parse(value);
  } catch (error) {
    if (options.strict) {
      throw error;
    }
    return value;
  }
}

// node_modules/unstorage/dist/shared/unstorage.mNKHTF5Y.mjs
function wrapToPromise(value) {
  if (!value || typeof value.then !== "function") {
    return Promise.resolve(value);
  }
  return value;
}
function asyncCall(function_, ...arguments_) {
  try {
    return wrapToPromise(function_(...arguments_));
  } catch (error) {
    return Promise.reject(error);
  }
}
function isPrimitive(value) {
  const type = typeof value;
  return value === null || type !== "object" && type !== "function";
}
function isPureObject(value) {
  const proto = Object.getPrototypeOf(value);
  return !proto || proto.isPrototypeOf(Object);
}
function stringify2(value) {
  if (isPrimitive(value)) {
    return String(value);
  }
  if (isPureObject(value) || Array.isArray(value)) {
    return JSON.stringify(value);
  }
  if (typeof value.toJSON === "function") {
    return stringify2(value.toJSON());
  }
  throw new Error("[unstorage] Cannot stringify value!");
}
var BASE64_PREFIX = "base64:";
function serializeRaw(value) {
  if (typeof value === "string") {
    return value;
  }
  return BASE64_PREFIX + base64Encode(value);
}
function deserializeRaw(value) {
  if (typeof value !== "string") {
    return value;
  }
  if (!value.startsWith(BASE64_PREFIX)) {
    return value;
  }
  return base64Decode(value.slice(BASE64_PREFIX.length));
}
function base64Decode(input) {
  if (globalThis.Buffer) {
    return Buffer.from(input, "base64");
  }
  return Uint8Array.from(
    globalThis.atob(input),
    (c4) => c4.codePointAt(0)
  );
}
function base64Encode(input) {
  if (globalThis.Buffer) {
    return Buffer.from(input).toString("base64");
  }
  return globalThis.btoa(String.fromCodePoint(...input));
}
function normalizeKey(key) {
  var _a;
  if (!key) {
    return "";
  }
  return ((_a = key.split("?")[0]) == null ? void 0 : _a.replace(/[/\\]/g, ":").replace(/:+/g, ":").replace(/^:|:$/g, "")) || "";
}
function joinKeys(...keys2) {
  return normalizeKey(keys2.join(":"));
}
function normalizeBaseKey(base3) {
  base3 = normalizeKey(base3);
  return base3 ? base3 + ":" : "";
}
function filterKeyByDepth(key, depth) {
  if (depth === void 0) {
    return true;
  }
  let substrCount = 0;
  let index = key.indexOf(":");
  while (index > -1) {
    substrCount++;
    index = key.indexOf(":", index + 1);
  }
  return substrCount <= depth;
}
function filterKeyByBase(key, base3) {
  if (base3) {
    return key.startsWith(base3) && key[key.length - 1] !== "$";
  }
  return key[key.length - 1] !== "$";
}

// node_modules/unstorage/dist/index.mjs
function defineDriver(factory) {
  return factory;
}
var DRIVER_NAME = "memory";
var memory = defineDriver(() => {
  const data = /* @__PURE__ */ new Map();
  return {
    name: DRIVER_NAME,
    getInstance: () => data,
    hasItem(key) {
      return data.has(key);
    },
    getItem(key) {
      return data.get(key) ?? null;
    },
    getItemRaw(key) {
      return data.get(key) ?? null;
    },
    setItem(key, value) {
      data.set(key, value);
    },
    setItemRaw(key, value) {
      data.set(key, value);
    },
    removeItem(key) {
      data.delete(key);
    },
    getKeys() {
      return [...data.keys()];
    },
    clear() {
      data.clear();
    },
    dispose() {
      data.clear();
    }
  };
});
function createStorage(options = {}) {
  const context = {
    mounts: { "": options.driver || memory() },
    mountpoints: [""],
    watching: false,
    watchListeners: [],
    unwatch: {}
  };
  const getMount = (key) => {
    for (const base3 of context.mountpoints) {
      if (key.startsWith(base3)) {
        return {
          base: base3,
          relativeKey: key.slice(base3.length),
          driver: context.mounts[base3]
        };
      }
    }
    return {
      base: "",
      relativeKey: key,
      driver: context.mounts[""]
    };
  };
  const getMounts = (base3, includeParent) => {
    return context.mountpoints.filter(
      (mountpoint) => mountpoint.startsWith(base3) || includeParent && base3.startsWith(mountpoint)
    ).map((mountpoint) => ({
      relativeBase: base3.length > mountpoint.length ? base3.slice(mountpoint.length) : void 0,
      mountpoint,
      driver: context.mounts[mountpoint]
    }));
  };
  const onChange = (event, key) => {
    if (!context.watching) {
      return;
    }
    key = normalizeKey(key);
    for (const listener of context.watchListeners) {
      listener(event, key);
    }
  };
  const startWatch = async () => {
    if (context.watching) {
      return;
    }
    context.watching = true;
    for (const mountpoint in context.mounts) {
      context.unwatch[mountpoint] = await watch(
        context.mounts[mountpoint],
        onChange,
        mountpoint
      );
    }
  };
  const stopWatch = async () => {
    if (!context.watching) {
      return;
    }
    for (const mountpoint in context.unwatch) {
      await context.unwatch[mountpoint]();
    }
    context.unwatch = {};
    context.watching = false;
  };
  const runBatch = (items, commonOptions, cb) => {
    const batches = /* @__PURE__ */ new Map();
    const getBatch = (mount) => {
      let batch = batches.get(mount.base);
      if (!batch) {
        batch = {
          driver: mount.driver,
          base: mount.base,
          items: []
        };
        batches.set(mount.base, batch);
      }
      return batch;
    };
    for (const item of items) {
      const isStringItem = typeof item === "string";
      const key = normalizeKey(isStringItem ? item : item.key);
      const value = isStringItem ? void 0 : item.value;
      const options2 = isStringItem || !item.options ? commonOptions : { ...commonOptions, ...item.options };
      const mount = getMount(key);
      getBatch(mount).items.push({
        key,
        value,
        relativeKey: mount.relativeKey,
        options: options2
      });
    }
    return Promise.all([...batches.values()].map((batch) => cb(batch))).then(
      (r2) => r2.flat()
    );
  };
  const storage = {
    // Item
    hasItem(key, opts = {}) {
      key = normalizeKey(key);
      const { relativeKey, driver } = getMount(key);
      return asyncCall(driver.hasItem, relativeKey, opts);
    },
    getItem(key, opts = {}) {
      key = normalizeKey(key);
      const { relativeKey, driver } = getMount(key);
      return asyncCall(driver.getItem, relativeKey, opts).then(
        (value) => destr(value)
      );
    },
    getItems(items, commonOptions = {}) {
      return runBatch(items, commonOptions, (batch) => {
        if (batch.driver.getItems) {
          return asyncCall(
            batch.driver.getItems,
            batch.items.map((item) => ({
              key: item.relativeKey,
              options: item.options
            })),
            commonOptions
          ).then(
            (r2) => r2.map((item) => ({
              key: joinKeys(batch.base, item.key),
              value: destr(item.value)
            }))
          );
        }
        return Promise.all(
          batch.items.map((item) => {
            return asyncCall(
              batch.driver.getItem,
              item.relativeKey,
              item.options
            ).then((value) => ({
              key: item.key,
              value: destr(value)
            }));
          })
        );
      });
    },
    getItemRaw(key, opts = {}) {
      key = normalizeKey(key);
      const { relativeKey, driver } = getMount(key);
      if (driver.getItemRaw) {
        return asyncCall(driver.getItemRaw, relativeKey, opts);
      }
      return asyncCall(driver.getItem, relativeKey, opts).then(
        (value) => deserializeRaw(value)
      );
    },
    async setItem(key, value, opts = {}) {
      if (value === void 0) {
        return storage.removeItem(key);
      }
      key = normalizeKey(key);
      const { relativeKey, driver } = getMount(key);
      if (!driver.setItem) {
        return;
      }
      await asyncCall(driver.setItem, relativeKey, stringify2(value), opts);
      if (!driver.watch) {
        onChange("update", key);
      }
    },
    async setItems(items, commonOptions) {
      await runBatch(items, commonOptions, async (batch) => {
        if (batch.driver.setItems) {
          return asyncCall(
            batch.driver.setItems,
            batch.items.map((item) => ({
              key: item.relativeKey,
              value: stringify2(item.value),
              options: item.options
            })),
            commonOptions
          );
        }
        if (!batch.driver.setItem) {
          return;
        }
        await Promise.all(
          batch.items.map((item) => {
            return asyncCall(
              batch.driver.setItem,
              item.relativeKey,
              stringify2(item.value),
              item.options
            );
          })
        );
      });
    },
    async setItemRaw(key, value, opts = {}) {
      if (value === void 0) {
        return storage.removeItem(key, opts);
      }
      key = normalizeKey(key);
      const { relativeKey, driver } = getMount(key);
      if (driver.setItemRaw) {
        await asyncCall(driver.setItemRaw, relativeKey, value, opts);
      } else if (driver.setItem) {
        await asyncCall(driver.setItem, relativeKey, serializeRaw(value), opts);
      } else {
        return;
      }
      if (!driver.watch) {
        onChange("update", key);
      }
    },
    async removeItem(key, opts = {}) {
      if (typeof opts === "boolean") {
        opts = { removeMeta: opts };
      }
      key = normalizeKey(key);
      const { relativeKey, driver } = getMount(key);
      if (!driver.removeItem) {
        return;
      }
      await asyncCall(driver.removeItem, relativeKey, opts);
      if (opts.removeMeta || opts.removeMata) {
        await asyncCall(driver.removeItem, relativeKey + "$", opts);
      }
      if (!driver.watch) {
        onChange("remove", key);
      }
    },
    // Meta
    async getMeta(key, opts = {}) {
      if (typeof opts === "boolean") {
        opts = { nativeOnly: opts };
      }
      key = normalizeKey(key);
      const { relativeKey, driver } = getMount(key);
      const meta = /* @__PURE__ */ Object.create(null);
      if (driver.getMeta) {
        Object.assign(meta, await asyncCall(driver.getMeta, relativeKey, opts));
      }
      if (!opts.nativeOnly) {
        const value = await asyncCall(
          driver.getItem,
          relativeKey + "$",
          opts
        ).then((value_) => destr(value_));
        if (value && typeof value === "object") {
          if (typeof value.atime === "string") {
            value.atime = new Date(value.atime);
          }
          if (typeof value.mtime === "string") {
            value.mtime = new Date(value.mtime);
          }
          Object.assign(meta, value);
        }
      }
      return meta;
    },
    setMeta(key, value, opts = {}) {
      return this.setItem(key + "$", value, opts);
    },
    removeMeta(key, opts = {}) {
      return this.removeItem(key + "$", opts);
    },
    // Keys
    async getKeys(base3, opts = {}) {
      var _a;
      base3 = normalizeBaseKey(base3);
      const mounts = getMounts(base3, true);
      let maskedMounts = [];
      const allKeys = [];
      let allMountsSupportMaxDepth = true;
      for (const mount of mounts) {
        if (!((_a = mount.driver.flags) == null ? void 0 : _a.maxDepth)) {
          allMountsSupportMaxDepth = false;
        }
        const rawKeys = await asyncCall(
          mount.driver.getKeys,
          mount.relativeBase,
          opts
        );
        for (const key of rawKeys) {
          const fullKey = mount.mountpoint + normalizeKey(key);
          if (!maskedMounts.some((p5) => fullKey.startsWith(p5))) {
            allKeys.push(fullKey);
          }
        }
        maskedMounts = [
          mount.mountpoint,
          ...maskedMounts.filter((p5) => !p5.startsWith(mount.mountpoint))
        ];
      }
      const shouldFilterByDepth = opts.maxDepth !== void 0 && !allMountsSupportMaxDepth;
      return allKeys.filter(
        (key) => (!shouldFilterByDepth || filterKeyByDepth(key, opts.maxDepth)) && filterKeyByBase(key, base3)
      );
    },
    // Utils
    async clear(base3, opts = {}) {
      base3 = normalizeBaseKey(base3);
      await Promise.all(
        getMounts(base3, false).map(async (m3) => {
          if (m3.driver.clear) {
            return asyncCall(m3.driver.clear, m3.relativeBase, opts);
          }
          if (m3.driver.removeItem) {
            const keys2 = await m3.driver.getKeys(m3.relativeBase || "", opts);
            return Promise.all(
              keys2.map((key) => m3.driver.removeItem(key, opts))
            );
          }
        })
      );
    },
    async dispose() {
      await Promise.all(
        Object.values(context.mounts).map((driver) => dispose(driver))
      );
    },
    async watch(callback) {
      await startWatch();
      context.watchListeners.push(callback);
      return async () => {
        context.watchListeners = context.watchListeners.filter(
          (listener) => listener !== callback
        );
        if (context.watchListeners.length === 0) {
          await stopWatch();
        }
      };
    },
    async unwatch() {
      context.watchListeners = [];
      await stopWatch();
    },
    // Mount
    mount(base3, driver) {
      base3 = normalizeBaseKey(base3);
      if (base3 && context.mounts[base3]) {
        throw new Error(`already mounted at ${base3}`);
      }
      if (base3) {
        context.mountpoints.push(base3);
        context.mountpoints.sort((a2, b6) => b6.length - a2.length);
      }
      context.mounts[base3] = driver;
      if (context.watching) {
        Promise.resolve(watch(driver, onChange, base3)).then((unwatcher) => {
          context.unwatch[base3] = unwatcher;
        }).catch(console.error);
      }
      return storage;
    },
    async unmount(base3, _dispose = true) {
      var _a, _b;
      base3 = normalizeBaseKey(base3);
      if (!base3 || !context.mounts[base3]) {
        return;
      }
      if (context.watching && base3 in context.unwatch) {
        (_b = (_a = context.unwatch)[base3]) == null ? void 0 : _b.call(_a);
        delete context.unwatch[base3];
      }
      if (_dispose) {
        await dispose(context.mounts[base3]);
      }
      context.mountpoints = context.mountpoints.filter((key) => key !== base3);
      delete context.mounts[base3];
    },
    getMount(key = "") {
      key = normalizeKey(key) + ":";
      const m3 = getMount(key);
      return {
        driver: m3.driver,
        base: m3.base
      };
    },
    getMounts(base3 = "", opts = {}) {
      base3 = normalizeKey(base3);
      const mounts = getMounts(base3, opts.parents);
      return mounts.map((m3) => ({
        driver: m3.driver,
        base: m3.mountpoint
      }));
    },
    // Aliases
    keys: (base3, opts = {}) => storage.getKeys(base3, opts),
    get: (key, opts = {}) => storage.getItem(key, opts),
    set: (key, value, opts = {}) => storage.setItem(key, value, opts),
    has: (key, opts = {}) => storage.hasItem(key, opts),
    del: (key, opts = {}) => storage.removeItem(key, opts),
    remove: (key, opts = {}) => storage.removeItem(key, opts)
  };
  return storage;
}
function watch(driver, onChange, base3) {
  return driver.watch ? driver.watch((event, key) => onChange(event, base3 + key)) : () => {
  };
}
async function dispose(driver) {
  if (typeof driver.dispose === "function") {
    await asyncCall(driver.dispose);
  }
}

// node_modules/idb-keyval/dist/index.js
function promisifyRequest(request) {
  return new Promise((resolve, reject) => {
    request.oncomplete = request.onsuccess = () => resolve(request.result);
    request.onabort = request.onerror = () => reject(request.error);
  });
}
function createStore(dbName, storeName) {
  const request = indexedDB.open(dbName);
  request.onupgradeneeded = () => request.result.createObjectStore(storeName);
  const dbp = promisifyRequest(request);
  return (txMode, callback) => dbp.then((db) => callback(db.transaction(storeName, txMode).objectStore(storeName)));
}
var defaultGetStoreFunc;
function defaultGetStore() {
  if (!defaultGetStoreFunc) {
    defaultGetStoreFunc = createStore("keyval-store", "keyval");
  }
  return defaultGetStoreFunc;
}
function get(key, customStore = defaultGetStore()) {
  return customStore("readonly", (store) => promisifyRequest(store.get(key)));
}
function set(key, value, customStore = defaultGetStore()) {
  return customStore("readwrite", (store) => {
    store.put(value, key);
    return promisifyRequest(store.transaction);
  });
}
function del(key, customStore = defaultGetStore()) {
  return customStore("readwrite", (store) => {
    store.delete(key);
    return promisifyRequest(store.transaction);
  });
}
function clear(customStore = defaultGetStore()) {
  return customStore("readwrite", (store) => {
    store.clear();
    return promisifyRequest(store.transaction);
  });
}
function eachCursor(store, callback) {
  store.openCursor().onsuccess = function() {
    if (!this.result)
      return;
    callback(this.result);
    this.result.continue();
  };
  return promisifyRequest(store.transaction);
}
function keys(customStore = defaultGetStore()) {
  return customStore("readonly", (store) => {
    if (store.getAllKeys) {
      return promisifyRequest(store.getAllKeys());
    }
    const items = [];
    return eachCursor(store, (cursor) => items.push(cursor.key)).then(() => items);
  });
}

// node_modules/@walletconnect/keyvaluestorage/dist/index.es.js
init_esm();
var x2 = "idb-keyval";
var z2 = (i3 = {}) => {
  const t = i3.base && i3.base.length > 0 ? `${i3.base}:` : "", e = (s2) => t + s2;
  let n3;
  return i3.dbName && i3.storeName && (n3 = createStore(i3.dbName, i3.storeName)), { name: x2, options: i3, async hasItem(s2) {
    return !(typeof await get(e(s2), n3) > "u");
  }, async getItem(s2) {
    return await get(e(s2), n3) ?? null;
  }, setItem(s2, a2) {
    return set(e(s2), a2, n3);
  }, removeItem(s2) {
    return del(e(s2), n3);
  }, getKeys() {
    return keys(n3);
  }, clear() {
    return clear(n3);
  } };
};
var D2 = "WALLET_CONNECT_V2_INDEXED_DB";
var E = "keyvaluestorage";
var _ = class {
  constructor() {
    this.indexedDb = createStorage({ driver: z2({ dbName: D2, storeName: E }) });
  }
  async getKeys() {
    return this.indexedDb.getKeys();
  }
  async getEntries() {
    return (await this.indexedDb.getItems(await this.indexedDb.getKeys())).map((t) => [t.key, t.value]);
  }
  async getItem(t) {
    const e = await this.indexedDb.getItem(t);
    if (e !== null)
      return e;
  }
  async setItem(t, e) {
    await this.indexedDb.setItem(t, safeJsonStringify(e));
  }
  async removeItem(t) {
    await this.indexedDb.removeItem(t);
  }
};
var l = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
var c = { exports: {} };
(function() {
  let i3;
  function t() {
  }
  i3 = t, i3.prototype.getItem = function(e) {
    return this.hasOwnProperty(e) ? String(this[e]) : null;
  }, i3.prototype.setItem = function(e, n3) {
    this[e] = String(n3);
  }, i3.prototype.removeItem = function(e) {
    delete this[e];
  }, i3.prototype.clear = function() {
    const e = this;
    Object.keys(e).forEach(function(n3) {
      e[n3] = void 0, delete e[n3];
    });
  }, i3.prototype.key = function(e) {
    return e = e || 0, Object.keys(this)[e];
  }, i3.prototype.__defineGetter__("length", function() {
    return Object.keys(this).length;
  }), typeof l < "u" && l.localStorage ? c.exports = l.localStorage : typeof window < "u" && window.localStorage ? c.exports = window.localStorage : c.exports = new t();
})();
function k2(i3) {
  var t;
  return [i3[0], safeJsonParse((t = i3[1]) != null ? t : "")];
}
var K = class {
  constructor() {
    this.localStorage = c.exports;
  }
  async getKeys() {
    return Object.keys(this.localStorage);
  }
  async getEntries() {
    return Object.entries(this.localStorage).map(k2);
  }
  async getItem(t) {
    const e = this.localStorage.getItem(t);
    if (e !== null)
      return safeJsonParse(e);
  }
  async setItem(t, e) {
    this.localStorage.setItem(t, safeJsonStringify(e));
  }
  async removeItem(t) {
    this.localStorage.removeItem(t);
  }
};
var N10 = "wc_storage_version";
var y = 1;
var O2 = async (i3, t, e) => {
  const n3 = N10, s2 = await t.getItem(n3);
  if (s2 && s2 >= y) {
    e(t);
    return;
  }
  const a2 = await i3.getKeys();
  if (!a2.length) {
    e(t);
    return;
  }
  const m3 = [];
  for (; a2.length; ) {
    const r2 = a2.shift();
    if (!r2)
      continue;
    const o = r2.toLowerCase();
    if (o.includes("wc@") || o.includes("walletconnect") || o.includes("wc_") || o.includes("wallet_connect")) {
      const f5 = await i3.getItem(r2);
      await t.setItem(r2, f5), m3.push(r2);
    }
  }
  await t.setItem(n3, y), e(t), j2(i3, m3);
};
var j2 = async (i3, t) => {
  t.length && t.forEach(async (e) => {
    await i3.removeItem(e);
  });
};
var h = class {
  constructor() {
    this.initialized = false, this.setInitialized = (e) => {
      this.storage = e, this.initialized = true;
    };
    const t = new K();
    this.storage = t;
    try {
      const e = new _();
      O2(t, e, this.setInitialized);
    } catch {
      this.initialized = true;
    }
  }
  async getKeys() {
    return await this.initialize(), this.storage.getKeys();
  }
  async getEntries() {
    return await this.initialize(), this.storage.getEntries();
  }
  async getItem(t) {
    return await this.initialize(), this.storage.getItem(t);
  }
  async setItem(t, e) {
    return await this.initialize(), this.storage.setItem(t, e);
  }
  async removeItem(t) {
    return await this.initialize(), this.storage.removeItem(t);
  }
  async initialize() {
    this.initialized || await new Promise((t) => {
      const e = setInterval(() => {
        this.initialized && (clearInterval(e), t());
      }, 20);
    });
  }
};

// node_modules/@walletconnect/core/dist/index.es.js
var import_heartbeat = __toESM(require_cjs4());

// node_modules/@walletconnect/logger/dist/index.es.js
var import_pino = __toESM(require_browser2());
var import_pino2 = __toESM(require_browser2());
init_esm();
var c2 = { level: "info" };
var n = "custom_context";
var l2 = 1e3 * 1024;
var O3 = class {
  constructor(e) {
    this.nodeValue = e, this.sizeInBytes = new TextEncoder().encode(this.nodeValue).length, this.next = null;
  }
  get value() {
    return this.nodeValue;
  }
  get size() {
    return this.sizeInBytes;
  }
};
var d = class {
  constructor(e) {
    this.head = null, this.tail = null, this.lengthInNodes = 0, this.maxSizeInBytes = e, this.sizeInBytes = 0;
  }
  append(e) {
    const t = new O3(e);
    if (t.size > this.maxSizeInBytes)
      throw new Error(`[LinkedList] Value too big to insert into list: ${e} with size ${t.size}`);
    for (; this.size + t.size > this.maxSizeInBytes; )
      this.shift();
    this.head ? (this.tail && (this.tail.next = t), this.tail = t) : (this.head = t, this.tail = t), this.lengthInNodes++, this.sizeInBytes += t.size;
  }
  shift() {
    if (!this.head)
      return;
    const e = this.head;
    this.head = this.head.next, this.head || (this.tail = null), this.lengthInNodes--, this.sizeInBytes -= e.size;
  }
  toArray() {
    const e = [];
    let t = this.head;
    for (; t !== null; )
      e.push(t.value), t = t.next;
    return e;
  }
  get length() {
    return this.lengthInNodes;
  }
  get size() {
    return this.sizeInBytes;
  }
  toOrderedArray() {
    return Array.from(this);
  }
  [Symbol.iterator]() {
    let e = this.head;
    return { next: () => {
      if (!e)
        return { done: true, value: null };
      const t = e.value;
      return e = e.next, { done: false, value: t };
    } };
  }
};
var x3 = Object.defineProperty;
var S2 = Object.defineProperties;
var _2 = Object.getOwnPropertyDescriptors;
var p = Object.getOwnPropertySymbols;
var T = Object.prototype.hasOwnProperty;
var z3 = Object.prototype.propertyIsEnumerable;
var f3 = (r2, e, t) => e in r2 ? x3(r2, e, { enumerable: true, configurable: true, writable: true, value: t }) : r2[e] = t;
var i = (r2, e) => {
  for (var t in e || (e = {}))
    T.call(e, t) && f3(r2, t, e[t]);
  if (p)
    for (var t of p(e))
      z3.call(e, t) && f3(r2, t, e[t]);
  return r2;
};
var g = (r2, e) => S2(r2, _2(e));
function k3(r2) {
  return g(i({}, r2), { level: (r2 == null ? void 0 : r2.level) || c2.level });
}
function v(r2, e = n) {
  return r2[e] || "";
}
function b2(r2, e, t = n) {
  return r2[t] = e, r2;
}
function y2(r2, e = n) {
  let t = "";
  return typeof r2.bindings > "u" ? t = v(r2, e) : t = r2.bindings().context || "", t;
}
function w2(r2, e, t = n) {
  const o = y2(r2, t);
  return o.trim() ? `${o}/${e}` : e;
}
function E2(r2, e, t = n) {
  const o = w2(r2, e, t), a2 = r2.child({ context: o });
  return b2(a2, o, t);
}

// node_modules/@walletconnect/types/dist/index.es.js
init_esm3();
var import_events2 = __toESM(require_events());
var n2 = class extends IEvents {
  constructor(s2) {
    super(), this.opts = s2, this.protocol = "wc", this.version = 2;
  }
};
var h3 = class extends IEvents {
  constructor(s2, t) {
    super(), this.core = s2, this.logger = t, this.records = /* @__PURE__ */ new Map();
  }
};
var a = class {
  constructor(s2, t) {
    this.logger = s2, this.core = t;
  }
};
var u = class extends IEvents {
  constructor(s2, t) {
    super(), this.relayer = s2, this.logger = t;
  }
};
var g2 = class extends IEvents {
  constructor(s2) {
    super();
  }
};
var p2 = class {
  constructor(s2, t, o, w5) {
    this.core = s2, this.logger = t, this.name = o;
  }
};
var d2 = class extends IEvents {
  constructor(s2, t) {
    super(), this.relayer = s2, this.logger = t;
  }
};
var E3 = class extends IEvents {
  constructor(s2, t) {
    super(), this.core = s2, this.logger = t;
  }
};
var y3 = class {
  constructor(s2, t) {
    this.projectId = s2, this.logger = t;
  }
};
var b3 = class {
  constructor(s2) {
    this.opts = s2, this.protocol = "wc", this.version = 2;
  }
};
var S3 = class {
  constructor(s2) {
    this.client = s2;
  }
};

// node_modules/@walletconnect/core/dist/index.es.js
init_esm();

// node_modules/@walletconnect/relay-auth/dist/index.es.js
var import_time2 = __toESM(require_cjs3());
init_esm();
function En2(t) {
  return t instanceof Uint8Array || ArrayBuffer.isView(t) && t.constructor.name === "Uint8Array";
}
function fe2(t, ...e) {
  if (!En2(t))
    throw new Error("Uint8Array expected");
  if (e.length > 0 && !e.includes(t.length))
    throw new Error("Uint8Array expected of length " + e + ", got length=" + t.length);
}
function De2(t, e = true) {
  if (t.destroyed)
    throw new Error("Hash instance has been destroyed");
  if (e && t.finished)
    throw new Error("Hash#digest() has already been called");
}
function gn(t, e) {
  fe2(t);
  const n3 = e.outputLen;
  if (t.length < n3)
    throw new Error("digestInto() expects output buffer of length at least " + n3);
}
var it2 = typeof globalThis == "object" && "crypto" in globalThis ? globalThis.crypto : void 0;
var _t2 = (t) => new DataView(t.buffer, t.byteOffset, t.byteLength);
function yn(t) {
  if (typeof t != "string")
    throw new Error("utf8ToBytes expected string, got " + typeof t);
  return new Uint8Array(new TextEncoder().encode(t));
}
function de2(t) {
  return typeof t == "string" && (t = yn(t)), fe2(t), t;
}
var xn = class {
  clone() {
    return this._cloneInto();
  }
};
function Bn2(t) {
  const e = (r2) => t().update(de2(r2)).digest(), n3 = t();
  return e.outputLen = n3.outputLen, e.blockLen = n3.blockLen, e.create = () => t(), e;
}
function he(t = 32) {
  if (it2 && typeof it2.getRandomValues == "function")
    return it2.getRandomValues(new Uint8Array(t));
  if (it2 && typeof it2.randomBytes == "function")
    return it2.randomBytes(t);
  throw new Error("crypto.getRandomValues must be defined");
}
function Cn2(t, e, n3, r2) {
  if (typeof t.setBigUint64 == "function")
    return t.setBigUint64(e, n3, r2);
  const o = BigInt(32), s2 = BigInt(4294967295), a2 = Number(n3 >> o & s2), u4 = Number(n3 & s2), i3 = r2 ? 4 : 0, D4 = r2 ? 0 : 4;
  t.setUint32(e + i3, a2, r2), t.setUint32(e + D4, u4, r2);
}
var An2 = class extends xn {
  constructor(e, n3, r2, o) {
    super(), this.blockLen = e, this.outputLen = n3, this.padOffset = r2, this.isLE = o, this.finished = false, this.length = 0, this.pos = 0, this.destroyed = false, this.buffer = new Uint8Array(e), this.view = _t2(this.buffer);
  }
  update(e) {
    De2(this);
    const { view: n3, buffer: r2, blockLen: o } = this;
    e = de2(e);
    const s2 = e.length;
    for (let a2 = 0; a2 < s2; ) {
      const u4 = Math.min(o - this.pos, s2 - a2);
      if (u4 === o) {
        const i3 = _t2(e);
        for (; o <= s2 - a2; a2 += o)
          this.process(i3, a2);
        continue;
      }
      r2.set(e.subarray(a2, a2 + u4), this.pos), this.pos += u4, a2 += u4, this.pos === o && (this.process(n3, 0), this.pos = 0);
    }
    return this.length += e.length, this.roundClean(), this;
  }
  digestInto(e) {
    De2(this), gn(e, this), this.finished = true;
    const { buffer: n3, view: r2, blockLen: o, isLE: s2 } = this;
    let { pos: a2 } = this;
    n3[a2++] = 128, this.buffer.subarray(a2).fill(0), this.padOffset > o - a2 && (this.process(r2, 0), a2 = 0);
    for (let l3 = a2; l3 < o; l3++)
      n3[l3] = 0;
    Cn2(r2, o - 8, BigInt(this.length * 8), s2), this.process(r2, 0);
    const u4 = _t2(e), i3 = this.outputLen;
    if (i3 % 4)
      throw new Error("_sha2: outputLen should be aligned to 32bit");
    const D4 = i3 / 4, c4 = this.get();
    if (D4 > c4.length)
      throw new Error("_sha2: outputLen bigger than state");
    for (let l3 = 0; l3 < D4; l3++)
      u4.setUint32(4 * l3, c4[l3], s2);
  }
  digest() {
    const { buffer: e, outputLen: n3 } = this;
    this.digestInto(e);
    const r2 = e.slice(0, n3);
    return this.destroy(), r2;
  }
  _cloneInto(e) {
    e || (e = new this.constructor()), e.set(...this.get());
    const { blockLen: n3, buffer: r2, length: o, finished: s2, destroyed: a2, pos: u4 } = this;
    return e.length = o, e.pos = u4, e.finished = s2, e.destroyed = a2, o % n3 && e.buffer.set(r2), e;
  }
};
var wt2 = BigInt(2 ** 32 - 1);
var St2 = BigInt(32);
function le(t, e = false) {
  return e ? { h: Number(t & wt2), l: Number(t >> St2 & wt2) } : { h: Number(t >> St2 & wt2) | 0, l: Number(t & wt2) | 0 };
}
function mn2(t, e = false) {
  let n3 = new Uint32Array(t.length), r2 = new Uint32Array(t.length);
  for (let o = 0; o < t.length; o++) {
    const { h: s2, l: a2 } = le(t[o], e);
    [n3[o], r2[o]] = [s2, a2];
  }
  return [n3, r2];
}
var _n2 = (t, e) => BigInt(t >>> 0) << St2 | BigInt(e >>> 0);
var Sn = (t, e, n3) => t >>> n3;
var vn2 = (t, e, n3) => t << 32 - n3 | e >>> n3;
var In = (t, e, n3) => t >>> n3 | e << 32 - n3;
var Un2 = (t, e, n3) => t << 32 - n3 | e >>> n3;
var Tn = (t, e, n3) => t << 64 - n3 | e >>> n3 - 32;
var Fn2 = (t, e, n3) => t >>> n3 - 32 | e << 64 - n3;
var Nn = (t, e) => e;
var Ln = (t, e) => t;
var On2 = (t, e, n3) => t << n3 | e >>> 32 - n3;
var Hn = (t, e, n3) => e << n3 | t >>> 32 - n3;
var zn = (t, e, n3) => e << n3 - 32 | t >>> 64 - n3;
var Mn2 = (t, e, n3) => t << n3 - 32 | e >>> 64 - n3;
function qn2(t, e, n3, r2) {
  const o = (e >>> 0) + (r2 >>> 0);
  return { h: t + n3 + (o / 2 ** 32 | 0) | 0, l: o | 0 };
}
var $n2 = (t, e, n3) => (t >>> 0) + (e >>> 0) + (n3 >>> 0);
var kn2 = (t, e, n3, r2) => e + n3 + r2 + (t / 2 ** 32 | 0) | 0;
var Rn2 = (t, e, n3, r2) => (t >>> 0) + (e >>> 0) + (n3 >>> 0) + (r2 >>> 0);
var jn2 = (t, e, n3, r2, o) => e + n3 + r2 + o + (t / 2 ** 32 | 0) | 0;
var Zn = (t, e, n3, r2, o) => (t >>> 0) + (e >>> 0) + (n3 >>> 0) + (r2 >>> 0) + (o >>> 0);
var Gn = (t, e, n3, r2, o, s2) => e + n3 + r2 + o + s2 + (t / 2 ** 32 | 0) | 0;
var x4 = { fromBig: le, split: mn2, toBig: _n2, shrSH: Sn, shrSL: vn2, rotrSH: In, rotrSL: Un2, rotrBH: Tn, rotrBL: Fn2, rotr32H: Nn, rotr32L: Ln, rotlSH: On2, rotlSL: Hn, rotlBH: zn, rotlBL: Mn2, add: qn2, add3L: $n2, add3H: kn2, add4L: Rn2, add4H: jn2, add5H: Gn, add5L: Zn };
var [Vn2, Yn2] = (() => x4.split(["0x428a2f98d728ae22", "0x7137449123ef65cd", "0xb5c0fbcfec4d3b2f", "0xe9b5dba58189dbbc", "0x3956c25bf348b538", "0x59f111f1b605d019", "0x923f82a4af194f9b", "0xab1c5ed5da6d8118", "0xd807aa98a3030242", "0x12835b0145706fbe", "0x243185be4ee4b28c", "0x550c7dc3d5ffb4e2", "0x72be5d74f27b896f", "0x80deb1fe3b1696b1", "0x9bdc06a725c71235", "0xc19bf174cf692694", "0xe49b69c19ef14ad2", "0xefbe4786384f25e3", "0x0fc19dc68b8cd5b5", "0x240ca1cc77ac9c65", "0x2de92c6f592b0275", "0x4a7484aa6ea6e483", "0x5cb0a9dcbd41fbd4", "0x76f988da831153b5", "0x983e5152ee66dfab", "0xa831c66d2db43210", "0xb00327c898fb213f", "0xbf597fc7beef0ee4", "0xc6e00bf33da88fc2", "0xd5a79147930aa725", "0x06ca6351e003826f", "0x142929670a0e6e70", "0x27b70a8546d22ffc", "0x2e1b21385c26c926", "0x4d2c6dfc5ac42aed", "0x53380d139d95b3df", "0x650a73548baf63de", "0x766a0abb3c77b2a8", "0x81c2c92e47edaee6", "0x92722c851482353b", "0xa2bfe8a14cf10364", "0xa81a664bbc423001", "0xc24b8b70d0f89791", "0xc76c51a30654be30", "0xd192e819d6ef5218", "0xd69906245565a910", "0xf40e35855771202a", "0x106aa07032bbd1b8", "0x19a4c116b8d2d0c8", "0x1e376c085141ab53", "0x2748774cdf8eeb99", "0x34b0bcb5e19b48a8", "0x391c0cb3c5c95a63", "0x4ed8aa4ae3418acb", "0x5b9cca4f7763e373", "0x682e6ff3d6b2b8a3", "0x748f82ee5defb2fc", "0x78a5636f43172f60", "0x84c87814a1f0ab72", "0x8cc702081a6439ec", "0x90befffa23631e28", "0xa4506cebde82bde9", "0xbef9a3f7b2c67915", "0xc67178f2e372532b", "0xca273eceea26619c", "0xd186b8c721c0c207", "0xeada7dd6cde0eb1e", "0xf57d4f7fee6ed178", "0x06f067aa72176fba", "0x0a637dc5a2c898a6", "0x113f9804bef90dae", "0x1b710b35131c471b", "0x28db77f523047d84", "0x32caab7b40c72493", "0x3c9ebe0a15c9bebc", "0x431d67c49c100d4c", "0x4cc5d4becb3e42b6", "0x597f299cfc657e2a", "0x5fcb6fab3ad6faec", "0x6c44198c4a475817"].map((t) => BigInt(t))))();
var P = new Uint32Array(80);
var Q2 = new Uint32Array(80);
var Jn = class extends An2 {
  constructor() {
    super(128, 64, 16, false), this.Ah = 1779033703, this.Al = -205731576, this.Bh = -1150833019, this.Bl = -2067093701, this.Ch = 1013904242, this.Cl = -23791573, this.Dh = -1521486534, this.Dl = 1595750129, this.Eh = 1359893119, this.El = -1377402159, this.Fh = -1694144372, this.Fl = 725511199, this.Gh = 528734635, this.Gl = -79577749, this.Hh = 1541459225, this.Hl = 327033209;
  }
  get() {
    const { Ah: e, Al: n3, Bh: r2, Bl: o, Ch: s2, Cl: a2, Dh: u4, Dl: i3, Eh: D4, El: c4, Fh: l3, Fl: p5, Gh: w5, Gl: h4, Hh: g5, Hl: S5 } = this;
    return [e, n3, r2, o, s2, a2, u4, i3, D4, c4, l3, p5, w5, h4, g5, S5];
  }
  set(e, n3, r2, o, s2, a2, u4, i3, D4, c4, l3, p5, w5, h4, g5, S5) {
    this.Ah = e | 0, this.Al = n3 | 0, this.Bh = r2 | 0, this.Bl = o | 0, this.Ch = s2 | 0, this.Cl = a2 | 0, this.Dh = u4 | 0, this.Dl = i3 | 0, this.Eh = D4 | 0, this.El = c4 | 0, this.Fh = l3 | 0, this.Fl = p5 | 0, this.Gh = w5 | 0, this.Gl = h4 | 0, this.Hh = g5 | 0, this.Hl = S5 | 0;
  }
  process(e, n3) {
    for (let d3 = 0; d3 < 16; d3++, n3 += 4)
      P[d3] = e.getUint32(n3), Q2[d3] = e.getUint32(n3 += 4);
    for (let d3 = 16; d3 < 80; d3++) {
      const m3 = P[d3 - 15] | 0, F2 = Q2[d3 - 15] | 0, q4 = x4.rotrSH(m3, F2, 1) ^ x4.rotrSH(m3, F2, 8) ^ x4.shrSH(m3, F2, 7), z5 = x4.rotrSL(m3, F2, 1) ^ x4.rotrSL(m3, F2, 8) ^ x4.shrSL(m3, F2, 7), I2 = P[d3 - 2] | 0, O7 = Q2[d3 - 2] | 0, ot4 = x4.rotrSH(I2, O7, 19) ^ x4.rotrBH(I2, O7, 61) ^ x4.shrSH(I2, O7, 6), tt3 = x4.rotrSL(I2, O7, 19) ^ x4.rotrBL(I2, O7, 61) ^ x4.shrSL(I2, O7, 6), st3 = x4.add4L(z5, tt3, Q2[d3 - 7], Q2[d3 - 16]), at3 = x4.add4H(st3, q4, ot4, P[d3 - 7], P[d3 - 16]);
      P[d3] = at3 | 0, Q2[d3] = st3 | 0;
    }
    let { Ah: r2, Al: o, Bh: s2, Bl: a2, Ch: u4, Cl: i3, Dh: D4, Dl: c4, Eh: l3, El: p5, Fh: w5, Fl: h4, Gh: g5, Gl: S5, Hh: v3, Hl: L4 } = this;
    for (let d3 = 0; d3 < 80; d3++) {
      const m3 = x4.rotrSH(l3, p5, 14) ^ x4.rotrSH(l3, p5, 18) ^ x4.rotrBH(l3, p5, 41), F2 = x4.rotrSL(l3, p5, 14) ^ x4.rotrSL(l3, p5, 18) ^ x4.rotrBL(l3, p5, 41), q4 = l3 & w5 ^ ~l3 & g5, z5 = p5 & h4 ^ ~p5 & S5, I2 = x4.add5L(L4, F2, z5, Yn2[d3], Q2[d3]), O7 = x4.add5H(I2, v3, m3, q4, Vn2[d3], P[d3]), ot4 = I2 | 0, tt3 = x4.rotrSH(r2, o, 28) ^ x4.rotrBH(r2, o, 34) ^ x4.rotrBH(r2, o, 39), st3 = x4.rotrSL(r2, o, 28) ^ x4.rotrBL(r2, o, 34) ^ x4.rotrBL(r2, o, 39), at3 = r2 & s2 ^ r2 & u4 ^ s2 & u4, Ct3 = o & a2 ^ o & i3 ^ a2 & i3;
      v3 = g5 | 0, L4 = S5 | 0, g5 = w5 | 0, S5 = h4 | 0, w5 = l3 | 0, h4 = p5 | 0, { h: l3, l: p5 } = x4.add(D4 | 0, c4 | 0, O7 | 0, ot4 | 0), D4 = u4 | 0, c4 = i3 | 0, u4 = s2 | 0, i3 = a2 | 0, s2 = r2 | 0, a2 = o | 0;
      const At3 = x4.add3L(ot4, st3, Ct3);
      r2 = x4.add3H(At3, O7, tt3, at3), o = At3 | 0;
    }
    ({ h: r2, l: o } = x4.add(this.Ah | 0, this.Al | 0, r2 | 0, o | 0)), { h: s2, l: a2 } = x4.add(this.Bh | 0, this.Bl | 0, s2 | 0, a2 | 0), { h: u4, l: i3 } = x4.add(this.Ch | 0, this.Cl | 0, u4 | 0, i3 | 0), { h: D4, l: c4 } = x4.add(this.Dh | 0, this.Dl | 0, D4 | 0, c4 | 0), { h: l3, l: p5 } = x4.add(this.Eh | 0, this.El | 0, l3 | 0, p5 | 0), { h: w5, l: h4 } = x4.add(this.Fh | 0, this.Fl | 0, w5 | 0, h4 | 0), { h: g5, l: S5 } = x4.add(this.Gh | 0, this.Gl | 0, g5 | 0, S5 | 0), { h: v3, l: L4 } = x4.add(this.Hh | 0, this.Hl | 0, v3 | 0, L4 | 0), this.set(r2, o, s2, a2, u4, i3, D4, c4, l3, p5, w5, h4, g5, S5, v3, L4);
  }
  roundClean() {
    P.fill(0), Q2.fill(0);
  }
  destroy() {
    this.buffer.fill(0), this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  }
};
var Kn2 = Bn2(() => new Jn());
var vt = BigInt(0);
var be = BigInt(1);
var Wn = BigInt(2);
function It(t) {
  return t instanceof Uint8Array || ArrayBuffer.isView(t) && t.constructor.name === "Uint8Array";
}
function Ut2(t) {
  if (!It(t))
    throw new Error("Uint8Array expected");
}
function Tt2(t, e) {
  if (typeof e != "boolean")
    throw new Error(t + " boolean expected, got " + e);
}
var Xn2 = Array.from({ length: 256 }, (t, e) => e.toString(16).padStart(2, "0"));
function Ft2(t) {
  Ut2(t);
  let e = "";
  for (let n3 = 0; n3 < t.length; n3++)
    e += Xn2[t[n3]];
  return e;
}
function pe2(t) {
  if (typeof t != "string")
    throw new Error("hex string expected, got " + typeof t);
  return t === "" ? vt : BigInt("0x" + t);
}
var K2 = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };
function we2(t) {
  if (t >= K2._0 && t <= K2._9)
    return t - K2._0;
  if (t >= K2.A && t <= K2.F)
    return t - (K2.A - 10);
  if (t >= K2.a && t <= K2.f)
    return t - (K2.a - 10);
}
function Ee(t) {
  if (typeof t != "string")
    throw new Error("hex string expected, got " + typeof t);
  const e = t.length, n3 = e / 2;
  if (e % 2)
    throw new Error("hex string expected, got unpadded hex of length " + e);
  const r2 = new Uint8Array(n3);
  for (let o = 0, s2 = 0; o < n3; o++, s2 += 2) {
    const a2 = we2(t.charCodeAt(s2)), u4 = we2(t.charCodeAt(s2 + 1));
    if (a2 === void 0 || u4 === void 0) {
      const i3 = t[s2] + t[s2 + 1];
      throw new Error('hex string expected, got non-hex character "' + i3 + '" at index ' + s2);
    }
    r2[o] = a2 * 16 + u4;
  }
  return r2;
}
function Pn(t) {
  return pe2(Ft2(t));
}
function Et(t) {
  return Ut2(t), pe2(Ft2(Uint8Array.from(t).reverse()));
}
function ge(t, e) {
  return Ee(t.toString(16).padStart(e * 2, "0"));
}
function Nt(t, e) {
  return ge(t, e).reverse();
}
function W(t, e, n3) {
  let r2;
  if (typeof e == "string")
    try {
      r2 = Ee(e);
    } catch (s2) {
      throw new Error(t + " must be hex string or Uint8Array, cause: " + s2);
    }
  else if (It(e))
    r2 = Uint8Array.from(e);
  else
    throw new Error(t + " must be hex string or Uint8Array");
  const o = r2.length;
  if (typeof n3 == "number" && o !== n3)
    throw new Error(t + " of length " + n3 + " expected, got " + o);
  return r2;
}
function ye(...t) {
  let e = 0;
  for (let r2 = 0; r2 < t.length; r2++) {
    const o = t[r2];
    Ut2(o), e += o.length;
  }
  const n3 = new Uint8Array(e);
  for (let r2 = 0, o = 0; r2 < t.length; r2++) {
    const s2 = t[r2];
    n3.set(s2, o), o += s2.length;
  }
  return n3;
}
var Lt2 = (t) => typeof t == "bigint" && vt <= t;
function Qn(t, e, n3) {
  return Lt2(t) && Lt2(e) && Lt2(n3) && e <= t && t < n3;
}
function ft2(t, e, n3, r2) {
  if (!Qn(e, n3, r2))
    throw new Error("expected valid " + t + ": " + n3 + " <= n < " + r2 + ", got " + e);
}
function tr(t) {
  let e;
  for (e = 0; t > vt; t >>= be, e += 1)
    ;
  return e;
}
var er = (t) => (Wn << BigInt(t - 1)) - be;
var nr = { bigint: (t) => typeof t == "bigint", function: (t) => typeof t == "function", boolean: (t) => typeof t == "boolean", string: (t) => typeof t == "string", stringOrUint8Array: (t) => typeof t == "string" || It(t), isSafeInteger: (t) => Number.isSafeInteger(t), array: (t) => Array.isArray(t), field: (t, e) => e.Fp.isValid(t), hash: (t) => typeof t == "function" && Number.isSafeInteger(t.outputLen) };
function Ot(t, e, n3 = {}) {
  const r2 = (o, s2, a2) => {
    const u4 = nr[s2];
    if (typeof u4 != "function")
      throw new Error("invalid validator function");
    const i3 = t[o];
    if (!(a2 && i3 === void 0) && !u4(i3, t))
      throw new Error("param " + String(o) + " is invalid. Expected " + s2 + ", got " + i3);
  };
  for (const [o, s2] of Object.entries(e))
    r2(o, s2, false);
  for (const [o, s2] of Object.entries(n3))
    r2(o, s2, true);
  return t;
}
function xe2(t) {
  const e = /* @__PURE__ */ new WeakMap();
  return (n3, ...r2) => {
    const o = e.get(n3);
    if (o !== void 0)
      return o;
    const s2 = t(n3, ...r2);
    return e.set(n3, s2), s2;
  };
}
var M = BigInt(0);
var N11 = BigInt(1);
var nt2 = BigInt(2);
var rr = BigInt(3);
var Ht2 = BigInt(4);
var Be = BigInt(5);
var Ce2 = BigInt(8);
function H2(t, e) {
  const n3 = t % e;
  return n3 >= M ? n3 : e + n3;
}
function or2(t, e, n3) {
  if (e < M)
    throw new Error("invalid exponent, negatives unsupported");
  if (n3 <= M)
    throw new Error("invalid modulus");
  if (n3 === N11)
    return M;
  let r2 = N11;
  for (; e > M; )
    e & N11 && (r2 = r2 * t % n3), t = t * t % n3, e >>= N11;
  return r2;
}
function J2(t, e, n3) {
  let r2 = t;
  for (; e-- > M; )
    r2 *= r2, r2 %= n3;
  return r2;
}
function Ae2(t, e) {
  if (t === M)
    throw new Error("invert: expected non-zero number");
  if (e <= M)
    throw new Error("invert: expected positive modulus, got " + e);
  let n3 = H2(t, e), r2 = e, o = M, s2 = N11;
  for (; n3 !== M; ) {
    const u4 = r2 / n3, i3 = r2 % n3, D4 = o - s2 * u4;
    r2 = n3, n3 = i3, o = s2, s2 = D4;
  }
  if (r2 !== N11)
    throw new Error("invert: does not exist");
  return H2(o, e);
}
function sr(t) {
  const e = (t - N11) / nt2;
  let n3, r2, o;
  for (n3 = t - N11, r2 = 0; n3 % nt2 === M; n3 /= nt2, r2++)
    ;
  for (o = nt2; o < t && or2(o, e, t) !== t - N11; o++)
    if (o > 1e3)
      throw new Error("Cannot find square root: likely non-prime P");
  if (r2 === 1) {
    const a2 = (t + N11) / Ht2;
    return function(i3, D4) {
      const c4 = i3.pow(D4, a2);
      if (!i3.eql(i3.sqr(c4), D4))
        throw new Error("Cannot find square root");
      return c4;
    };
  }
  const s2 = (n3 + N11) / nt2;
  return function(u4, i3) {
    if (u4.pow(i3, e) === u4.neg(u4.ONE))
      throw new Error("Cannot find square root");
    let D4 = r2, c4 = u4.pow(u4.mul(u4.ONE, o), n3), l3 = u4.pow(i3, s2), p5 = u4.pow(i3, n3);
    for (; !u4.eql(p5, u4.ONE); ) {
      if (u4.eql(p5, u4.ZERO))
        return u4.ZERO;
      let w5 = 1;
      for (let g5 = u4.sqr(p5); w5 < D4 && !u4.eql(g5, u4.ONE); w5++)
        g5 = u4.sqr(g5);
      const h4 = u4.pow(c4, N11 << BigInt(D4 - w5 - 1));
      c4 = u4.sqr(h4), l3 = u4.mul(l3, h4), p5 = u4.mul(p5, c4), D4 = w5;
    }
    return l3;
  };
}
function ir(t) {
  if (t % Ht2 === rr) {
    const e = (t + N11) / Ht2;
    return function(r2, o) {
      const s2 = r2.pow(o, e);
      if (!r2.eql(r2.sqr(s2), o))
        throw new Error("Cannot find square root");
      return s2;
    };
  }
  if (t % Ce2 === Be) {
    const e = (t - Be) / Ce2;
    return function(r2, o) {
      const s2 = r2.mul(o, nt2), a2 = r2.pow(s2, e), u4 = r2.mul(o, a2), i3 = r2.mul(r2.mul(u4, nt2), a2), D4 = r2.mul(u4, r2.sub(i3, r2.ONE));
      if (!r2.eql(r2.sqr(D4), o))
        throw new Error("Cannot find square root");
      return D4;
    };
  }
  return sr(t);
}
var ur = (t, e) => (H2(t, e) & N11) === N11;
var cr = ["create", "isValid", "is0", "neg", "inv", "sqrt", "sqr", "eql", "add", "sub", "mul", "pow", "div", "addN", "subN", "mulN", "sqrN"];
function ar(t) {
  const e = { ORDER: "bigint", MASK: "bigint", BYTES: "isSafeInteger", BITS: "isSafeInteger" }, n3 = cr.reduce((r2, o) => (r2[o] = "function", r2), e);
  return Ot(t, n3);
}
function fr(t, e, n3) {
  if (n3 < M)
    throw new Error("invalid exponent, negatives unsupported");
  if (n3 === M)
    return t.ONE;
  if (n3 === N11)
    return e;
  let r2 = t.ONE, o = e;
  for (; n3 > M; )
    n3 & N11 && (r2 = t.mul(r2, o)), o = t.sqr(o), n3 >>= N11;
  return r2;
}
function Dr(t, e) {
  const n3 = new Array(e.length), r2 = e.reduce((s2, a2, u4) => t.is0(a2) ? s2 : (n3[u4] = s2, t.mul(s2, a2)), t.ONE), o = t.inv(r2);
  return e.reduceRight((s2, a2, u4) => t.is0(a2) ? s2 : (n3[u4] = t.mul(s2, n3[u4]), t.mul(s2, a2)), o), n3;
}
function me(t, e) {
  const n3 = e !== void 0 ? e : t.toString(2).length, r2 = Math.ceil(n3 / 8);
  return { nBitLength: n3, nByteLength: r2 };
}
function _e2(t, e, n3 = false, r2 = {}) {
  if (t <= M)
    throw new Error("invalid field: expected ORDER > 0, got " + t);
  const { nBitLength: o, nByteLength: s2 } = me(t, e);
  if (s2 > 2048)
    throw new Error("invalid field: expected ORDER of <= 2048 bytes");
  let a2;
  const u4 = Object.freeze({ ORDER: t, isLE: n3, BITS: o, BYTES: s2, MASK: er(o), ZERO: M, ONE: N11, create: (i3) => H2(i3, t), isValid: (i3) => {
    if (typeof i3 != "bigint")
      throw new Error("invalid field element: expected bigint, got " + typeof i3);
    return M <= i3 && i3 < t;
  }, is0: (i3) => i3 === M, isOdd: (i3) => (i3 & N11) === N11, neg: (i3) => H2(-i3, t), eql: (i3, D4) => i3 === D4, sqr: (i3) => H2(i3 * i3, t), add: (i3, D4) => H2(i3 + D4, t), sub: (i3, D4) => H2(i3 - D4, t), mul: (i3, D4) => H2(i3 * D4, t), pow: (i3, D4) => fr(u4, i3, D4), div: (i3, D4) => H2(i3 * Ae2(D4, t), t), sqrN: (i3) => i3 * i3, addN: (i3, D4) => i3 + D4, subN: (i3, D4) => i3 - D4, mulN: (i3, D4) => i3 * D4, inv: (i3) => Ae2(i3, t), sqrt: r2.sqrt || ((i3) => (a2 || (a2 = ir(t)), a2(u4, i3))), invertBatch: (i3) => Dr(u4, i3), cmov: (i3, D4, c4) => c4 ? D4 : i3, toBytes: (i3) => n3 ? Nt(i3, s2) : ge(i3, s2), fromBytes: (i3) => {
    if (i3.length !== s2)
      throw new Error("Field.fromBytes: expected " + s2 + " bytes, got " + i3.length);
    return n3 ? Et(i3) : Pn(i3);
  } });
  return Object.freeze(u4);
}
var Se2 = BigInt(0);
var gt = BigInt(1);
function zt2(t, e) {
  const n3 = e.negate();
  return t ? n3 : e;
}
function ve(t, e) {
  if (!Number.isSafeInteger(t) || t <= 0 || t > e)
    throw new Error("invalid window size, expected [1.." + e + "], got W=" + t);
}
function Mt2(t, e) {
  ve(t, e);
  const n3 = Math.ceil(e / t) + 1, r2 = 2 ** (t - 1);
  return { windows: n3, windowSize: r2 };
}
function dr(t, e) {
  if (!Array.isArray(t))
    throw new Error("array expected");
  t.forEach((n3, r2) => {
    if (!(n3 instanceof e))
      throw new Error("invalid point at index " + r2);
  });
}
function hr(t, e) {
  if (!Array.isArray(t))
    throw new Error("array of scalars expected");
  t.forEach((n3, r2) => {
    if (!e.isValid(n3))
      throw new Error("invalid scalar at index " + r2);
  });
}
var qt2 = /* @__PURE__ */ new WeakMap();
var Ie2 = /* @__PURE__ */ new WeakMap();
function $t2(t) {
  return Ie2.get(t) || 1;
}
function lr(t, e) {
  return { constTimeNegate: zt2, hasPrecomputes(n3) {
    return $t2(n3) !== 1;
  }, unsafeLadder(n3, r2, o = t.ZERO) {
    let s2 = n3;
    for (; r2 > Se2; )
      r2 & gt && (o = o.add(s2)), s2 = s2.double(), r2 >>= gt;
    return o;
  }, precomputeWindow(n3, r2) {
    const { windows: o, windowSize: s2 } = Mt2(r2, e), a2 = [];
    let u4 = n3, i3 = u4;
    for (let D4 = 0; D4 < o; D4++) {
      i3 = u4, a2.push(i3);
      for (let c4 = 1; c4 < s2; c4++)
        i3 = i3.add(u4), a2.push(i3);
      u4 = i3.double();
    }
    return a2;
  }, wNAF(n3, r2, o) {
    const { windows: s2, windowSize: a2 } = Mt2(n3, e);
    let u4 = t.ZERO, i3 = t.BASE;
    const D4 = BigInt(2 ** n3 - 1), c4 = 2 ** n3, l3 = BigInt(n3);
    for (let p5 = 0; p5 < s2; p5++) {
      const w5 = p5 * a2;
      let h4 = Number(o & D4);
      o >>= l3, h4 > a2 && (h4 -= c4, o += gt);
      const g5 = w5, S5 = w5 + Math.abs(h4) - 1, v3 = p5 % 2 !== 0, L4 = h4 < 0;
      h4 === 0 ? i3 = i3.add(zt2(v3, r2[g5])) : u4 = u4.add(zt2(L4, r2[S5]));
    }
    return { p: u4, f: i3 };
  }, wNAFUnsafe(n3, r2, o, s2 = t.ZERO) {
    const { windows: a2, windowSize: u4 } = Mt2(n3, e), i3 = BigInt(2 ** n3 - 1), D4 = 2 ** n3, c4 = BigInt(n3);
    for (let l3 = 0; l3 < a2; l3++) {
      const p5 = l3 * u4;
      if (o === Se2)
        break;
      let w5 = Number(o & i3);
      if (o >>= c4, w5 > u4 && (w5 -= D4, o += gt), w5 === 0)
        continue;
      let h4 = r2[p5 + Math.abs(w5) - 1];
      w5 < 0 && (h4 = h4.negate()), s2 = s2.add(h4);
    }
    return s2;
  }, getPrecomputes(n3, r2, o) {
    let s2 = qt2.get(r2);
    return s2 || (s2 = this.precomputeWindow(r2, n3), n3 !== 1 && qt2.set(r2, o(s2))), s2;
  }, wNAFCached(n3, r2, o) {
    const s2 = $t2(n3);
    return this.wNAF(s2, this.getPrecomputes(s2, n3, o), r2);
  }, wNAFCachedUnsafe(n3, r2, o, s2) {
    const a2 = $t2(n3);
    return a2 === 1 ? this.unsafeLadder(n3, r2, s2) : this.wNAFUnsafe(a2, this.getPrecomputes(a2, n3, o), r2, s2);
  }, setWindowSize(n3, r2) {
    ve(r2, e), Ie2.set(n3, r2), qt2.delete(n3);
  } };
}
function br(t, e, n3, r2) {
  if (dr(n3, t), hr(r2, e), n3.length !== r2.length)
    throw new Error("arrays of points and scalars must have equal length");
  const o = t.ZERO, s2 = tr(BigInt(n3.length)), a2 = s2 > 12 ? s2 - 3 : s2 > 4 ? s2 - 2 : s2 ? 2 : 1, u4 = (1 << a2) - 1, i3 = new Array(u4 + 1).fill(o), D4 = Math.floor((e.BITS - 1) / a2) * a2;
  let c4 = o;
  for (let l3 = D4; l3 >= 0; l3 -= a2) {
    i3.fill(o);
    for (let w5 = 0; w5 < r2.length; w5++) {
      const h4 = r2[w5], g5 = Number(h4 >> BigInt(l3) & BigInt(u4));
      i3[g5] = i3[g5].add(n3[w5]);
    }
    let p5 = o;
    for (let w5 = i3.length - 1, h4 = o; w5 > 0; w5--)
      h4 = h4.add(i3[w5]), p5 = p5.add(h4);
    if (c4 = c4.add(p5), l3 !== 0)
      for (let w5 = 0; w5 < a2; w5++)
        c4 = c4.double();
  }
  return c4;
}
function pr(t) {
  return ar(t.Fp), Ot(t, { n: "bigint", h: "bigint", Gx: "field", Gy: "field" }, { nBitLength: "isSafeInteger", nByteLength: "isSafeInteger" }), Object.freeze({ ...me(t.n, t.nBitLength), ...t, p: t.Fp.ORDER });
}
var G = BigInt(0);
var j3 = BigInt(1);
var yt2 = BigInt(2);
var wr = BigInt(8);
var Er = { zip215: true };
function gr(t) {
  const e = pr(t);
  return Ot(t, { hash: "function", a: "bigint", d: "bigint", randomBytes: "function" }, { adjustScalarBytes: "function", domain: "function", uvRatio: "function", mapToCurve: "function" }), Object.freeze({ ...e });
}
function yr(t) {
  const e = gr(t), { Fp: n3, n: r2, prehash: o, hash: s2, randomBytes: a2, nByteLength: u4, h: i3 } = e, D4 = yt2 << BigInt(u4 * 8) - j3, c4 = n3.create, l3 = _e2(e.n, e.nBitLength), p5 = e.uvRatio || ((y5, f5) => {
    try {
      return { isValid: true, value: n3.sqrt(y5 * n3.inv(f5)) };
    } catch {
      return { isValid: false, value: G };
    }
  }), w5 = e.adjustScalarBytes || ((y5) => y5), h4 = e.domain || ((y5, f5, b6) => {
    if (Tt2("phflag", b6), f5.length || b6)
      throw new Error("Contexts/pre-hash are not supported");
    return y5;
  });
  function g5(y5, f5) {
    ft2("coordinate " + y5, f5, G, D4);
  }
  function S5(y5) {
    if (!(y5 instanceof d3))
      throw new Error("ExtendedPoint expected");
  }
  const v3 = xe2((y5, f5) => {
    const { ex: b6, ey: E5, ez: B2 } = y5, C5 = y5.is0();
    f5 == null && (f5 = C5 ? wr : n3.inv(B2));
    const A = c4(b6 * f5), U5 = c4(E5 * f5), _5 = c4(B2 * f5);
    if (C5)
      return { x: G, y: j3 };
    if (_5 !== j3)
      throw new Error("invZ was invalid");
    return { x: A, y: U5 };
  }), L4 = xe2((y5) => {
    const { a: f5, d: b6 } = e;
    if (y5.is0())
      throw new Error("bad point: ZERO");
    const { ex: E5, ey: B2, ez: C5, et: A } = y5, U5 = c4(E5 * E5), _5 = c4(B2 * B2), T2 = c4(C5 * C5), $4 = c4(T2 * T2), R2 = c4(U5 * f5), V2 = c4(T2 * c4(R2 + _5)), Y2 = c4($4 + c4(b6 * c4(U5 * _5)));
    if (V2 !== Y2)
      throw new Error("bad point: equation left != right (1)");
    const Z4 = c4(E5 * B2), X3 = c4(C5 * A);
    if (Z4 !== X3)
      throw new Error("bad point: equation left != right (2)");
    return true;
  });
  class d3 {
    constructor(f5, b6, E5, B2) {
      this.ex = f5, this.ey = b6, this.ez = E5, this.et = B2, g5("x", f5), g5("y", b6), g5("z", E5), g5("t", B2), Object.freeze(this);
    }
    get x() {
      return this.toAffine().x;
    }
    get y() {
      return this.toAffine().y;
    }
    static fromAffine(f5) {
      if (f5 instanceof d3)
        throw new Error("extended point not allowed");
      const { x: b6, y: E5 } = f5 || {};
      return g5("x", b6), g5("y", E5), new d3(b6, E5, j3, c4(b6 * E5));
    }
    static normalizeZ(f5) {
      const b6 = n3.invertBatch(f5.map((E5) => E5.ez));
      return f5.map((E5, B2) => E5.toAffine(b6[B2])).map(d3.fromAffine);
    }
    static msm(f5, b6) {
      return br(d3, l3, f5, b6);
    }
    _setWindowSize(f5) {
      q4.setWindowSize(this, f5);
    }
    assertValidity() {
      L4(this);
    }
    equals(f5) {
      S5(f5);
      const { ex: b6, ey: E5, ez: B2 } = this, { ex: C5, ey: A, ez: U5 } = f5, _5 = c4(b6 * U5), T2 = c4(C5 * B2), $4 = c4(E5 * U5), R2 = c4(A * B2);
      return _5 === T2 && $4 === R2;
    }
    is0() {
      return this.equals(d3.ZERO);
    }
    negate() {
      return new d3(c4(-this.ex), this.ey, this.ez, c4(-this.et));
    }
    double() {
      const { a: f5 } = e, { ex: b6, ey: E5, ez: B2 } = this, C5 = c4(b6 * b6), A = c4(E5 * E5), U5 = c4(yt2 * c4(B2 * B2)), _5 = c4(f5 * C5), T2 = b6 + E5, $4 = c4(c4(T2 * T2) - C5 - A), R2 = _5 + A, V2 = R2 - U5, Y2 = _5 - A, Z4 = c4($4 * V2), X3 = c4(R2 * Y2), et3 = c4($4 * Y2), pt3 = c4(V2 * R2);
      return new d3(Z4, X3, pt3, et3);
    }
    add(f5) {
      S5(f5);
      const { a: b6, d: E5 } = e, { ex: B2, ey: C5, ez: A, et: U5 } = this, { ex: _5, ey: T2, ez: $4, et: R2 } = f5;
      if (b6 === BigInt(-1)) {
        const re2 = c4((C5 - B2) * (T2 + _5)), oe4 = c4((C5 + B2) * (T2 - _5)), mt3 = c4(oe4 - re2);
        if (mt3 === G)
          return this.double();
        const se3 = c4(A * yt2 * R2), ie3 = c4(U5 * yt2 * $4), ue3 = ie3 + se3, ce4 = oe4 + re2, ae4 = ie3 - se3, Dn2 = c4(ue3 * mt3), dn = c4(ce4 * ae4), hn2 = c4(ue3 * ae4), ln = c4(mt3 * ce4);
        return new d3(Dn2, dn, ln, hn2);
      }
      const V2 = c4(B2 * _5), Y2 = c4(C5 * T2), Z4 = c4(U5 * E5 * R2), X3 = c4(A * $4), et3 = c4((B2 + C5) * (_5 + T2) - V2 - Y2), pt3 = X3 - Z4, ee3 = X3 + Z4, ne4 = c4(Y2 - b6 * V2), un2 = c4(et3 * pt3), cn2 = c4(ee3 * ne4), an2 = c4(et3 * ne4), fn = c4(pt3 * ee3);
      return new d3(un2, cn2, fn, an2);
    }
    subtract(f5) {
      return this.add(f5.negate());
    }
    wNAF(f5) {
      return q4.wNAFCached(this, f5, d3.normalizeZ);
    }
    multiply(f5) {
      const b6 = f5;
      ft2("scalar", b6, j3, r2);
      const { p: E5, f: B2 } = this.wNAF(b6);
      return d3.normalizeZ([E5, B2])[0];
    }
    multiplyUnsafe(f5, b6 = d3.ZERO) {
      const E5 = f5;
      return ft2("scalar", E5, G, r2), E5 === G ? F2 : this.is0() || E5 === j3 ? this : q4.wNAFCachedUnsafe(this, E5, d3.normalizeZ, b6);
    }
    isSmallOrder() {
      return this.multiplyUnsafe(i3).is0();
    }
    isTorsionFree() {
      return q4.unsafeLadder(this, r2).is0();
    }
    toAffine(f5) {
      return v3(this, f5);
    }
    clearCofactor() {
      const { h: f5 } = e;
      return f5 === j3 ? this : this.multiplyUnsafe(f5);
    }
    static fromHex(f5, b6 = false) {
      const { d: E5, a: B2 } = e, C5 = n3.BYTES;
      f5 = W("pointHex", f5, C5), Tt2("zip215", b6);
      const A = f5.slice(), U5 = f5[C5 - 1];
      A[C5 - 1] = U5 & -129;
      const _5 = Et(A), T2 = b6 ? D4 : n3.ORDER;
      ft2("pointHex.y", _5, G, T2);
      const $4 = c4(_5 * _5), R2 = c4($4 - j3), V2 = c4(E5 * $4 - B2);
      let { isValid: Y2, value: Z4 } = p5(R2, V2);
      if (!Y2)
        throw new Error("Point.fromHex: invalid y coordinate");
      const X3 = (Z4 & j3) === j3, et3 = (U5 & 128) !== 0;
      if (!b6 && Z4 === G && et3)
        throw new Error("Point.fromHex: x=0 and x_0=1");
      return et3 !== X3 && (Z4 = c4(-Z4)), d3.fromAffine({ x: Z4, y: _5 });
    }
    static fromPrivateKey(f5) {
      return O7(f5).point;
    }
    toRawBytes() {
      const { x: f5, y: b6 } = this.toAffine(), E5 = Nt(b6, n3.BYTES);
      return E5[E5.length - 1] |= f5 & j3 ? 128 : 0, E5;
    }
    toHex() {
      return Ft2(this.toRawBytes());
    }
  }
  d3.BASE = new d3(e.Gx, e.Gy, j3, c4(e.Gx * e.Gy)), d3.ZERO = new d3(G, j3, j3, G);
  const { BASE: m3, ZERO: F2 } = d3, q4 = lr(d3, u4 * 8);
  function z5(y5) {
    return H2(y5, r2);
  }
  function I2(y5) {
    return z5(Et(y5));
  }
  function O7(y5) {
    const f5 = n3.BYTES;
    y5 = W("private key", y5, f5);
    const b6 = W("hashed private key", s2(y5), 2 * f5), E5 = w5(b6.slice(0, f5)), B2 = b6.slice(f5, 2 * f5), C5 = I2(E5), A = m3.multiply(C5), U5 = A.toRawBytes();
    return { head: E5, prefix: B2, scalar: C5, point: A, pointBytes: U5 };
  }
  function ot4(y5) {
    return O7(y5).pointBytes;
  }
  function tt3(y5 = new Uint8Array(), ...f5) {
    const b6 = ye(...f5);
    return I2(s2(h4(b6, W("context", y5), !!o)));
  }
  function st3(y5, f5, b6 = {}) {
    y5 = W("message", y5), o && (y5 = o(y5));
    const { prefix: E5, scalar: B2, pointBytes: C5 } = O7(f5), A = tt3(b6.context, E5, y5), U5 = m3.multiply(A).toRawBytes(), _5 = tt3(b6.context, U5, C5, y5), T2 = z5(A + _5 * B2);
    ft2("signature.s", T2, G, r2);
    const $4 = ye(U5, Nt(T2, n3.BYTES));
    return W("result", $4, n3.BYTES * 2);
  }
  const at3 = Er;
  function Ct3(y5, f5, b6, E5 = at3) {
    const { context: B2, zip215: C5 } = E5, A = n3.BYTES;
    y5 = W("signature", y5, 2 * A), f5 = W("message", f5), b6 = W("publicKey", b6, A), C5 !== void 0 && Tt2("zip215", C5), o && (f5 = o(f5));
    const U5 = Et(y5.slice(A, 2 * A));
    let _5, T2, $4;
    try {
      _5 = d3.fromHex(b6, C5), T2 = d3.fromHex(y5.slice(0, A), C5), $4 = m3.multiplyUnsafe(U5);
    } catch {
      return false;
    }
    if (!C5 && _5.isSmallOrder())
      return false;
    const R2 = tt3(B2, T2.toRawBytes(), _5.toRawBytes(), f5);
    return T2.add(_5.multiplyUnsafe(R2)).subtract($4).clearCofactor().equals(d3.ZERO);
  }
  return m3._setWindowSize(8), { CURVE: e, getPublicKey: ot4, sign: st3, verify: Ct3, ExtendedPoint: d3, utils: { getExtendedPublicKey: O7, randomPrivateKey: () => a2(n3.BYTES), precompute(y5 = 8, f5 = d3.BASE) {
    return f5._setWindowSize(y5), f5.multiply(BigInt(3)), f5;
  } } };
}
BigInt(0), BigInt(1);
var kt2 = BigInt("57896044618658097711785492504343953926634992332820282019728792003956564819949");
var Ue = BigInt("19681161376707505956807079304988542015446066515923890162744021073123829784752");
BigInt(0);
var xr = BigInt(1);
var Te2 = BigInt(2);
BigInt(3);
var Br = BigInt(5);
var Cr = BigInt(8);
function Ar(t) {
  const e = BigInt(10), n3 = BigInt(20), r2 = BigInt(40), o = BigInt(80), s2 = kt2, u4 = t * t % s2 * t % s2, i3 = J2(u4, Te2, s2) * u4 % s2, D4 = J2(i3, xr, s2) * t % s2, c4 = J2(D4, Br, s2) * D4 % s2, l3 = J2(c4, e, s2) * c4 % s2, p5 = J2(l3, n3, s2) * l3 % s2, w5 = J2(p5, r2, s2) * p5 % s2, h4 = J2(w5, o, s2) * w5 % s2, g5 = J2(h4, o, s2) * w5 % s2, S5 = J2(g5, e, s2) * c4 % s2;
  return { pow_p_5_8: J2(S5, Te2, s2) * t % s2, b2: u4 };
}
function mr(t) {
  return t[0] &= 248, t[31] &= 127, t[31] |= 64, t;
}
function _r(t, e) {
  const n3 = kt2, r2 = H2(e * e * e, n3), o = H2(r2 * r2 * e, n3), s2 = Ar(t * o).pow_p_5_8;
  let a2 = H2(t * r2 * s2, n3);
  const u4 = H2(e * a2 * a2, n3), i3 = a2, D4 = H2(a2 * Ue, n3), c4 = u4 === t, l3 = u4 === H2(-t, n3), p5 = u4 === H2(-t * Ue, n3);
  return c4 && (a2 = i3), (l3 || p5) && (a2 = D4), ur(a2, n3) && (a2 = H2(-a2, n3)), { isValid: c4 || l3, value: a2 };
}
var Sr = (() => _e2(kt2, void 0, true))();
var vr = (() => ({ a: BigInt(-1), d: BigInt("37095705934669439343138083508754565189542113879843219016388785533085940283555"), Fp: Sr, n: BigInt("7237005577332262213973186563042994240857116359379907606001950938285454250989"), h: Cr, Gx: BigInt("15112221349535400772501151409588531511454012693041857206046113283949847762202"), Gy: BigInt("46316835694926478169428394003475163141307993866256225615783033603165251855960"), hash: Kn2, randomBytes: he, adjustScalarBytes: mr, uvRatio: _r }))();
var Rt2 = (() => yr(vr))();
var jt2 = "EdDSA";
var Zt = "JWT";
var ut2 = ".";
var Dt2 = "base64url";
var Gt = "utf8";
var xt2 = "utf8";
var Vt2 = ":";
var Yt = "did";
var Jt = "key";
var dt2 = "base58btc";
var Kt2 = "z";
var Wt = "K36";
var Ne = 32;
function Xt(t) {
  return globalThis.Buffer != null ? new Uint8Array(t.buffer, t.byteOffset, t.byteLength) : t;
}
function Le(t = 0) {
  return globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null ? Xt(globalThis.Buffer.allocUnsafe(t)) : new Uint8Array(t);
}
function Oe2(t, e) {
  e || (e = t.reduce((o, s2) => o + s2.length, 0));
  const n3 = Le(e);
  let r2 = 0;
  for (const o of t)
    n3.set(o, r2), r2 += o.length;
  return Xt(n3);
}
function Ir(t, e) {
  if (t.length >= 255)
    throw new TypeError("Alphabet too long");
  for (var n3 = new Uint8Array(256), r2 = 0; r2 < n3.length; r2++)
    n3[r2] = 255;
  for (var o = 0; o < t.length; o++) {
    var s2 = t.charAt(o), a2 = s2.charCodeAt(0);
    if (n3[a2] !== 255)
      throw new TypeError(s2 + " is ambiguous");
    n3[a2] = o;
  }
  var u4 = t.length, i3 = t.charAt(0), D4 = Math.log(u4) / Math.log(256), c4 = Math.log(256) / Math.log(u4);
  function l3(h4) {
    if (h4 instanceof Uint8Array || (ArrayBuffer.isView(h4) ? h4 = new Uint8Array(h4.buffer, h4.byteOffset, h4.byteLength) : Array.isArray(h4) && (h4 = Uint8Array.from(h4))), !(h4 instanceof Uint8Array))
      throw new TypeError("Expected Uint8Array");
    if (h4.length === 0)
      return "";
    for (var g5 = 0, S5 = 0, v3 = 0, L4 = h4.length; v3 !== L4 && h4[v3] === 0; )
      v3++, g5++;
    for (var d3 = (L4 - v3) * c4 + 1 >>> 0, m3 = new Uint8Array(d3); v3 !== L4; ) {
      for (var F2 = h4[v3], q4 = 0, z5 = d3 - 1; (F2 !== 0 || q4 < S5) && z5 !== -1; z5--, q4++)
        F2 += 256 * m3[z5] >>> 0, m3[z5] = F2 % u4 >>> 0, F2 = F2 / u4 >>> 0;
      if (F2 !== 0)
        throw new Error("Non-zero carry");
      S5 = q4, v3++;
    }
    for (var I2 = d3 - S5; I2 !== d3 && m3[I2] === 0; )
      I2++;
    for (var O7 = i3.repeat(g5); I2 < d3; ++I2)
      O7 += t.charAt(m3[I2]);
    return O7;
  }
  function p5(h4) {
    if (typeof h4 != "string")
      throw new TypeError("Expected String");
    if (h4.length === 0)
      return new Uint8Array();
    var g5 = 0;
    if (h4[g5] !== " ") {
      for (var S5 = 0, v3 = 0; h4[g5] === i3; )
        S5++, g5++;
      for (var L4 = (h4.length - g5) * D4 + 1 >>> 0, d3 = new Uint8Array(L4); h4[g5]; ) {
        var m3 = n3[h4.charCodeAt(g5)];
        if (m3 === 255)
          return;
        for (var F2 = 0, q4 = L4 - 1; (m3 !== 0 || F2 < v3) && q4 !== -1; q4--, F2++)
          m3 += u4 * d3[q4] >>> 0, d3[q4] = m3 % 256 >>> 0, m3 = m3 / 256 >>> 0;
        if (m3 !== 0)
          throw new Error("Non-zero carry");
        v3 = F2, g5++;
      }
      if (h4[g5] !== " ") {
        for (var z5 = L4 - v3; z5 !== L4 && d3[z5] === 0; )
          z5++;
        for (var I2 = new Uint8Array(S5 + (L4 - z5)), O7 = S5; z5 !== L4; )
          I2[O7++] = d3[z5++];
        return I2;
      }
    }
  }
  function w5(h4) {
    var g5 = p5(h4);
    if (g5)
      return g5;
    throw new Error(`Non-${e} character`);
  }
  return { encode: l3, decodeUnsafe: p5, decode: w5 };
}
var Ur = Ir;
var Tr = Ur;
var He2 = (t) => {
  if (t instanceof Uint8Array && t.constructor.name === "Uint8Array")
    return t;
  if (t instanceof ArrayBuffer)
    return new Uint8Array(t);
  if (ArrayBuffer.isView(t))
    return new Uint8Array(t.buffer, t.byteOffset, t.byteLength);
  throw new Error("Unknown type, must be binary type");
};
var Fr = (t) => new TextEncoder().encode(t);
var Nr = (t) => new TextDecoder().decode(t);
var Lr = class {
  constructor(e, n3, r2) {
    this.name = e, this.prefix = n3, this.baseEncode = r2;
  }
  encode(e) {
    if (e instanceof Uint8Array)
      return `${this.prefix}${this.baseEncode(e)}`;
    throw Error("Unknown type, must be binary type");
  }
};
var Or = class {
  constructor(e, n3, r2) {
    if (this.name = e, this.prefix = n3, n3.codePointAt(0) === void 0)
      throw new Error("Invalid prefix character");
    this.prefixCodePoint = n3.codePointAt(0), this.baseDecode = r2;
  }
  decode(e) {
    if (typeof e == "string") {
      if (e.codePointAt(0) !== this.prefixCodePoint)
        throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);
      return this.baseDecode(e.slice(this.prefix.length));
    } else
      throw Error("Can only multibase decode strings");
  }
  or(e) {
    return ze2(this, e);
  }
};
var Hr = class {
  constructor(e) {
    this.decoders = e;
  }
  or(e) {
    return ze2(this, e);
  }
  decode(e) {
    const n3 = e[0], r2 = this.decoders[n3];
    if (r2)
      return r2.decode(e);
    throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);
  }
};
var ze2 = (t, e) => new Hr({ ...t.decoders || { [t.prefix]: t }, ...e.decoders || { [e.prefix]: e } });
var zr = class {
  constructor(e, n3, r2, o) {
    this.name = e, this.prefix = n3, this.baseEncode = r2, this.baseDecode = o, this.encoder = new Lr(e, n3, r2), this.decoder = new Or(e, n3, o);
  }
  encode(e) {
    return this.encoder.encode(e);
  }
  decode(e) {
    return this.decoder.decode(e);
  }
};
var Bt = ({ name: t, prefix: e, encode: n3, decode: r2 }) => new zr(t, e, n3, r2);
var ht = ({ prefix: t, name: e, alphabet: n3 }) => {
  const { encode: r2, decode: o } = Tr(n3, e);
  return Bt({ prefix: t, name: e, encode: r2, decode: (s2) => He2(o(s2)) });
};
var Mr = (t, e, n3, r2) => {
  const o = {};
  for (let c4 = 0; c4 < e.length; ++c4)
    o[e[c4]] = c4;
  let s2 = t.length;
  for (; t[s2 - 1] === "="; )
    --s2;
  const a2 = new Uint8Array(s2 * n3 / 8 | 0);
  let u4 = 0, i3 = 0, D4 = 0;
  for (let c4 = 0; c4 < s2; ++c4) {
    const l3 = o[t[c4]];
    if (l3 === void 0)
      throw new SyntaxError(`Non-${r2} character`);
    i3 = i3 << n3 | l3, u4 += n3, u4 >= 8 && (u4 -= 8, a2[D4++] = 255 & i3 >> u4);
  }
  if (u4 >= n3 || 255 & i3 << 8 - u4)
    throw new SyntaxError("Unexpected end of data");
  return a2;
};
var qr = (t, e, n3) => {
  const r2 = e[e.length - 1] === "=", o = (1 << n3) - 1;
  let s2 = "", a2 = 0, u4 = 0;
  for (let i3 = 0; i3 < t.length; ++i3)
    for (u4 = u4 << 8 | t[i3], a2 += 8; a2 > n3; )
      a2 -= n3, s2 += e[o & u4 >> a2];
  if (a2 && (s2 += e[o & u4 << n3 - a2]), r2)
    for (; s2.length * n3 & 7; )
      s2 += "=";
  return s2;
};
var k4 = ({ name: t, prefix: e, bitsPerChar: n3, alphabet: r2 }) => Bt({ prefix: e, name: t, encode(o) {
  return qr(o, r2, n3);
}, decode(o) {
  return Mr(o, r2, n3, t);
} });
var $r = Bt({ prefix: "\0", name: "identity", encode: (t) => Nr(t), decode: (t) => Fr(t) });
var kr = Object.freeze({ __proto__: null, identity: $r });
var Rr = k4({ prefix: "0", name: "base2", alphabet: "01", bitsPerChar: 1 });
var jr = Object.freeze({ __proto__: null, base2: Rr });
var Zr = k4({ prefix: "7", name: "base8", alphabet: "01234567", bitsPerChar: 3 });
var Gr = Object.freeze({ __proto__: null, base8: Zr });
var Vr = ht({ prefix: "9", name: "base10", alphabet: "0123456789" });
var Yr = Object.freeze({ __proto__: null, base10: Vr });
var Jr = k4({ prefix: "f", name: "base16", alphabet: "0123456789abcdef", bitsPerChar: 4 });
var Kr = k4({ prefix: "F", name: "base16upper", alphabet: "0123456789ABCDEF", bitsPerChar: 4 });
var Wr = Object.freeze({ __proto__: null, base16: Jr, base16upper: Kr });
var Xr = k4({ prefix: "b", name: "base32", alphabet: "abcdefghijklmnopqrstuvwxyz234567", bitsPerChar: 5 });
var Pr = k4({ prefix: "B", name: "base32upper", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567", bitsPerChar: 5 });
var Qr = k4({ prefix: "c", name: "base32pad", alphabet: "abcdefghijklmnopqrstuvwxyz234567=", bitsPerChar: 5 });
var to = k4({ prefix: "C", name: "base32padupper", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=", bitsPerChar: 5 });
var eo = k4({ prefix: "v", name: "base32hex", alphabet: "0123456789abcdefghijklmnopqrstuv", bitsPerChar: 5 });
var no = k4({ prefix: "V", name: "base32hexupper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV", bitsPerChar: 5 });
var ro = k4({ prefix: "t", name: "base32hexpad", alphabet: "0123456789abcdefghijklmnopqrstuv=", bitsPerChar: 5 });
var oo = k4({ prefix: "T", name: "base32hexpadupper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV=", bitsPerChar: 5 });
var so = k4({ prefix: "h", name: "base32z", alphabet: "ybndrfg8ejkmcpqxot1uwisza345h769", bitsPerChar: 5 });
var io = Object.freeze({ __proto__: null, base32: Xr, base32upper: Pr, base32pad: Qr, base32padupper: to, base32hex: eo, base32hexupper: no, base32hexpad: ro, base32hexpadupper: oo, base32z: so });
var uo = ht({ prefix: "k", name: "base36", alphabet: "0123456789abcdefghijklmnopqrstuvwxyz" });
var co = ht({ prefix: "K", name: "base36upper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ" });
var ao = Object.freeze({ __proto__: null, base36: uo, base36upper: co });
var fo = ht({ name: "base58btc", prefix: "z", alphabet: "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz" });
var Do = ht({ name: "base58flickr", prefix: "Z", alphabet: "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ" });
var ho = Object.freeze({ __proto__: null, base58btc: fo, base58flickr: Do });
var lo = k4({ prefix: "m", name: "base64", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", bitsPerChar: 6 });
var bo = k4({ prefix: "M", name: "base64pad", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", bitsPerChar: 6 });
var po = k4({ prefix: "u", name: "base64url", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_", bitsPerChar: 6 });
var wo = k4({ prefix: "U", name: "base64urlpad", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=", bitsPerChar: 6 });
var Eo = Object.freeze({ __proto__: null, base64: lo, base64pad: bo, base64url: po, base64urlpad: wo });
var Me2 = Array.from("🚀🪐☄🛰🌌🌑🌒🌓🌔🌕🌖🌗🌘🌍🌏🌎🐉☀💻🖥💾💿😂❤😍🤣😊🙏💕😭😘👍😅👏😁🔥🥰💔💖💙😢🤔😆🙄💪😉☺👌🤗💜😔😎😇🌹🤦🎉💞✌✨🤷😱😌🌸🙌😋💗💚😏💛🙂💓🤩😄😀🖤😃💯🙈👇🎶😒🤭❣😜💋👀😪😑💥🙋😞😩😡🤪👊🥳😥🤤👉💃😳✋😚😝😴🌟😬🙃🍀🌷😻😓⭐✅🥺🌈😈🤘💦✔😣🏃💐☹🎊💘😠☝😕🌺🎂🌻😐🖕💝🙊😹🗣💫💀👑🎵🤞😛🔴😤🌼😫⚽🤙☕🏆🤫👈😮🙆🍻🍃🐶💁😲🌿🧡🎁⚡🌞🎈❌✊👋😰🤨😶🤝🚶💰🍓💢🤟🙁🚨💨🤬✈🎀🍺🤓😙💟🌱😖👶🥴▶➡❓💎💸⬇😨🌚🦋😷🕺⚠🙅😟😵👎🤲🤠🤧📌🔵💅🧐🐾🍒😗🤑🌊🤯🐷☎💧😯💆👆🎤🙇🍑❄🌴💣🐸💌📍🥀🤢👅💡💩👐📸👻🤐🤮🎼🥵🚩🍎🍊👼💍📣🥂");
var go = Me2.reduce((t, e, n3) => (t[n3] = e, t), []);
var yo = Me2.reduce((t, e, n3) => (t[e.codePointAt(0)] = n3, t), []);
function xo(t) {
  return t.reduce((e, n3) => (e += go[n3], e), "");
}
function Bo(t) {
  const e = [];
  for (const n3 of t) {
    const r2 = yo[n3.codePointAt(0)];
    if (r2 === void 0)
      throw new Error(`Non-base256emoji character: ${n3}`);
    e.push(r2);
  }
  return new Uint8Array(e);
}
var Co = Bt({ prefix: "🚀", name: "base256emoji", encode: xo, decode: Bo });
var Ao = Object.freeze({ __proto__: null, base256emoji: Co });
var mo = $e2;
var qe2 = 128;
var _o = 127;
var So = ~_o;
var vo = Math.pow(2, 31);
function $e2(t, e, n3) {
  e = e || [], n3 = n3 || 0;
  for (var r2 = n3; t >= vo; )
    e[n3++] = t & 255 | qe2, t /= 128;
  for (; t & So; )
    e[n3++] = t & 255 | qe2, t >>>= 7;
  return e[n3] = t | 0, $e2.bytes = n3 - r2 + 1, e;
}
var Io = Pt2;
var Uo = 128;
var ke = 127;
function Pt2(t, r2) {
  var n3 = 0, r2 = r2 || 0, o = 0, s2 = r2, a2, u4 = t.length;
  do {
    if (s2 >= u4)
      throw Pt2.bytes = 0, new RangeError("Could not decode varint");
    a2 = t[s2++], n3 += o < 28 ? (a2 & ke) << o : (a2 & ke) * Math.pow(2, o), o += 7;
  } while (a2 >= Uo);
  return Pt2.bytes = s2 - r2, n3;
}
var To = Math.pow(2, 7);
var Fo = Math.pow(2, 14);
var No = Math.pow(2, 21);
var Lo = Math.pow(2, 28);
var Oo = Math.pow(2, 35);
var Ho = Math.pow(2, 42);
var zo = Math.pow(2, 49);
var Mo = Math.pow(2, 56);
var qo = Math.pow(2, 63);
var $o = function(t) {
  return t < To ? 1 : t < Fo ? 2 : t < No ? 3 : t < Lo ? 4 : t < Oo ? 5 : t < Ho ? 6 : t < zo ? 7 : t < Mo ? 8 : t < qo ? 9 : 10;
};
var ko = { encode: mo, decode: Io, encodingLength: $o };
var Re2 = ko;
var je2 = (t, e, n3 = 0) => (Re2.encode(t, e, n3), e);
var Ze2 = (t) => Re2.encodingLength(t);
var Qt = (t, e) => {
  const n3 = e.byteLength, r2 = Ze2(t), o = r2 + Ze2(n3), s2 = new Uint8Array(o + n3);
  return je2(t, s2, 0), je2(n3, s2, r2), s2.set(e, o), new Ro(t, n3, e, s2);
};
var Ro = class {
  constructor(e, n3, r2, o) {
    this.code = e, this.size = n3, this.digest = r2, this.bytes = o;
  }
};
var Ge2 = ({ name: t, code: e, encode: n3 }) => new jo(t, e, n3);
var jo = class {
  constructor(e, n3, r2) {
    this.name = e, this.code = n3, this.encode = r2;
  }
  digest(e) {
    if (e instanceof Uint8Array) {
      const n3 = this.encode(e);
      return n3 instanceof Uint8Array ? Qt(this.code, n3) : n3.then((r2) => Qt(this.code, r2));
    } else
      throw Error("Unknown type, must be binary type");
  }
};
var Ve2 = (t) => async (e) => new Uint8Array(await crypto.subtle.digest(t, e));
var Zo = Ge2({ name: "sha2-256", code: 18, encode: Ve2("SHA-256") });
var Go = Ge2({ name: "sha2-512", code: 19, encode: Ve2("SHA-512") });
var Vo = Object.freeze({ __proto__: null, sha256: Zo, sha512: Go });
var Ye2 = 0;
var Yo = "identity";
var Je2 = He2;
var Jo = (t) => Qt(Ye2, Je2(t));
var Ko = { code: Ye2, name: Yo, encode: Je2, digest: Jo };
var Wo = Object.freeze({ __proto__: null, identity: Ko });
new TextEncoder(), new TextDecoder();
var Ke = { ...kr, ...jr, ...Gr, ...Yr, ...Wr, ...io, ...ao, ...ho, ...Eo, ...Ao };
({ ...Vo, ...Wo });
function We(t, e, n3, r2) {
  return { name: t, prefix: e, encoder: { name: t, prefix: e, encode: n3 }, decoder: { decode: r2 } };
}
var Xe2 = We("utf8", "u", (t) => "u" + new TextDecoder("utf8").decode(t), (t) => new TextEncoder().encode(t.substring(1)));
var te2 = We("ascii", "a", (t) => {
  let e = "a";
  for (let n3 = 0; n3 < t.length; n3++)
    e += String.fromCharCode(t[n3]);
  return e;
}, (t) => {
  t = t.substring(1);
  const e = Le(t.length);
  for (let n3 = 0; n3 < t.length; n3++)
    e[n3] = t.charCodeAt(n3);
  return e;
});
var Pe2 = { utf8: Xe2, "utf-8": Xe2, hex: Ke.base16, latin1: te2, ascii: te2, binary: te2, ...Ke };
function ct2(t, e = "utf8") {
  const n3 = Pe2[e];
  if (!n3)
    throw new Error(`Unsupported encoding "${e}"`);
  return (e === "utf8" || e === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null ? globalThis.Buffer.from(t.buffer, t.byteOffset, t.byteLength).toString("utf8") : n3.encoder.encode(t).substring(1);
}
function rt2(t, e = "utf8") {
  const n3 = Pe2[e];
  if (!n3)
    throw new Error(`Unsupported encoding "${e}"`);
  return (e === "utf8" || e === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null ? Xt(globalThis.Buffer.from(t, "utf-8")) : n3.decoder.decode(`${n3.prefix}${t}`);
}
function bt(t) {
  return ct2(rt2(safeJsonStringify(t), Gt), Dt2);
}
function Qe2(t) {
  const e = rt2(Wt, dt2), n3 = Kt2 + ct2(Oe2([e, t]), dt2);
  return [Yt, Jt, n3].join(Vt2);
}
function en2(t) {
  return ct2(t, Dt2);
}
function rn2(t) {
  return rt2([bt(t.header), bt(t.payload)].join(ut2), xt2);
}
function on2(t) {
  return [bt(t.header), bt(t.payload), en2(t.signature)].join(ut2);
}
function Po(t = he(Ne)) {
  const e = Rt2.getPublicKey(t);
  return { secretKey: Oe2([t, e]), publicKey: e };
}
async function Qo(t, e, n3, r2, o = (0, import_time2.fromMiliseconds)(Date.now())) {
  const s2 = { alg: jt2, typ: Zt }, a2 = Qe2(r2.publicKey), u4 = o + n3, i3 = { iss: a2, sub: t, aud: e, iat: o, exp: u4 }, D4 = rn2({ header: s2, payload: i3 }), c4 = Rt2.sign(D4, r2.secretKey.slice(0, 32));
  return on2({ header: s2, payload: i3, signature: c4 });
}

// node_modules/@walletconnect/core/dist/index.es.js
var import_time3 = __toESM(require_cjs3());

// node_modules/@walletconnect/core/node_modules/@walletconnect/jsonrpc-provider/dist/esm/provider.js
var import_events3 = __toESM(require_events());
init_esm2();
var JsonRpcProvider = class extends r {
  constructor(connection) {
    super(connection);
    this.events = new import_events3.EventEmitter();
    this.hasRegisteredEventListeners = false;
    this.connection = this.setConnection(connection);
    if (this.connection.connected) {
      this.registerEventListeners();
    }
  }
  async connect(connection = this.connection) {
    await this.open(connection);
  }
  async disconnect() {
    await this.close();
  }
  on(event, listener) {
    this.events.on(event, listener);
  }
  once(event, listener) {
    this.events.once(event, listener);
  }
  off(event, listener) {
    this.events.off(event, listener);
  }
  removeListener(event, listener) {
    this.events.removeListener(event, listener);
  }
  async request(request, context) {
    return this.requestStrict(formatJsonRpcRequest(request.method, request.params || [], request.id || getBigIntRpcId().toString()), context);
  }
  async requestStrict(request, context) {
    return new Promise(async (resolve, reject) => {
      if (!this.connection.connected) {
        try {
          await this.open();
        } catch (e) {
          reject(e);
        }
      }
      this.events.on(`${request.id}`, (response) => {
        if (isJsonRpcError(response)) {
          reject(response.error);
        } else {
          resolve(response.result);
        }
      });
      try {
        await this.connection.send(request, context);
      } catch (e) {
        reject(e);
      }
    });
  }
  setConnection(connection = this.connection) {
    return connection;
  }
  onPayload(payload) {
    this.events.emit("payload", payload);
    if (isJsonRpcResponse(payload)) {
      this.events.emit(`${payload.id}`, payload);
    } else {
      this.events.emit("message", {
        type: payload.method,
        data: payload.params
      });
    }
  }
  onClose(event) {
    if (event && event.code === 3e3) {
      this.events.emit("error", new Error(`WebSocket connection closed abnormally with code: ${event.code} ${event.reason ? `(${event.reason})` : ""}`));
    }
    this.events.emit("disconnect");
  }
  async open(connection = this.connection) {
    if (this.connection === connection && this.connection.connected)
      return;
    if (this.connection.connected)
      this.close();
    if (typeof connection === "string") {
      await this.connection.open(connection);
      connection = this.connection;
    }
    this.connection = this.setConnection(connection);
    await this.connection.open();
    this.registerEventListeners();
    this.events.emit("connect");
  }
  async close() {
    await this.connection.close();
  }
  registerEventListeners() {
    if (this.hasRegisteredEventListeners)
      return;
    this.connection.on("payload", (payload) => this.onPayload(payload));
    this.connection.on("close", (event) => this.onClose(event));
    this.connection.on("error", (error) => this.events.emit("error", error));
    this.connection.on("register_error", (error) => this.onClose());
    this.hasRegisteredEventListeners = true;
  }
};

// node_modules/@walletconnect/core/dist/index.es.js
init_esm2();

// node_modules/@walletconnect/jsonrpc-ws-connection/dist/esm/ws.js
var import_events4 = __toESM(require_events());
init_esm();
init_esm2();

// node_modules/@walletconnect/jsonrpc-ws-connection/dist/esm/utils.js
var resolveWebSocketImplementation = () => {
  if (typeof global !== "undefined" && typeof global.WebSocket !== "undefined") {
    return global.WebSocket;
  }
  if (typeof window !== "undefined" && typeof window.WebSocket !== "undefined") {
    return window.WebSocket;
  }
  return require_browser3();
};
var isBrowser = () => typeof window !== "undefined";
var truncateQuery = (wssUrl) => wssUrl.split("?")[0];

// node_modules/@walletconnect/jsonrpc-ws-connection/dist/esm/ws.js
var EVENT_EMITTER_MAX_LISTENERS_DEFAULT = 10;
var WS = resolveWebSocketImplementation();
var WsConnection = class {
  constructor(url) {
    this.url = url;
    this.events = new import_events4.EventEmitter();
    this.registering = false;
    if (!isWsUrl(url)) {
      throw new Error(`Provided URL is not compatible with WebSocket connection: ${url}`);
    }
    this.url = url;
  }
  get connected() {
    return typeof this.socket !== "undefined";
  }
  get connecting() {
    return this.registering;
  }
  on(event, listener) {
    this.events.on(event, listener);
  }
  once(event, listener) {
    this.events.once(event, listener);
  }
  off(event, listener) {
    this.events.off(event, listener);
  }
  removeListener(event, listener) {
    this.events.removeListener(event, listener);
  }
  async open(url = this.url) {
    await this.register(url);
  }
  async close() {
    return new Promise((resolve, reject) => {
      if (typeof this.socket === "undefined") {
        reject(new Error("Connection already closed"));
        return;
      }
      this.socket.onclose = (event) => {
        this.onClose(event);
        resolve();
      };
      this.socket.close();
    });
  }
  async send(payload, context) {
    if (typeof this.socket === "undefined") {
      this.socket = await this.register();
    }
    try {
      this.socket.send(safeJsonStringify(payload));
    } catch (e) {
      this.onError(payload.id, e);
    }
  }
  register(url = this.url) {
    if (!isWsUrl(url)) {
      throw new Error(`Provided URL is not compatible with WebSocket connection: ${url}`);
    }
    if (this.registering) {
      const currentMaxListeners = this.events.getMaxListeners();
      if (this.events.listenerCount("register_error") >= currentMaxListeners || this.events.listenerCount("open") >= currentMaxListeners) {
        this.events.setMaxListeners(currentMaxListeners + 1);
      }
      return new Promise((resolve, reject) => {
        this.events.once("register_error", (error) => {
          this.resetMaxListeners();
          reject(error);
        });
        this.events.once("open", () => {
          this.resetMaxListeners();
          if (typeof this.socket === "undefined") {
            return reject(new Error("WebSocket connection is missing or invalid"));
          }
          resolve(this.socket);
        });
      });
    }
    this.url = url;
    this.registering = true;
    return new Promise((resolve, reject) => {
      const opts = !(0, esm_exports.isReactNative)() ? { rejectUnauthorized: !isLocalhostUrl(url) } : void 0;
      const socket = new WS(url, [], opts);
      if (isBrowser()) {
        socket.onerror = (event) => {
          const errorEvent = event;
          reject(this.emitError(errorEvent.error));
        };
      } else {
        socket.on("error", (errorEvent) => {
          reject(this.emitError(errorEvent));
        });
      }
      socket.onopen = () => {
        this.onOpen(socket);
        resolve(socket);
      };
    });
  }
  onOpen(socket) {
    socket.onmessage = (event) => this.onPayload(event);
    socket.onclose = (event) => this.onClose(event);
    this.socket = socket;
    this.registering = false;
    this.events.emit("open");
  }
  onClose(event) {
    this.socket = void 0;
    this.registering = false;
    this.events.emit("close", event);
  }
  onPayload(e) {
    if (typeof e.data === "undefined")
      return;
    const payload = typeof e.data === "string" ? safeJsonParse(e.data) : e.data;
    this.events.emit("payload", payload);
  }
  onError(id, e) {
    const error = this.parseError(e);
    const message = error.message || error.toString();
    const payload = formatJsonRpcError(id, message);
    this.events.emit("payload", payload);
  }
  parseError(e, url = this.url) {
    return parseConnectionError(e, truncateQuery(url), "WS");
  }
  resetMaxListeners() {
    if (this.events.getMaxListeners() > EVENT_EMITTER_MAX_LISTENERS_DEFAULT) {
      this.events.setMaxListeners(EVENT_EMITTER_MAX_LISTENERS_DEFAULT);
    }
  }
  emitError(errorEvent) {
    const error = this.parseError(new Error((errorEvent === null || errorEvent === void 0 ? void 0 : errorEvent.message) || `WebSocket connection failed for host: ${truncateQuery(this.url)}`));
    this.events.emit("register_error", error);
    return error;
  }
};
var ws_default = WsConnection;

// node_modules/@walletconnect/jsonrpc-ws-connection/dist/esm/index.js
var esm_default = ws_default;

// node_modules/@walletconnect/core/dist/index.es.js
var import_lodash = __toESM(require_lodash());
function Fi(r2, e) {
  if (r2.length >= 255)
    throw new TypeError("Alphabet too long");
  for (var t = new Uint8Array(256), i3 = 0; i3 < t.length; i3++)
    t[i3] = 255;
  for (var s2 = 0; s2 < r2.length; s2++) {
    var n3 = r2.charAt(s2), a2 = n3.charCodeAt(0);
    if (t[a2] !== 255)
      throw new TypeError(n3 + " is ambiguous");
    t[a2] = s2;
  }
  var o = r2.length, h4 = r2.charAt(0), d3 = Math.log(o) / Math.log(256), l3 = Math.log(256) / Math.log(o);
  function D4(u4) {
    if (u4 instanceof Uint8Array || (ArrayBuffer.isView(u4) ? u4 = new Uint8Array(u4.buffer, u4.byteOffset, u4.byteLength) : Array.isArray(u4) && (u4 = Uint8Array.from(u4))), !(u4 instanceof Uint8Array))
      throw new TypeError("Expected Uint8Array");
    if (u4.length === 0)
      return "";
    for (var y5 = 0, A = 0, v3 = 0, R2 = u4.length; v3 !== R2 && u4[v3] === 0; )
      v3++, y5++;
    for (var T2 = (R2 - v3) * l3 + 1 >>> 0, m3 = new Uint8Array(T2); v3 !== R2; ) {
      for (var S5 = u4[v3], x5 = 0, I2 = T2 - 1; (S5 !== 0 || x5 < A) && I2 !== -1; I2--, x5++)
        S5 += 256 * m3[I2] >>> 0, m3[I2] = S5 % o >>> 0, S5 = S5 / o >>> 0;
      if (S5 !== 0)
        throw new Error("Non-zero carry");
      A = x5, v3++;
    }
    for (var P3 = T2 - A; P3 !== T2 && m3[P3] === 0; )
      P3++;
    for (var B2 = h4.repeat(y5); P3 < T2; ++P3)
      B2 += r2.charAt(m3[P3]);
    return B2;
  }
  function b6(u4) {
    if (typeof u4 != "string")
      throw new TypeError("Expected String");
    if (u4.length === 0)
      return new Uint8Array();
    var y5 = 0;
    if (u4[y5] !== " ") {
      for (var A = 0, v3 = 0; u4[y5] === h4; )
        A++, y5++;
      for (var R2 = (u4.length - y5) * d3 + 1 >>> 0, T2 = new Uint8Array(R2); u4[y5]; ) {
        var m3 = t[u4.charCodeAt(y5)];
        if (m3 === 255)
          return;
        for (var S5 = 0, x5 = R2 - 1; (m3 !== 0 || S5 < v3) && x5 !== -1; x5--, S5++)
          m3 += o * T2[x5] >>> 0, T2[x5] = m3 % 256 >>> 0, m3 = m3 / 256 >>> 0;
        if (m3 !== 0)
          throw new Error("Non-zero carry");
        v3 = S5, y5++;
      }
      if (u4[y5] !== " ") {
        for (var I2 = R2 - v3; I2 !== R2 && T2[I2] === 0; )
          I2++;
        for (var P3 = new Uint8Array(A + (R2 - I2)), B2 = A; I2 !== R2; )
          P3[B2++] = T2[I2++];
        return P3;
      }
    }
  }
  function k5(u4) {
    var y5 = b6(u4);
    if (y5)
      return y5;
    throw new Error(`Non-${e} character`);
  }
  return { encode: D4, decodeUnsafe: b6, decode: k5 };
}
var $i = Fi;
var Mi = $i;
var Oe3 = (r2) => {
  if (r2 instanceof Uint8Array && r2.constructor.name === "Uint8Array")
    return r2;
  if (r2 instanceof ArrayBuffer)
    return new Uint8Array(r2);
  if (ArrayBuffer.isView(r2))
    return new Uint8Array(r2.buffer, r2.byteOffset, r2.byteLength);
  throw new Error("Unknown type, must be binary type");
};
var Ki = (r2) => new TextEncoder().encode(r2);
var ki = (r2) => new TextDecoder().decode(r2);
var Bi = class {
  constructor(e, t, i3) {
    this.name = e, this.prefix = t, this.baseEncode = i3;
  }
  encode(e) {
    if (e instanceof Uint8Array)
      return `${this.prefix}${this.baseEncode(e)}`;
    throw Error("Unknown type, must be binary type");
  }
};
var ji = class {
  constructor(e, t, i3) {
    if (this.name = e, this.prefix = t, t.codePointAt(0) === void 0)
      throw new Error("Invalid prefix character");
    this.prefixCodePoint = t.codePointAt(0), this.baseDecode = i3;
  }
  decode(e) {
    if (typeof e == "string") {
      if (e.codePointAt(0) !== this.prefixCodePoint)
        throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);
      return this.baseDecode(e.slice(this.prefix.length));
    } else
      throw Error("Can only multibase decode strings");
  }
  or(e) {
    return xe3(this, e);
  }
};
var Vi = class {
  constructor(e) {
    this.decoders = e;
  }
  or(e) {
    return xe3(this, e);
  }
  decode(e) {
    const t = e[0], i3 = this.decoders[t];
    if (i3)
      return i3.decode(e);
    throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);
  }
};
var xe3 = (r2, e) => new Vi({ ...r2.decoders || { [r2.prefix]: r2 }, ...e.decoders || { [e.prefix]: e } });
var qi = class {
  constructor(e, t, i3, s2) {
    this.name = e, this.prefix = t, this.baseEncode = i3, this.baseDecode = s2, this.encoder = new Bi(e, t, i3), this.decoder = new ji(e, t, s2);
  }
  encode(e) {
    return this.encoder.encode(e);
  }
  decode(e) {
    return this.decoder.decode(e);
  }
};
var H3 = ({ name: r2, prefix: e, encode: t, decode: i3 }) => new qi(r2, e, t, i3);
var M2 = ({ prefix: r2, name: e, alphabet: t }) => {
  const { encode: i3, decode: s2 } = Mi(t, e);
  return H3({ prefix: r2, name: e, encode: i3, decode: (n3) => Oe3(s2(n3)) });
};
var Yi = (r2, e, t, i3) => {
  const s2 = {};
  for (let l3 = 0; l3 < e.length; ++l3)
    s2[e[l3]] = l3;
  let n3 = r2.length;
  for (; r2[n3 - 1] === "="; )
    --n3;
  const a2 = new Uint8Array(n3 * t / 8 | 0);
  let o = 0, h4 = 0, d3 = 0;
  for (let l3 = 0; l3 < n3; ++l3) {
    const D4 = s2[r2[l3]];
    if (D4 === void 0)
      throw new SyntaxError(`Non-${i3} character`);
    h4 = h4 << t | D4, o += t, o >= 8 && (o -= 8, a2[d3++] = 255 & h4 >> o);
  }
  if (o >= t || 255 & h4 << 8 - o)
    throw new SyntaxError("Unexpected end of data");
  return a2;
};
var Gi = (r2, e, t) => {
  const i3 = e[e.length - 1] === "=", s2 = (1 << t) - 1;
  let n3 = "", a2 = 0, o = 0;
  for (let h4 = 0; h4 < r2.length; ++h4)
    for (o = o << 8 | r2[h4], a2 += 8; a2 > t; )
      a2 -= t, n3 += e[s2 & o >> a2];
  if (a2 && (n3 += e[s2 & o << t - a2]), i3)
    for (; n3.length * t & 7; )
      n3 += "=";
  return n3;
};
var p3 = ({ name: r2, prefix: e, bitsPerChar: t, alphabet: i3 }) => H3({ prefix: e, name: r2, encode(s2) {
  return Gi(s2, i3, t);
}, decode(s2) {
  return Yi(s2, i3, t, r2);
} });
var Ji = H3({ prefix: "\0", name: "identity", encode: (r2) => ki(r2), decode: (r2) => Ki(r2) });
var Hi = Object.freeze({ __proto__: null, identity: Ji });
var Wi = p3({ prefix: "0", name: "base2", alphabet: "01", bitsPerChar: 1 });
var Xi = Object.freeze({ __proto__: null, base2: Wi });
var Zi = p3({ prefix: "7", name: "base8", alphabet: "01234567", bitsPerChar: 3 });
var Qi = Object.freeze({ __proto__: null, base8: Zi });
var es = M2({ prefix: "9", name: "base10", alphabet: "0123456789" });
var ts = Object.freeze({ __proto__: null, base10: es });
var is = p3({ prefix: "f", name: "base16", alphabet: "0123456789abcdef", bitsPerChar: 4 });
var ss = p3({ prefix: "F", name: "base16upper", alphabet: "0123456789ABCDEF", bitsPerChar: 4 });
var rs = Object.freeze({ __proto__: null, base16: is, base16upper: ss });
var ns = p3({ prefix: "b", name: "base32", alphabet: "abcdefghijklmnopqrstuvwxyz234567", bitsPerChar: 5 });
var as = p3({ prefix: "B", name: "base32upper", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567", bitsPerChar: 5 });
var os = p3({ prefix: "c", name: "base32pad", alphabet: "abcdefghijklmnopqrstuvwxyz234567=", bitsPerChar: 5 });
var hs = p3({ prefix: "C", name: "base32padupper", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=", bitsPerChar: 5 });
var cs = p3({ prefix: "v", name: "base32hex", alphabet: "0123456789abcdefghijklmnopqrstuv", bitsPerChar: 5 });
var us = p3({ prefix: "V", name: "base32hexupper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV", bitsPerChar: 5 });
var ls = p3({ prefix: "t", name: "base32hexpad", alphabet: "0123456789abcdefghijklmnopqrstuv=", bitsPerChar: 5 });
var ds = p3({ prefix: "T", name: "base32hexpadupper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV=", bitsPerChar: 5 });
var gs = p3({ prefix: "h", name: "base32z", alphabet: "ybndrfg8ejkmcpqxot1uwisza345h769", bitsPerChar: 5 });
var ps = Object.freeze({ __proto__: null, base32: ns, base32upper: as, base32pad: os, base32padupper: hs, base32hex: cs, base32hexupper: us, base32hexpad: ls, base32hexpadupper: ds, base32z: gs });
var Ds = M2({ prefix: "k", name: "base36", alphabet: "0123456789abcdefghijklmnopqrstuvwxyz" });
var ys = M2({ prefix: "K", name: "base36upper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ" });
var bs = Object.freeze({ __proto__: null, base36: Ds, base36upper: ys });
var ms = M2({ name: "base58btc", prefix: "z", alphabet: "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz" });
var Es = M2({ name: "base58flickr", prefix: "Z", alphabet: "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ" });
var fs = Object.freeze({ __proto__: null, base58btc: ms, base58flickr: Es });
var ws = p3({ prefix: "m", name: "base64", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", bitsPerChar: 6 });
var vs = p3({ prefix: "M", name: "base64pad", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", bitsPerChar: 6 });
var Is = p3({ prefix: "u", name: "base64url", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_", bitsPerChar: 6 });
var Cs = p3({ prefix: "U", name: "base64urlpad", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=", bitsPerChar: 6 });
var _s = Object.freeze({ __proto__: null, base64: ws, base64pad: vs, base64url: Is, base64urlpad: Cs });
var Ae3 = Array.from("🚀🪐☄🛰🌌🌑🌒🌓🌔🌕🌖🌗🌘🌍🌏🌎🐉☀💻🖥💾💿😂❤😍🤣😊🙏💕😭😘👍😅👏😁🔥🥰💔💖💙😢🤔😆🙄💪😉☺👌🤗💜😔😎😇🌹🤦🎉💞✌✨🤷😱😌🌸🙌😋💗💚😏💛🙂💓🤩😄😀🖤😃💯🙈👇🎶😒🤭❣😜💋👀😪😑💥🙋😞😩😡🤪👊🥳😥🤤👉💃😳✋😚😝😴🌟😬🙃🍀🌷😻😓⭐✅🥺🌈😈🤘💦✔😣🏃💐☹🎊💘😠☝😕🌺🎂🌻😐🖕💝🙊😹🗣💫💀👑🎵🤞😛🔴😤🌼😫⚽🤙☕🏆🤫👈😮🙆🍻🍃🐶💁😲🌿🧡🎁⚡🌞🎈❌✊👋😰🤨😶🤝🚶💰🍓💢🤟🙁🚨💨🤬✈🎀🍺🤓😙💟🌱😖👶🥴▶➡❓💎💸⬇😨🌚🦋😷🕺⚠🙅😟😵👎🤲🤠🤧📌🔵💅🧐🐾🍒😗🤑🌊🤯🐷☎💧😯💆👆🎤🙇🍑❄🌴💣🐸💌📍🥀🤢👅💡💩👐📸👻🤐🤮🎼🥵🚩🍎🍊👼💍📣🥂");
var Rs = Ae3.reduce((r2, e, t) => (r2[t] = e, r2), []);
var Ts = Ae3.reduce((r2, e, t) => (r2[e.codePointAt(0)] = t, r2), []);
function Ss(r2) {
  return r2.reduce((e, t) => (e += Rs[t], e), "");
}
function Ps(r2) {
  const e = [];
  for (const t of r2) {
    const i3 = Ts[t.codePointAt(0)];
    if (i3 === void 0)
      throw new Error(`Non-base256emoji character: ${t}`);
    e.push(i3);
  }
  return new Uint8Array(e);
}
var Os = H3({ prefix: "🚀", name: "base256emoji", encode: Ss, decode: Ps });
var xs = Object.freeze({ __proto__: null, base256emoji: Os });
var As = Ne2;
var ze3 = 128;
var zs = 127;
var Ns = ~zs;
var Us = Math.pow(2, 31);
function Ne2(r2, e, t) {
  e = e || [], t = t || 0;
  for (var i3 = t; r2 >= Us; )
    e[t++] = r2 & 255 | ze3, r2 /= 128;
  for (; r2 & Ns; )
    e[t++] = r2 & 255 | ze3, r2 >>>= 7;
  return e[t] = r2 | 0, Ne2.bytes = t - i3 + 1, e;
}
var Ls = ae2;
var Fs = 128;
var Ue2 = 127;
function ae2(r2, i3) {
  var t = 0, i3 = i3 || 0, s2 = 0, n3 = i3, a2, o = r2.length;
  do {
    if (n3 >= o)
      throw ae2.bytes = 0, new RangeError("Could not decode varint");
    a2 = r2[n3++], t += s2 < 28 ? (a2 & Ue2) << s2 : (a2 & Ue2) * Math.pow(2, s2), s2 += 7;
  } while (a2 >= Fs);
  return ae2.bytes = n3 - i3, t;
}
var $s = Math.pow(2, 7);
var Ms = Math.pow(2, 14);
var Ks = Math.pow(2, 21);
var ks = Math.pow(2, 28);
var Bs = Math.pow(2, 35);
var js = Math.pow(2, 42);
var Vs = Math.pow(2, 49);
var qs = Math.pow(2, 56);
var Ys = Math.pow(2, 63);
var Gs = function(r2) {
  return r2 < $s ? 1 : r2 < Ms ? 2 : r2 < Ks ? 3 : r2 < ks ? 4 : r2 < Bs ? 5 : r2 < js ? 6 : r2 < Vs ? 7 : r2 < qs ? 8 : r2 < Ys ? 9 : 10;
};
var Js = { encode: As, decode: Ls, encodingLength: Gs };
var Le2 = Js;
var Fe2 = (r2, e, t = 0) => (Le2.encode(r2, e, t), e);
var $e3 = (r2) => Le2.encodingLength(r2);
var oe2 = (r2, e) => {
  const t = e.byteLength, i3 = $e3(r2), s2 = i3 + $e3(t), n3 = new Uint8Array(s2 + t);
  return Fe2(r2, n3, 0), Fe2(t, n3, i3), n3.set(e, s2), new Hs(r2, t, e, n3);
};
var Hs = class {
  constructor(e, t, i3, s2) {
    this.code = e, this.size = t, this.digest = i3, this.bytes = s2;
  }
};
var Me3 = ({ name: r2, code: e, encode: t }) => new Ws(r2, e, t);
var Ws = class {
  constructor(e, t, i3) {
    this.name = e, this.code = t, this.encode = i3;
  }
  digest(e) {
    if (e instanceof Uint8Array) {
      const t = this.encode(e);
      return t instanceof Uint8Array ? oe2(this.code, t) : t.then((i3) => oe2(this.code, i3));
    } else
      throw Error("Unknown type, must be binary type");
  }
};
var Ke2 = (r2) => async (e) => new Uint8Array(await crypto.subtle.digest(r2, e));
var Xs = Me3({ name: "sha2-256", code: 18, encode: Ke2("SHA-256") });
var Zs = Me3({ name: "sha2-512", code: 19, encode: Ke2("SHA-512") });
var Qs = Object.freeze({ __proto__: null, sha256: Xs, sha512: Zs });
var ke2 = 0;
var er2 = "identity";
var Be2 = Oe3;
var tr2 = (r2) => oe2(ke2, Be2(r2));
var ir2 = { code: ke2, name: er2, encode: Be2, digest: tr2 };
var sr2 = Object.freeze({ __proto__: null, identity: ir2 });
new TextEncoder(), new TextDecoder();
var je3 = { ...Hi, ...Xi, ...Qi, ...ts, ...rs, ...ps, ...bs, ...fs, ..._s, ...xs };
({ ...Qs, ...sr2 });
function Ve3(r2) {
  return globalThis.Buffer != null ? new Uint8Array(r2.buffer, r2.byteOffset, r2.byteLength) : r2;
}
function rr2(r2 = 0) {
  return globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null ? Ve3(globalThis.Buffer.allocUnsafe(r2)) : new Uint8Array(r2);
}
function qe3(r2, e, t, i3) {
  return { name: r2, prefix: e, encoder: { name: r2, prefix: e, encode: t }, decoder: { decode: i3 } };
}
var Ye3 = qe3("utf8", "u", (r2) => "u" + new TextDecoder("utf8").decode(r2), (r2) => new TextEncoder().encode(r2.substring(1)));
var he2 = qe3("ascii", "a", (r2) => {
  let e = "a";
  for (let t = 0; t < r2.length; t++)
    e += String.fromCharCode(r2[t]);
  return e;
}, (r2) => {
  r2 = r2.substring(1);
  const e = rr2(r2.length);
  for (let t = 0; t < r2.length; t++)
    e[t] = r2.charCodeAt(t);
  return e;
});
var nr2 = { utf8: Ye3, "utf-8": Ye3, hex: je3.base16, latin1: he2, ascii: he2, binary: he2, ...je3 };
function ar2(r2, e = "utf8") {
  const t = nr2[e];
  if (!t)
    throw new Error(`Unsupported encoding "${e}"`);
  return (e === "utf8" || e === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null ? Ve3(globalThis.Buffer.from(r2, "utf-8")) : t.decoder.decode(`${t.prefix}${r2}`);
}
var ce2 = "wc";
var Ge3 = 2;
var W2 = "core";
var O4 = `${ce2}@2:${W2}:`;
var Je3 = { name: W2, logger: "error" };
var He3 = { database: ":memory:" };
var We2 = "crypto";
var ue2 = "client_ed25519_seed";
var Xe3 = import_time3.ONE_DAY;
var Ze3 = "keychain";
var Qe3 = "0.3";
var et2 = "messages";
var tt2 = "0.3";
var it3 = import_time3.SIX_HOURS;
var st2 = "publisher";
var rt3 = "irn";
var nt3 = "error";
var le2 = "wss://relay.walletconnect.com";
var de3 = "wss://relay.walletconnect.org";
var at2 = "relayer";
var g3 = { message: "relayer_message", message_ack: "relayer_message_ack", connect: "relayer_connect", disconnect: "relayer_disconnect", error: "relayer_error", connection_stalled: "relayer_connection_stalled", transport_closed: "relayer_transport_closed", publish: "relayer_publish" };
var ot2 = "_subscription";
var L2 = { payload: "payload", connect: "connect", disconnect: "disconnect", error: "error" };
var ht2 = import_time3.ONE_SECOND / 2;
var ct3 = "2.9.0";
var ut3 = 1e4;
var lt2 = "0.3";
var dt3 = "WALLETCONNECT_CLIENT_ID";
var C3 = { created: "subscription_created", deleted: "subscription_deleted", expired: "subscription_expired", disabled: "subscription_disabled", sync: "subscription_sync", resubscribed: "subscription_resubscribed" };
var gt2 = "subscription";
var pt2 = "0.3";
var Dt3 = import_time3.FIVE_SECONDS * 1e3;
var yt3 = "pairing";
var bt2 = "0.3";
var F = { wc_pairingDelete: { req: { ttl: import_time3.ONE_DAY, prompt: false, tag: 1e3 }, res: { ttl: import_time3.ONE_DAY, prompt: false, tag: 1001 } }, wc_pairingPing: { req: { ttl: import_time3.THIRTY_SECONDS, prompt: false, tag: 1002 }, res: { ttl: import_time3.THIRTY_SECONDS, prompt: false, tag: 1003 } }, unregistered_method: { req: { ttl: import_time3.ONE_DAY, prompt: false, tag: 0 }, res: { ttl: import_time3.ONE_DAY, prompt: false, tag: 0 } } };
var _3 = { created: "history_created", updated: "history_updated", deleted: "history_deleted", sync: "history_sync" };
var mt2 = "history";
var Et2 = "0.3";
var ft3 = "expirer";
var w3 = { created: "expirer_created", deleted: "expirer_deleted", expired: "expirer_expired", sync: "expirer_sync" };
var wt3 = "0.3";
var X = "verify-api";
var ge2 = "https://verify.walletconnect.com";
var vt2 = class {
  constructor(e, t) {
    this.core = e, this.logger = t, this.keychain = /* @__PURE__ */ new Map(), this.name = Ze3, this.version = Qe3, this.initialized = false, this.storagePrefix = O4, this.init = async () => {
      if (!this.initialized) {
        const i3 = await this.getKeyChain();
        typeof i3 < "u" && (this.keychain = i3), this.initialized = true;
      }
    }, this.has = (i3) => (this.isInitialized(), this.keychain.has(i3)), this.set = async (i3, s2) => {
      this.isInitialized(), this.keychain.set(i3, s2), await this.persist();
    }, this.get = (i3) => {
      this.isInitialized();
      const s2 = this.keychain.get(i3);
      if (typeof s2 > "u") {
        const { message: n3 } = b("NO_MATCHING_KEY", `${this.name}: ${i3}`);
        throw new Error(n3);
      }
      return s2;
    }, this.del = async (i3) => {
      this.isInitialized(), this.keychain.delete(i3), await this.persist();
    }, this.core = e, this.logger = E2(t, this.name);
  }
  get context() {
    return y2(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + "//" + this.name;
  }
  async setKeyChain(e) {
    await this.core.storage.setItem(this.storageKey, Bn(e));
  }
  async getKeyChain() {
    const e = await this.core.storage.getItem(this.storageKey);
    return typeof e < "u" ? Yn(e) : void 0;
  }
  async persist() {
    await this.setKeyChain(this.keychain);
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e } = b("NOT_INITIALIZED", this.name);
      throw new Error(e);
    }
  }
};
var It2 = class {
  constructor(e, t, i3) {
    this.core = e, this.logger = t, this.name = We2, this.initialized = false, this.init = async () => {
      this.initialized || (await this.keychain.init(), this.initialized = true);
    }, this.hasKeys = (s2) => (this.isInitialized(), this.keychain.has(s2)), this.getClientId = async () => {
      this.isInitialized();
      const s2 = await this.getClientSeed(), n3 = Po(s2);
      return Qe2(n3.publicKey);
    }, this.generateKeyPair = () => {
      this.isInitialized();
      const s2 = wn();
      return this.setPrivateKey(s2.publicKey, s2.privateKey);
    }, this.signJWT = async (s2) => {
      this.isInitialized();
      const n3 = await this.getClientSeed(), a2 = Po(n3), o = An(), h4 = Xe3;
      return await Qo(o, s2, h4, a2);
    }, this.generateSharedKey = (s2, n3, a2) => {
      this.isInitialized();
      const o = this.getPrivateKey(s2), h4 = Un(o, n3);
      return this.setSymKey(h4, a2);
    }, this.setSymKey = async (s2, n3) => {
      this.isInitialized();
      const a2 = n3 || _n(s2);
      return await this.keychain.set(a2, s2), a2;
    }, this.deleteKeyPair = async (s2) => {
      this.isInitialized(), await this.keychain.del(s2);
    }, this.deleteSymKey = async (s2) => {
      this.isInitialized(), await this.keychain.del(s2);
    }, this.encode = async (s2, n3, a2) => {
      this.isInitialized();
      const o = Pe(a2), h4 = safeJsonStringify(n3);
      if (Vn(o)) {
        const b6 = o.senderPublicKey, k5 = o.receiverPublicKey;
        s2 = await this.generateSharedKey(b6, k5);
      }
      const d3 = this.getSymKey(s2), { type: l3, senderPublicKey: D4 } = o;
      return jn({ type: l3, symKey: d3, message: h4, senderPublicKey: D4 });
    }, this.decode = async (s2, n3, a2) => {
      this.isInitialized();
      const o = Dn(n3, a2);
      if (Vn(o)) {
        const l3 = o.receiverPublicKey, D4 = o.senderPublicKey;
        s2 = await this.generateSharedKey(l3, D4);
      }
      const h4 = this.getSymKey(s2), d3 = Cn({ symKey: h4, encoded: n3 });
      return safeJsonParse(d3);
    }, this.getPayloadType = (s2) => {
      const n3 = Z(s2);
      return $(n3.type);
    }, this.getPayloadSenderPublicKey = (s2) => {
      const n3 = Z(s2);
      return n3.senderPublicKey ? toString2(n3.senderPublicKey, f2) : void 0;
    }, this.core = e, this.logger = E2(t, this.name), this.keychain = i3 || new vt2(this.core, this.logger);
  }
  get context() {
    return y2(this.logger);
  }
  async setPrivateKey(e, t) {
    return await this.keychain.set(e, t), e;
  }
  getPrivateKey(e) {
    return this.keychain.get(e);
  }
  async getClientSeed() {
    let e = "";
    try {
      e = this.keychain.get(ue2);
    } catch {
      e = An(), await this.keychain.set(ue2, e);
    }
    return ar2(e, "base16");
  }
  getSymKey(e) {
    return this.keychain.get(e);
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e } = b("NOT_INITIALIZED", this.name);
      throw new Error(e);
    }
  }
};
var Ct2 = class extends a {
  constructor(e, t) {
    super(e, t), this.logger = e, this.core = t, this.messages = /* @__PURE__ */ new Map(), this.name = et2, this.version = tt2, this.initialized = false, this.storagePrefix = O4, this.init = async () => {
      if (!this.initialized) {
        this.logger.trace("Initialized");
        try {
          const i3 = await this.getRelayerMessages();
          typeof i3 < "u" && (this.messages = i3), this.logger.debug(`Successfully Restored records for ${this.name}`), this.logger.trace({ type: "method", method: "restore", size: this.messages.size });
        } catch (i3) {
          this.logger.debug(`Failed to Restore records for ${this.name}`), this.logger.error(i3);
        } finally {
          this.initialized = true;
        }
      }
    }, this.set = async (i3, s2) => {
      this.isInitialized();
      const n3 = $n(s2);
      let a2 = this.messages.get(i3);
      return typeof a2 > "u" && (a2 = {}), typeof a2[n3] < "u" || (a2[n3] = s2, this.messages.set(i3, a2), await this.persist()), n3;
    }, this.get = (i3) => {
      this.isInitialized();
      let s2 = this.messages.get(i3);
      return typeof s2 > "u" && (s2 = {}), s2;
    }, this.has = (i3, s2) => {
      this.isInitialized();
      const n3 = this.get(i3), a2 = $n(s2);
      return typeof n3[a2] < "u";
    }, this.del = async (i3) => {
      this.isInitialized(), this.messages.delete(i3), await this.persist();
    }, this.logger = E2(e, this.name), this.core = t;
  }
  get context() {
    return y2(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + "//" + this.name;
  }
  async setRelayerMessages(e) {
    await this.core.storage.setItem(this.storageKey, Bn(e));
  }
  async getRelayerMessages() {
    const e = await this.core.storage.getItem(this.storageKey);
    return typeof e < "u" ? Yn(e) : void 0;
  }
  async persist() {
    await this.setRelayerMessages(this.messages);
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e } = b("NOT_INITIALIZED", this.name);
      throw new Error(e);
    }
  }
};
var lr2 = class extends u {
  constructor(e, t) {
    super(e, t), this.relayer = e, this.logger = t, this.events = new import_events5.EventEmitter(), this.name = st2, this.queue = /* @__PURE__ */ new Map(), this.publishTimeout = (0, import_time3.toMiliseconds)(import_time3.TEN_SECONDS), this.queueTimeout = (0, import_time3.toMiliseconds)(import_time3.FIVE_SECONDS), this.needsTransportRestart = false, this.publish = async (i3, s2, n3) => {
      this.logger.debug("Publishing Payload"), this.logger.trace({ type: "method", method: "publish", params: { topic: i3, message: s2, opts: n3 } });
      try {
        const a2 = (n3 == null ? void 0 : n3.ttl) || it3, o = at(n3), h4 = (n3 == null ? void 0 : n3.prompt) || false, d3 = (n3 == null ? void 0 : n3.tag) || 0, l3 = (n3 == null ? void 0 : n3.id) || getBigIntRpcId().toString(), D4 = { topic: i3, message: s2, opts: { ttl: a2, relay: o, prompt: h4, tag: d3, id: l3 } }, b6 = setTimeout(() => this.queue.set(l3, D4), this.queueTimeout);
        try {
          await await et(this.rpcPublish(i3, s2, a2, o, h4, d3, l3), this.publishTimeout), clearTimeout(b6), this.relayer.events.emit(g3.publish, D4);
        } catch {
          this.logger.debug("Publishing Payload stalled"), this.needsTransportRestart = true;
          return;
        }
        this.logger.debug("Successfully Published Payload"), this.logger.trace({ type: "method", method: "publish", params: { topic: i3, message: s2, opts: n3 } });
      } catch (a2) {
        throw this.logger.debug("Failed to Publish Payload"), this.logger.error(a2), a2;
      }
    }, this.on = (i3, s2) => {
      this.events.on(i3, s2);
    }, this.once = (i3, s2) => {
      this.events.once(i3, s2);
    }, this.off = (i3, s2) => {
      this.events.off(i3, s2);
    }, this.removeListener = (i3, s2) => {
      this.events.removeListener(i3, s2);
    }, this.relayer = e, this.logger = E2(t, this.name), this.registerEventListeners();
  }
  get context() {
    return y2(this.logger);
  }
  rpcPublish(e, t, i3, s2, n3, a2, o) {
    var h4, d3, l3, D4;
    const b6 = { method: ut(s2.protocol).publish, params: { topic: e, message: t, ttl: i3, prompt: n3, tag: a2 }, id: o };
    return I((h4 = b6.params) == null ? void 0 : h4.prompt) && ((d3 = b6.params) == null || delete d3.prompt), I((l3 = b6.params) == null ? void 0 : l3.tag) && ((D4 = b6.params) == null || delete D4.tag), this.logger.debug("Outgoing Relay Payload"), this.logger.trace({ type: "message", direction: "outgoing", request: b6 }), this.relayer.request(b6);
  }
  onPublish(e) {
    this.queue.delete(e);
  }
  checkQueue() {
    this.queue.forEach(async (e) => {
      const { topic: t, message: i3, opts: s2 } = e;
      await this.publish(t, i3, s2);
    });
  }
  registerEventListeners() {
    this.relayer.core.heartbeat.on(import_heartbeat.HEARTBEAT_EVENTS.pulse, () => {
      if (this.needsTransportRestart) {
        this.needsTransportRestart = false, this.relayer.events.emit(g3.connection_stalled);
        return;
      }
      this.checkQueue();
    }), this.relayer.on(g3.message_ack, (e) => {
      this.onPublish(e.id.toString());
    });
  }
};
var dr2 = class {
  constructor() {
    this.map = /* @__PURE__ */ new Map(), this.set = (e, t) => {
      const i3 = this.get(e);
      this.exists(e, t) || this.map.set(e, [...i3, t]);
    }, this.get = (e) => this.map.get(e) || [], this.exists = (e, t) => this.get(e).includes(t), this.delete = (e, t) => {
      if (typeof t > "u") {
        this.map.delete(e);
        return;
      }
      if (!this.map.has(e))
        return;
      const i3 = this.get(e);
      if (!this.exists(e, t))
        return;
      const s2 = i3.filter((n3) => n3 !== t);
      if (!s2.length) {
        this.map.delete(e);
        return;
      }
      this.map.set(e, s2);
    }, this.clear = () => {
      this.map.clear();
    };
  }
  get topics() {
    return Array.from(this.map.keys());
  }
};
var gr2 = Object.defineProperty;
var pr2 = Object.defineProperties;
var Dr2 = Object.getOwnPropertyDescriptors;
var _t3 = Object.getOwnPropertySymbols;
var yr2 = Object.prototype.hasOwnProperty;
var br2 = Object.prototype.propertyIsEnumerable;
var Rt3 = (r2, e, t) => e in r2 ? gr2(r2, e, { enumerable: true, configurable: true, writable: true, value: t }) : r2[e] = t;
var K3 = (r2, e) => {
  for (var t in e || (e = {}))
    yr2.call(e, t) && Rt3(r2, t, e[t]);
  if (_t3)
    for (var t of _t3(e))
      br2.call(e, t) && Rt3(r2, t, e[t]);
  return r2;
};
var pe3 = (r2, e) => pr2(r2, Dr2(e));
var Tt3 = class extends d2 {
  constructor(e, t) {
    super(e, t), this.relayer = e, this.logger = t, this.subscriptions = /* @__PURE__ */ new Map(), this.topicMap = new dr2(), this.events = new import_events5.EventEmitter(), this.name = gt2, this.version = pt2, this.pending = /* @__PURE__ */ new Map(), this.cached = [], this.initialized = false, this.pendingSubscriptionWatchLabel = "pending_sub_watch_label", this.pollingInterval = 20, this.storagePrefix = O4, this.subscribeTimeout = 1e4, this.restartInProgress = false, this.batchSubscribeTopicsLimit = 500, this.init = async () => {
      this.initialized || (this.logger.trace("Initialized"), await this.restart(), this.registerEventListeners(), this.onEnable(), this.clientId = await this.relayer.core.crypto.getClientId());
    }, this.subscribe = async (i3, s2) => {
      await this.restartToComplete(), this.isInitialized(), this.logger.debug("Subscribing Topic"), this.logger.trace({ type: "method", method: "subscribe", params: { topic: i3, opts: s2 } });
      try {
        const n3 = at(s2), a2 = { topic: i3, relay: n3 };
        this.pending.set(i3, a2);
        const o = await this.rpcSubscribe(i3, n3);
        return this.onSubscribe(o, a2), this.logger.debug("Successfully Subscribed Topic"), this.logger.trace({ type: "method", method: "subscribe", params: { topic: i3, opts: s2 } }), o;
      } catch (n3) {
        throw this.logger.debug("Failed to Subscribe Topic"), this.logger.error(n3), n3;
      }
    }, this.unsubscribe = async (i3, s2) => {
      await this.restartToComplete(), this.isInitialized(), typeof (s2 == null ? void 0 : s2.id) < "u" ? await this.unsubscribeById(i3, s2.id, s2) : await this.unsubscribeByTopic(i3, s2);
    }, this.isSubscribed = async (i3) => this.topics.includes(i3) ? true : await new Promise((s2, n3) => {
      const a2 = new import_time3.Watch();
      a2.start(this.pendingSubscriptionWatchLabel);
      const o = setInterval(() => {
        !this.pending.has(i3) && this.topics.includes(i3) && (clearInterval(o), a2.stop(this.pendingSubscriptionWatchLabel), s2(true)), a2.elapsed(this.pendingSubscriptionWatchLabel) >= Dt3 && (clearInterval(o), a2.stop(this.pendingSubscriptionWatchLabel), n3(new Error("Subscription resolution timeout")));
      }, this.pollingInterval);
    }).catch(() => false), this.on = (i3, s2) => {
      this.events.on(i3, s2);
    }, this.once = (i3, s2) => {
      this.events.once(i3, s2);
    }, this.off = (i3, s2) => {
      this.events.off(i3, s2);
    }, this.removeListener = (i3, s2) => {
      this.events.removeListener(i3, s2);
    }, this.restart = async () => {
      this.restartInProgress = true, await this.restore(), await this.reset(), this.restartInProgress = false;
    }, this.relayer = e, this.logger = E2(t, this.name), this.clientId = "";
  }
  get context() {
    return y2(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + "//" + this.name;
  }
  get length() {
    return this.subscriptions.size;
  }
  get ids() {
    return Array.from(this.subscriptions.keys());
  }
  get values() {
    return Array.from(this.subscriptions.values());
  }
  get topics() {
    return this.topicMap.topics;
  }
  hasSubscription(e, t) {
    let i3 = false;
    try {
      i3 = this.getSubscription(e).topic === t;
    } catch {
    }
    return i3;
  }
  onEnable() {
    this.cached = [], this.initialized = true;
  }
  onDisable() {
    this.cached = this.values, this.subscriptions.clear(), this.topicMap.clear();
  }
  async unsubscribeByTopic(e, t) {
    const i3 = this.topicMap.get(e);
    await Promise.all(i3.map(async (s2) => await this.unsubscribeById(e, s2, t)));
  }
  async unsubscribeById(e, t, i3) {
    this.logger.debug("Unsubscribing Topic"), this.logger.trace({ type: "method", method: "unsubscribe", params: { topic: e, id: t, opts: i3 } });
    try {
      const s2 = at(i3);
      await this.rpcUnsubscribe(e, t, s2);
      const n3 = w("USER_DISCONNECTED", `${this.name}, ${e}`);
      await this.onUnsubscribe(e, t, n3), this.logger.debug("Successfully Unsubscribed Topic"), this.logger.trace({ type: "method", method: "unsubscribe", params: { topic: e, id: t, opts: i3 } });
    } catch (s2) {
      throw this.logger.debug("Failed to Unsubscribe Topic"), this.logger.error(s2), s2;
    }
  }
  async rpcSubscribe(e, t) {
    const i3 = { method: ut(t.protocol).subscribe, params: { topic: e } };
    this.logger.debug("Outgoing Relay Payload"), this.logger.trace({ type: "payload", direction: "outgoing", request: i3 });
    try {
      await await et(this.relayer.request(i3), this.subscribeTimeout);
    } catch {
      this.logger.debug("Outgoing Relay Subscribe Payload stalled"), this.relayer.events.emit(g3.connection_stalled);
    }
    return $n(e + this.clientId);
  }
  async rpcBatchSubscribe(e) {
    if (!e.length)
      return;
    const t = e[0].relay, i3 = { method: ut(t.protocol).batchSubscribe, params: { topics: e.map((s2) => s2.topic) } };
    this.logger.debug("Outgoing Relay Payload"), this.logger.trace({ type: "payload", direction: "outgoing", request: i3 });
    try {
      return await await et(this.relayer.request(i3), this.subscribeTimeout);
    } catch {
      this.logger.debug("Outgoing Relay Payload stalled"), this.relayer.events.emit(g3.connection_stalled);
    }
  }
  rpcUnsubscribe(e, t, i3) {
    const s2 = { method: ut(i3.protocol).unsubscribe, params: { topic: e, id: t } };
    return this.logger.debug("Outgoing Relay Payload"), this.logger.trace({ type: "payload", direction: "outgoing", request: s2 }), this.relayer.request(s2);
  }
  onSubscribe(e, t) {
    this.setSubscription(e, pe3(K3({}, t), { id: e })), this.pending.delete(t.topic);
  }
  onBatchSubscribe(e) {
    e.length && e.forEach((t) => {
      this.setSubscription(t.id, K3({}, t)), this.pending.delete(t.topic);
    });
  }
  async onUnsubscribe(e, t, i3) {
    this.events.removeAllListeners(t), this.hasSubscription(t, e) && this.deleteSubscription(t, i3), await this.relayer.messages.del(e);
  }
  async setRelayerSubscriptions(e) {
    await this.relayer.core.storage.setItem(this.storageKey, e);
  }
  async getRelayerSubscriptions() {
    return await this.relayer.core.storage.getItem(this.storageKey);
  }
  setSubscription(e, t) {
    this.subscriptions.has(e) || (this.logger.debug("Setting subscription"), this.logger.trace({ type: "method", method: "setSubscription", id: e, subscription: t }), this.addSubscription(e, t));
  }
  addSubscription(e, t) {
    this.subscriptions.set(e, K3({}, t)), this.topicMap.set(t.topic, e), this.events.emit(C3.created, t);
  }
  getSubscription(e) {
    this.logger.debug("Getting subscription"), this.logger.trace({ type: "method", method: "getSubscription", id: e });
    const t = this.subscriptions.get(e);
    if (!t) {
      const { message: i3 } = b("NO_MATCHING_KEY", `${this.name}: ${e}`);
      throw new Error(i3);
    }
    return t;
  }
  deleteSubscription(e, t) {
    this.logger.debug("Deleting subscription"), this.logger.trace({ type: "method", method: "deleteSubscription", id: e, reason: t });
    const i3 = this.getSubscription(e);
    this.subscriptions.delete(e), this.topicMap.delete(i3.topic, e), this.events.emit(C3.deleted, pe3(K3({}, i3), { reason: t }));
  }
  async persist() {
    await this.setRelayerSubscriptions(this.values), this.events.emit(C3.sync);
  }
  async reset() {
    if (this.cached.length) {
      const e = Math.ceil(this.cached.length / this.batchSubscribeTopicsLimit);
      for (let t = 0; t < e; t++) {
        const i3 = this.cached.splice(0, this.batchSubscribeTopicsLimit);
        await this.batchSubscribe(i3);
      }
    }
    this.events.emit(C3.resubscribed);
  }
  async restore() {
    try {
      const e = await this.getRelayerSubscriptions();
      if (typeof e > "u" || !e.length)
        return;
      if (this.subscriptions.size) {
        const { message: t } = b("RESTORE_WILL_OVERRIDE", this.name);
        throw this.logger.error(t), this.logger.error(`${this.name}: ${JSON.stringify(this.values)}`), new Error(t);
      }
      this.cached = e, this.logger.debug(`Successfully Restored subscriptions for ${this.name}`), this.logger.trace({ type: "method", method: "restore", subscriptions: this.values });
    } catch (e) {
      this.logger.debug(`Failed to Restore subscriptions for ${this.name}`), this.logger.error(e);
    }
  }
  async batchSubscribe(e) {
    if (!e.length)
      return;
    const t = await this.rpcBatchSubscribe(e);
    C2(t) && this.onBatchSubscribe(t.map((i3, s2) => pe3(K3({}, e[s2]), { id: i3 })));
  }
  async onConnect() {
    this.restartInProgress || (await this.restart(), this.onEnable());
  }
  onDisconnect() {
    this.onDisable();
  }
  async checkPending() {
    if (this.relayer.transportExplicitlyClosed)
      return;
    const e = [];
    this.pending.forEach((t) => {
      e.push(t);
    }), await this.batchSubscribe(e);
  }
  registerEventListeners() {
    this.relayer.core.heartbeat.on(import_heartbeat.HEARTBEAT_EVENTS.pulse, async () => {
      await this.checkPending();
    }), this.relayer.on(g3.connect, async () => {
      await this.onConnect();
    }), this.relayer.on(g3.disconnect, () => {
      this.onDisconnect();
    }), this.events.on(C3.created, async (e) => {
      const t = C3.created;
      this.logger.info(`Emitting ${t}`), this.logger.debug({ type: "event", event: t, data: e }), await this.persist();
    }), this.events.on(C3.deleted, async (e) => {
      const t = C3.deleted;
      this.logger.info(`Emitting ${t}`), this.logger.debug({ type: "event", event: t, data: e }), await this.persist();
    });
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e } = b("NOT_INITIALIZED", this.name);
      throw new Error(e);
    }
  }
  async restartToComplete() {
    this.restartInProgress && await new Promise((e) => {
      const t = setInterval(() => {
        this.restartInProgress || (clearInterval(t), e());
      }, this.pollingInterval);
    });
  }
};
var mr2 = Object.defineProperty;
var St3 = Object.getOwnPropertySymbols;
var Er2 = Object.prototype.hasOwnProperty;
var fr2 = Object.prototype.propertyIsEnumerable;
var Pt3 = (r2, e, t) => e in r2 ? mr2(r2, e, { enumerable: true, configurable: true, writable: true, value: t }) : r2[e] = t;
var wr2 = (r2, e) => {
  for (var t in e || (e = {}))
    Er2.call(e, t) && Pt3(r2, t, e[t]);
  if (St3)
    for (var t of St3(e))
      fr2.call(e, t) && Pt3(r2, t, e[t]);
  return r2;
};
var Ot2 = class extends g2 {
  constructor(e) {
    super(e), this.protocol = "wc", this.version = 2, this.events = new import_events5.EventEmitter(), this.name = at2, this.transportExplicitlyClosed = false, this.initialized = false, this.reconnecting = false, this.connectionStatusPollingInterval = 20, this.staleConnectionErrors = ["socket hang up", "socket stalled"], this.request = async (t) => {
      this.logger.debug("Publishing Request Payload");
      try {
        return await this.toEstablishConnection(), await this.provider.request(t);
      } catch (i3) {
        throw this.logger.debug("Failed to Publish Request"), this.logger.error(i3), i3;
      }
    }, this.core = e.core, this.logger = typeof e.logger < "u" && typeof e.logger != "string" ? E2(e.logger, this.name) : (0, import_pino2.default)(k3({ level: e.logger || nt3 })), this.messages = new Ct2(this.logger, e.core), this.subscriber = new Tt3(this, this.logger), this.publisher = new lr2(this, this.logger), this.relayUrl = (e == null ? void 0 : e.relayUrl) || le2, this.projectId = e.projectId, this.provider = {};
  }
  async init() {
    this.logger.trace("Initialized"), await this.createProvider(), await Promise.all([this.messages.init(), this.subscriber.init()]);
    try {
      await this.transportOpen();
    } catch {
      this.logger.warn(`Connection via ${this.relayUrl} failed, attempting to connect via failover domain ${de3}...`), await this.restartTransport(de3);
    }
    this.registerEventListeners(), this.initialized = true, setTimeout(async () => {
      this.subscriber.topics.length === 0 && (this.logger.info("No topics subscribed to after init, closing transport"), await this.transportClose(), this.transportExplicitlyClosed = false);
    }, ut3);
  }
  get context() {
    return y2(this.logger);
  }
  get connected() {
    return this.provider.connection.connected;
  }
  get connecting() {
    return this.provider.connection.connecting;
  }
  async publish(e, t, i3) {
    this.isInitialized(), await this.publisher.publish(e, t, i3), await this.recordMessageEvent({ topic: e, message: t, publishedAt: Date.now() });
  }
  async subscribe(e, t) {
    var i3;
    this.isInitialized();
    let s2 = ((i3 = this.subscriber.topicMap.get(e)) == null ? void 0 : i3[0]) || "";
    return s2 || (await Promise.all([new Promise((n3) => {
      this.subscriber.once(C3.created, (a2) => {
        a2.topic === e && n3();
      });
    }), new Promise(async (n3) => {
      s2 = await this.subscriber.subscribe(e, t), n3();
    })]), s2);
  }
  async unsubscribe(e, t) {
    this.isInitialized(), await this.subscriber.unsubscribe(e, t);
  }
  on(e, t) {
    this.events.on(e, t);
  }
  once(e, t) {
    this.events.once(e, t);
  }
  off(e, t) {
    this.events.off(e, t);
  }
  removeListener(e, t) {
    this.events.removeListener(e, t);
  }
  async transportClose() {
    this.transportExplicitlyClosed = true, this.connected && (await this.provider.disconnect(), this.events.emit(g3.transport_closed));
  }
  async transportOpen(e) {
    if (this.transportExplicitlyClosed = false, !this.reconnecting) {
      this.relayUrl = e || this.relayUrl, this.reconnecting = true;
      try {
        await Promise.all([new Promise((t) => {
          this.initialized || t(), this.subscriber.once(C3.resubscribed, () => {
            t();
          });
        }), await Promise.race([new Promise(async (t, i3) => {
          await et(this.provider.connect(), 5e3, `Socket stalled when trying to connect to ${this.relayUrl}`).catch((s2) => i3(s2)).then(() => t()).finally(() => this.removeListener(g3.transport_closed, this.rejectTransportOpen));
        }), new Promise((t) => this.once(g3.transport_closed, this.rejectTransportOpen))])]);
      } catch (t) {
        this.logger.error(t);
        const i3 = t;
        if (!this.isConnectionStalled(i3.message))
          throw t;
        this.events.emit(g3.transport_closed);
      } finally {
        this.reconnecting = false;
      }
    }
  }
  async restartTransport(e) {
    this.transportExplicitlyClosed || this.reconnecting || (this.relayUrl = e || this.relayUrl, this.connected && await Promise.all([new Promise((t) => {
      this.provider.once(L2.disconnect, () => {
        t();
      });
    }), this.transportClose()]), await this.createProvider(), await this.transportOpen());
  }
  isConnectionStalled(e) {
    return this.staleConnectionErrors.some((t) => e.includes(t));
  }
  rejectTransportOpen() {
    throw new Error("Attempt to connect to relay via `transportOpen` has stalled. Retrying...");
  }
  async createProvider() {
    const e = await this.core.crypto.signJWT(this.relayUrl);
    this.provider = new JsonRpcProvider(new esm_default(qn({ sdkVersion: ct3, protocol: this.protocol, version: this.version, relayUrl: this.relayUrl, projectId: this.projectId, auth: e, useOnCloseEvent: true }))), this.registerProviderListeners();
  }
  async recordMessageEvent(e) {
    const { topic: t, message: i3 } = e;
    await this.messages.set(t, i3);
  }
  async shouldIgnoreMessageEvent(e) {
    const { topic: t, message: i3 } = e;
    return await this.subscriber.isSubscribed(t) ? this.messages.has(t, i3) : true;
  }
  async onProviderPayload(e) {
    if (this.logger.debug("Incoming Relay Payload"), this.logger.trace({ type: "payload", direction: "incoming", payload: e }), isJsonRpcRequest(e)) {
      if (!e.method.endsWith(ot2))
        return;
      const t = e.params, { topic: i3, message: s2, publishedAt: n3 } = t.data, a2 = { topic: i3, message: s2, publishedAt: n3 };
      this.logger.debug("Emitting Relayer Payload"), this.logger.trace(wr2({ type: "event", event: t.id }, a2)), this.events.emit(t.id, a2), await this.acknowledgePayload(e), await this.onMessageEvent(a2);
    } else
      isJsonRpcResponse(e) && this.events.emit(g3.message_ack, e);
  }
  async onMessageEvent(e) {
    await this.shouldIgnoreMessageEvent(e) || (this.events.emit(g3.message, e), await this.recordMessageEvent(e));
  }
  async acknowledgePayload(e) {
    const t = formatJsonRpcResult(e.id, true);
    await this.provider.connection.send(t);
  }
  registerProviderListeners() {
    this.provider.on(L2.payload, (e) => this.onProviderPayload(e)), this.provider.on(L2.connect, () => {
      this.events.emit(g3.connect);
    }), this.provider.on(L2.disconnect, () => {
      this.onProviderDisconnect();
    }), this.provider.on(L2.error, (e) => {
      this.logger.error(e), this.events.emit(g3.error, e);
    });
  }
  registerEventListeners() {
    this.events.on(g3.connection_stalled, async () => {
      await this.restartTransport();
    });
  }
  onProviderDisconnect() {
    this.events.emit(g3.disconnect), this.attemptToReconnect();
  }
  attemptToReconnect() {
    this.transportExplicitlyClosed || setTimeout(async () => {
      await this.restartTransport();
    }, (0, import_time3.toMiliseconds)(ht2));
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e } = b("NOT_INITIALIZED", this.name);
      throw new Error(e);
    }
  }
  async toEstablishConnection() {
    if (!this.connected) {
      if (this.connecting)
        return await new Promise((e) => {
          const t = setInterval(() => {
            this.connected && (clearInterval(t), e());
          }, this.connectionStatusPollingInterval);
        });
      await this.restartTransport();
    }
  }
};
var vr2 = Object.defineProperty;
var xt3 = Object.getOwnPropertySymbols;
var Ir2 = Object.prototype.hasOwnProperty;
var Cr2 = Object.prototype.propertyIsEnumerable;
var At2 = (r2, e, t) => e in r2 ? vr2(r2, e, { enumerable: true, configurable: true, writable: true, value: t }) : r2[e] = t;
var zt3 = (r2, e) => {
  for (var t in e || (e = {}))
    Ir2.call(e, t) && At2(r2, t, e[t]);
  if (xt3)
    for (var t of xt3(e))
      Cr2.call(e, t) && At2(r2, t, e[t]);
  return r2;
};
var Nt2 = class extends p2 {
  constructor(e, t, i3, s2 = O4, n3 = void 0) {
    super(e, t, i3, s2), this.core = e, this.logger = t, this.name = i3, this.map = /* @__PURE__ */ new Map(), this.version = lt2, this.cached = [], this.initialized = false, this.storagePrefix = O4, this.init = async () => {
      this.initialized || (this.logger.trace("Initialized"), await this.restore(), this.cached.forEach((a2) => {
        this.getKey && a2 !== null && !I(a2) ? this.map.set(this.getKey(a2), a2) : At(a2) ? this.map.set(a2.id, a2) : Ut(a2) && this.map.set(a2.topic, a2);
      }), this.cached = [], this.initialized = true);
    }, this.set = async (a2, o) => {
      this.isInitialized(), this.map.has(a2) ? await this.update(a2, o) : (this.logger.debug("Setting value"), this.logger.trace({ type: "method", method: "set", key: a2, value: o }), this.map.set(a2, o), await this.persist());
    }, this.get = (a2) => (this.isInitialized(), this.logger.debug("Getting value"), this.logger.trace({ type: "method", method: "get", key: a2 }), this.getData(a2)), this.getAll = (a2) => (this.isInitialized(), a2 ? this.values.filter((o) => Object.keys(a2).every((h4) => (0, import_lodash.default)(o[h4], a2[h4]))) : this.values), this.update = async (a2, o) => {
      this.isInitialized(), this.logger.debug("Updating value"), this.logger.trace({ type: "method", method: "update", key: a2, update: o });
      const h4 = zt3(zt3({}, this.getData(a2)), o);
      this.map.set(a2, h4), await this.persist();
    }, this.delete = async (a2, o) => {
      this.isInitialized(), this.map.has(a2) && (this.logger.debug("Deleting value"), this.logger.trace({ type: "method", method: "delete", key: a2, reason: o }), this.map.delete(a2), await this.persist());
    }, this.logger = E2(t, this.name), this.storagePrefix = s2, this.getKey = n3;
  }
  get context() {
    return y2(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + "//" + this.name;
  }
  get length() {
    return this.map.size;
  }
  get keys() {
    return Array.from(this.map.keys());
  }
  get values() {
    return Array.from(this.map.values());
  }
  async setDataStore(e) {
    await this.core.storage.setItem(this.storageKey, e);
  }
  async getDataStore() {
    return await this.core.storage.getItem(this.storageKey);
  }
  getData(e) {
    const t = this.map.get(e);
    if (!t) {
      const { message: i3 } = b("NO_MATCHING_KEY", `${this.name}: ${e}`);
      throw this.logger.error(i3), new Error(i3);
    }
    return t;
  }
  async persist() {
    await this.setDataStore(this.values);
  }
  async restore() {
    try {
      const e = await this.getDataStore();
      if (typeof e > "u" || !e.length)
        return;
      if (this.map.size) {
        const { message: t } = b("RESTORE_WILL_OVERRIDE", this.name);
        throw this.logger.error(t), new Error(t);
      }
      this.cached = e, this.logger.debug(`Successfully Restored value for ${this.name}`), this.logger.trace({ type: "method", method: "restore", value: this.values });
    } catch (e) {
      this.logger.debug(`Failed to Restore value for ${this.name}`), this.logger.error(e);
    }
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e } = b("NOT_INITIALIZED", this.name);
      throw new Error(e);
    }
  }
};
var Ut3 = class {
  constructor(e, t) {
    this.core = e, this.logger = t, this.name = yt3, this.version = bt2, this.events = new import_events5.default(), this.initialized = false, this.storagePrefix = O4, this.ignoredPayloadTypes = [U], this.registeredMethods = [], this.init = async () => {
      this.initialized || (await this.pairings.init(), await this.cleanup(), this.registerRelayerEvents(), this.registerExpirerEvents(), this.initialized = true, this.logger.trace("Initialized"));
    }, this.register = ({ methods: i3 }) => {
      this.isInitialized(), this.registeredMethods = [.../* @__PURE__ */ new Set([...this.registeredMethods, ...i3])];
    }, this.create = async () => {
      this.isInitialized();
      const i3 = An(), s2 = await this.core.crypto.setSymKey(i3), n3 = ot(import_time3.FIVE_MINUTES), a2 = { protocol: rt3 }, o = { topic: s2, expiry: n3, relay: a2, active: false }, h4 = yt({ protocol: this.core.protocol, version: this.core.version, topic: s2, symKey: i3, relay: a2 });
      return await this.pairings.set(s2, o), await this.core.relayer.subscribe(s2), this.core.expirer.set(s2, n3), { topic: s2, uri: h4 };
    }, this.pair = async (i3) => {
      this.isInitialized(), this.isValidPair(i3);
      const { topic: s2, symKey: n3, relay: a2 } = mt(i3.uri);
      if (this.pairings.keys.includes(s2))
        throw new Error(`Pairing already exists: ${s2}`);
      if (this.core.crypto.hasKeys(s2))
        throw new Error(`Keychain already exists: ${s2}`);
      const o = ot(import_time3.FIVE_MINUTES), h4 = { topic: s2, relay: a2, expiry: o, active: false };
      return await this.pairings.set(s2, h4), await this.core.crypto.setSymKey(n3, s2), await this.core.relayer.subscribe(s2, { relay: a2 }), this.core.expirer.set(s2, o), i3.activatePairing && await this.activate({ topic: s2 }), h4;
    }, this.activate = async ({ topic: i3 }) => {
      this.isInitialized();
      const s2 = ot(import_time3.THIRTY_DAYS);
      await this.pairings.update(i3, { active: true, expiry: s2 }), this.core.expirer.set(i3, s2);
    }, this.ping = async (i3) => {
      this.isInitialized(), await this.isValidPing(i3);
      const { topic: s2 } = i3;
      if (this.pairings.keys.includes(s2)) {
        const n3 = await this.sendRequest(s2, "wc_pairingPing", {}), { done: a2, resolve: o, reject: h4 } = Xn();
        this.events.once(it("pairing_ping", n3), ({ error: d3 }) => {
          d3 ? h4(d3) : o();
        }), await a2();
      }
    }, this.updateExpiry = async ({ topic: i3, expiry: s2 }) => {
      this.isInitialized(), await this.pairings.update(i3, { expiry: s2 });
    }, this.updateMetadata = async ({ topic: i3, metadata: s2 }) => {
      this.isInitialized(), await this.pairings.update(i3, { peerMetadata: s2 });
    }, this.getPairings = () => (this.isInitialized(), this.pairings.values), this.disconnect = async (i3) => {
      this.isInitialized(), await this.isValidDisconnect(i3);
      const { topic: s2 } = i3;
      this.pairings.keys.includes(s2) && (await this.sendRequest(s2, "wc_pairingDelete", w("USER_DISCONNECTED")), await this.deletePairing(s2));
    }, this.sendRequest = async (i3, s2, n3) => {
      const a2 = formatJsonRpcRequest(s2, n3), o = await this.core.crypto.encode(i3, a2), h4 = F[s2].req;
      return this.core.history.set(i3, a2), this.core.relayer.publish(i3, o, h4), a2.id;
    }, this.sendResult = async (i3, s2, n3) => {
      const a2 = formatJsonRpcResult(i3, n3), o = await this.core.crypto.encode(s2, a2), h4 = await this.core.history.get(s2, i3), d3 = F[h4.request.method].res;
      await this.core.relayer.publish(s2, o, d3), await this.core.history.resolve(a2);
    }, this.sendError = async (i3, s2, n3) => {
      const a2 = formatJsonRpcError(i3, n3), o = await this.core.crypto.encode(s2, a2), h4 = await this.core.history.get(s2, i3), d3 = F[h4.request.method] ? F[h4.request.method].res : F.unregistered_method.res;
      await this.core.relayer.publish(s2, o, d3), await this.core.history.resolve(a2);
    }, this.deletePairing = async (i3, s2) => {
      await this.core.relayer.unsubscribe(i3), await Promise.all([this.pairings.delete(i3, w("USER_DISCONNECTED")), this.core.crypto.deleteSymKey(i3), s2 ? Promise.resolve() : this.core.expirer.del(i3)]);
    }, this.cleanup = async () => {
      const i3 = this.pairings.getAll().filter((s2) => st(s2.expiry));
      await Promise.all(i3.map((s2) => this.deletePairing(s2.topic)));
    }, this.onRelayEventRequest = (i3) => {
      const { topic: s2, payload: n3 } = i3, a2 = n3.method;
      if (this.pairings.keys.includes(s2))
        switch (a2) {
          case "wc_pairingPing":
            return this.onPairingPingRequest(s2, n3);
          case "wc_pairingDelete":
            return this.onPairingDeleteRequest(s2, n3);
          default:
            return this.onUnknownRpcMethodRequest(s2, n3);
        }
    }, this.onRelayEventResponse = async (i3) => {
      const { topic: s2, payload: n3 } = i3, a2 = (await this.core.history.get(s2, n3.id)).request.method;
      if (this.pairings.keys.includes(s2))
        switch (a2) {
          case "wc_pairingPing":
            return this.onPairingPingResponse(s2, n3);
          default:
            return this.onUnknownRpcMethodResponse(a2);
        }
    }, this.onPairingPingRequest = async (i3, s2) => {
      const { id: n3 } = s2;
      try {
        this.isValidPing({ topic: i3 }), await this.sendResult(n3, i3, true), this.events.emit("pairing_ping", { id: n3, topic: i3 });
      } catch (a2) {
        await this.sendError(n3, i3, a2), this.logger.error(a2);
      }
    }, this.onPairingPingResponse = (i3, s2) => {
      const { id: n3 } = s2;
      setTimeout(() => {
        isJsonRpcResult(s2) ? this.events.emit(it("pairing_ping", n3), {}) : isJsonRpcError(s2) && this.events.emit(it("pairing_ping", n3), { error: s2.error });
      }, 500);
    }, this.onPairingDeleteRequest = async (i3, s2) => {
      const { id: n3 } = s2;
      try {
        this.isValidDisconnect({ topic: i3 }), await this.deletePairing(i3), this.events.emit("pairing_delete", { id: n3, topic: i3 });
      } catch (a2) {
        await this.sendError(n3, i3, a2), this.logger.error(a2);
      }
    }, this.onUnknownRpcMethodRequest = async (i3, s2) => {
      const { id: n3, method: a2 } = s2;
      try {
        if (this.registeredMethods.includes(a2))
          return;
        const o = w("WC_METHOD_UNSUPPORTED", a2);
        await this.sendError(n3, i3, o), this.logger.error(o);
      } catch (o) {
        await this.sendError(n3, i3, o), this.logger.error(o);
      }
    }, this.onUnknownRpcMethodResponse = (i3) => {
      this.registeredMethods.includes(i3) || this.logger.error(w("WC_METHOD_UNSUPPORTED", i3));
    }, this.isValidPair = (i3) => {
      if (!Dt(i3)) {
        const { message: s2 } = b("MISSING_OR_INVALID", `pair() params: ${i3}`);
        throw new Error(s2);
      }
      if (!wt(i3.uri)) {
        const { message: s2 } = b("MISSING_OR_INVALID", `pair() uri: ${i3.uri}`);
        throw new Error(s2);
      }
    }, this.isValidPing = async (i3) => {
      if (!Dt(i3)) {
        const { message: n3 } = b("MISSING_OR_INVALID", `ping() params: ${i3}`);
        throw new Error(n3);
      }
      const { topic: s2 } = i3;
      await this.isValidPairingTopic(s2);
    }, this.isValidDisconnect = async (i3) => {
      if (!Dt(i3)) {
        const { message: n3 } = b("MISSING_OR_INVALID", `disconnect() params: ${i3}`);
        throw new Error(n3);
      }
      const { topic: s2 } = i3;
      await this.isValidPairingTopic(s2);
    }, this.isValidPairingTopic = async (i3) => {
      if (!m(i3, false)) {
        const { message: s2 } = b("MISSING_OR_INVALID", `pairing topic should be a string: ${i3}`);
        throw new Error(s2);
      }
      if (!this.pairings.keys.includes(i3)) {
        const { message: s2 } = b("NO_MATCHING_KEY", `pairing topic doesn't exist: ${i3}`);
        throw new Error(s2);
      }
      if (st(this.pairings.get(i3).expiry)) {
        await this.deletePairing(i3);
        const { message: s2 } = b("EXPIRED", `pairing topic: ${i3}`);
        throw new Error(s2);
      }
    }, this.core = e, this.logger = E2(t, this.name), this.pairings = new Nt2(this.core, this.logger, this.name, this.storagePrefix);
  }
  get context() {
    return y2(this.logger);
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e } = b("NOT_INITIALIZED", this.name);
      throw new Error(e);
    }
  }
  registerRelayerEvents() {
    this.core.relayer.on(g3.message, async (e) => {
      const { topic: t, message: i3 } = e;
      if (this.ignoredPayloadTypes.includes(this.core.crypto.getPayloadType(i3)))
        return;
      const s2 = await this.core.crypto.decode(t, i3);
      isJsonRpcRequest(s2) ? (this.core.history.set(t, s2), this.onRelayEventRequest({ topic: t, payload: s2 })) : isJsonRpcResponse(s2) && (await this.core.history.resolve(s2), await this.onRelayEventResponse({ topic: t, payload: s2 }), this.core.history.delete(t, s2.id));
    });
  }
  registerExpirerEvents() {
    this.core.expirer.on(w3.expired, async (e) => {
      const { topic: t } = rt(e.target);
      t && this.pairings.keys.includes(t) && (await this.deletePairing(t, true), this.events.emit("pairing_expire", { topic: t }));
    });
  }
};
var Lt3 = class extends h3 {
  constructor(e, t) {
    super(e, t), this.core = e, this.logger = t, this.records = /* @__PURE__ */ new Map(), this.events = new import_events5.EventEmitter(), this.name = mt2, this.version = Et2, this.cached = [], this.initialized = false, this.storagePrefix = O4, this.init = async () => {
      this.initialized || (this.logger.trace("Initialized"), await this.restore(), this.cached.forEach((i3) => this.records.set(i3.id, i3)), this.cached = [], this.registerEventListeners(), this.initialized = true);
    }, this.set = (i3, s2, n3) => {
      if (this.isInitialized(), this.logger.debug("Setting JSON-RPC request history record"), this.logger.trace({ type: "method", method: "set", topic: i3, request: s2, chainId: n3 }), this.records.has(s2.id))
        return;
      const a2 = { id: s2.id, topic: i3, request: { method: s2.method, params: s2.params || null }, chainId: n3, expiry: ot(import_time3.THIRTY_DAYS) };
      this.records.set(a2.id, a2), this.events.emit(_3.created, a2);
    }, this.resolve = async (i3) => {
      if (this.isInitialized(), this.logger.debug("Updating JSON-RPC response history record"), this.logger.trace({ type: "method", method: "update", response: i3 }), !this.records.has(i3.id))
        return;
      const s2 = await this.getRecord(i3.id);
      typeof s2.response > "u" && (s2.response = isJsonRpcError(i3) ? { error: i3.error } : { result: i3.result }, this.records.set(s2.id, s2), this.events.emit(_3.updated, s2));
    }, this.get = async (i3, s2) => (this.isInitialized(), this.logger.debug("Getting record"), this.logger.trace({ type: "method", method: "get", topic: i3, id: s2 }), await this.getRecord(s2)), this.delete = (i3, s2) => {
      this.isInitialized(), this.logger.debug("Deleting record"), this.logger.trace({ type: "method", method: "delete", id: s2 }), this.values.forEach((n3) => {
        if (n3.topic === i3) {
          if (typeof s2 < "u" && n3.id !== s2)
            return;
          this.records.delete(n3.id), this.events.emit(_3.deleted, n3);
        }
      });
    }, this.exists = async (i3, s2) => (this.isInitialized(), this.records.has(s2) ? (await this.getRecord(s2)).topic === i3 : false), this.on = (i3, s2) => {
      this.events.on(i3, s2);
    }, this.once = (i3, s2) => {
      this.events.once(i3, s2);
    }, this.off = (i3, s2) => {
      this.events.off(i3, s2);
    }, this.removeListener = (i3, s2) => {
      this.events.removeListener(i3, s2);
    }, this.logger = E2(t, this.name);
  }
  get context() {
    return y2(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + "//" + this.name;
  }
  get size() {
    return this.records.size;
  }
  get keys() {
    return Array.from(this.records.keys());
  }
  get values() {
    return Array.from(this.records.values());
  }
  get pending() {
    const e = [];
    return this.values.forEach((t) => {
      if (typeof t.response < "u")
        return;
      const i3 = { topic: t.topic, request: formatJsonRpcRequest(t.request.method, t.request.params, t.id), chainId: t.chainId };
      return e.push(i3);
    }), e;
  }
  async setJsonRpcRecords(e) {
    await this.core.storage.setItem(this.storageKey, e);
  }
  async getJsonRpcRecords() {
    return await this.core.storage.getItem(this.storageKey);
  }
  getRecord(e) {
    this.isInitialized();
    const t = this.records.get(e);
    if (!t) {
      const { message: i3 } = b("NO_MATCHING_KEY", `${this.name}: ${e}`);
      throw new Error(i3);
    }
    return t;
  }
  async persist() {
    await this.setJsonRpcRecords(this.values), this.events.emit(_3.sync);
  }
  async restore() {
    try {
      const e = await this.getJsonRpcRecords();
      if (typeof e > "u" || !e.length)
        return;
      if (this.records.size) {
        const { message: t } = b("RESTORE_WILL_OVERRIDE", this.name);
        throw this.logger.error(t), new Error(t);
      }
      this.cached = e, this.logger.debug(`Successfully Restored records for ${this.name}`), this.logger.trace({ type: "method", method: "restore", records: this.values });
    } catch (e) {
      this.logger.debug(`Failed to Restore records for ${this.name}`), this.logger.error(e);
    }
  }
  registerEventListeners() {
    this.events.on(_3.created, (e) => {
      const t = _3.created;
      this.logger.info(`Emitting ${t}`), this.logger.debug({ type: "event", event: t, record: e }), this.persist();
    }), this.events.on(_3.updated, (e) => {
      const t = _3.updated;
      this.logger.info(`Emitting ${t}`), this.logger.debug({ type: "event", event: t, record: e }), this.persist();
    }), this.events.on(_3.deleted, (e) => {
      const t = _3.deleted;
      this.logger.info(`Emitting ${t}`), this.logger.debug({ type: "event", event: t, record: e }), this.persist();
    }), this.core.heartbeat.on(import_heartbeat.HEARTBEAT_EVENTS.pulse, () => {
      this.cleanup();
    });
  }
  cleanup() {
    try {
      this.records.forEach((e) => {
        (0, import_time3.toMiliseconds)(e.expiry || 0) - Date.now() <= 0 && (this.logger.info(`Deleting expired history log: ${e.id}`), this.delete(e.topic, e.id));
      });
    } catch (e) {
      this.logger.warn(e);
    }
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e } = b("NOT_INITIALIZED", this.name);
      throw new Error(e);
    }
  }
};
var Ft3 = class extends E3 {
  constructor(e, t) {
    super(e, t), this.core = e, this.logger = t, this.expirations = /* @__PURE__ */ new Map(), this.events = new import_events5.EventEmitter(), this.name = ft3, this.version = wt3, this.cached = [], this.initialized = false, this.storagePrefix = O4, this.init = async () => {
      this.initialized || (this.logger.trace("Initialized"), await this.restore(), this.cached.forEach((i3) => this.expirations.set(i3.target, i3)), this.cached = [], this.registerEventListeners(), this.initialized = true);
    }, this.has = (i3) => {
      try {
        const s2 = this.formatTarget(i3);
        return typeof this.getExpiration(s2) < "u";
      } catch {
        return false;
      }
    }, this.set = (i3, s2) => {
      this.isInitialized();
      const n3 = this.formatTarget(i3), a2 = { target: n3, expiry: s2 };
      this.expirations.set(n3, a2), this.checkExpiry(n3, a2), this.events.emit(w3.created, { target: n3, expiration: a2 });
    }, this.get = (i3) => {
      this.isInitialized();
      const s2 = this.formatTarget(i3);
      return this.getExpiration(s2);
    }, this.del = (i3) => {
      if (this.isInitialized(), this.has(i3)) {
        const s2 = this.formatTarget(i3), n3 = this.getExpiration(s2);
        this.expirations.delete(s2), this.events.emit(w3.deleted, { target: s2, expiration: n3 });
      }
    }, this.on = (i3, s2) => {
      this.events.on(i3, s2);
    }, this.once = (i3, s2) => {
      this.events.once(i3, s2);
    }, this.off = (i3, s2) => {
      this.events.off(i3, s2);
    }, this.removeListener = (i3, s2) => {
      this.events.removeListener(i3, s2);
    }, this.logger = E2(t, this.name);
  }
  get context() {
    return y2(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + "//" + this.name;
  }
  get length() {
    return this.expirations.size;
  }
  get keys() {
    return Array.from(this.expirations.keys());
  }
  get values() {
    return Array.from(this.expirations.values());
  }
  formatTarget(e) {
    if (typeof e == "string")
      return nt(e);
    if (typeof e == "number")
      return tt(e);
    const { message: t } = b("UNKNOWN_TYPE", `Target type: ${typeof e}`);
    throw new Error(t);
  }
  async setExpirations(e) {
    await this.core.storage.setItem(this.storageKey, e);
  }
  async getExpirations() {
    return await this.core.storage.getItem(this.storageKey);
  }
  async persist() {
    await this.setExpirations(this.values), this.events.emit(w3.sync);
  }
  async restore() {
    try {
      const e = await this.getExpirations();
      if (typeof e > "u" || !e.length)
        return;
      if (this.expirations.size) {
        const { message: t } = b("RESTORE_WILL_OVERRIDE", this.name);
        throw this.logger.error(t), new Error(t);
      }
      this.cached = e, this.logger.debug(`Successfully Restored expirations for ${this.name}`), this.logger.trace({ type: "method", method: "restore", expirations: this.values });
    } catch (e) {
      this.logger.debug(`Failed to Restore expirations for ${this.name}`), this.logger.error(e);
    }
  }
  getExpiration(e) {
    const t = this.expirations.get(e);
    if (!t) {
      const { message: i3 } = b("NO_MATCHING_KEY", `${this.name}: ${e}`);
      throw this.logger.error(i3), new Error(i3);
    }
    return t;
  }
  checkExpiry(e, t) {
    const { expiry: i3 } = t;
    (0, import_time3.toMiliseconds)(i3) - Date.now() <= 0 && this.expire(e, t);
  }
  expire(e, t) {
    this.expirations.delete(e), this.events.emit(w3.expired, { target: e, expiration: t });
  }
  checkExpirations() {
    this.core.relayer.connected && this.expirations.forEach((e, t) => this.checkExpiry(t, e));
  }
  registerEventListeners() {
    this.core.heartbeat.on(import_heartbeat.HEARTBEAT_EVENTS.pulse, () => this.checkExpirations()), this.events.on(w3.created, (e) => {
      const t = w3.created;
      this.logger.info(`Emitting ${t}`), this.logger.debug({ type: "event", event: t, data: e }), this.persist();
    }), this.events.on(w3.expired, (e) => {
      const t = w3.expired;
      this.logger.info(`Emitting ${t}`), this.logger.debug({ type: "event", event: t, data: e }), this.persist();
    }), this.events.on(w3.deleted, (e) => {
      const t = w3.deleted;
      this.logger.info(`Emitting ${t}`), this.logger.debug({ type: "event", event: t, data: e }), this.persist();
    });
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e } = b("NOT_INITIALIZED", this.name);
      throw new Error(e);
    }
  }
};
var $t3 = class extends y3 {
  constructor(e, t) {
    super(e, t), this.projectId = e, this.logger = t, this.name = X, this.initialized = false, this.init = async (i3) => {
      $e() || !je() || (this.verifyUrl = (i3 == null ? void 0 : i3.verifyUrl) || ge2, await this.createIframe());
    }, this.register = async (i3) => {
      var s2;
      if (this.initialized || await this.init(), !!this.iframe)
        try {
          (s2 = this.iframe.contentWindow) == null || s2.postMessage(i3.attestationId, this.verifyUrl), this.logger.info(`postMessage sent: ${i3.attestationId} ${this.verifyUrl}`);
        } catch {
        }
    }, this.resolve = async (i3) => {
      var s2;
      if (this.isDevEnv)
        return "";
      this.logger.info(`resolving attestation: ${i3.attestationId}`);
      const n3 = this.startAbortTimer(import_time3.FIVE_SECONDS), a2 = await fetch(`${this.verifyUrl}/attestation/${i3.attestationId}`, { signal: this.abortController.signal });
      return clearTimeout(n3), a2.status === 200 ? (s2 = await a2.json()) == null ? void 0 : s2.origin : "";
    }, this.createIframe = async () => {
      try {
        await Promise.race([new Promise((i3, s2) => {
          if (document.getElementById(X))
            return i3();
          const n3 = document.createElement("iframe");
          n3.setAttribute("id", X), n3.setAttribute("src", `${this.verifyUrl}/${this.projectId}`), n3.style.display = "none", n3.addEventListener("load", () => {
            this.initialized = true, i3();
          }), n3.addEventListener("error", (a2) => {
            s2(a2);
          }), document.body.append(n3), this.iframe = n3;
        }), new Promise((i3) => {
          setTimeout(() => i3("iframe load timeout"), (0, import_time3.toMiliseconds)(import_time3.ONE_SECOND / 2));
        })]);
      } catch (i3) {
        this.logger.error(`Verify iframe failed to load: ${this.verifyUrl}`), this.logger.error(i3);
      }
    }, this.logger = E2(t, this.name), this.verifyUrl = ge2, this.abortController = new AbortController(), this.isDevEnv = ee() && process.env.IS_VITEST;
  }
  get context() {
    return y2(this.logger);
  }
  startAbortTimer(e) {
    return setTimeout(() => this.abortController.abort(), (0, import_time3.toMiliseconds)(e));
  }
};
var _r2 = Object.defineProperty;
var Mt3 = Object.getOwnPropertySymbols;
var Rr2 = Object.prototype.hasOwnProperty;
var Tr2 = Object.prototype.propertyIsEnumerable;
var Kt3 = (r2, e, t) => e in r2 ? _r2(r2, e, { enumerable: true, configurable: true, writable: true, value: t }) : r2[e] = t;
var kt3 = (r2, e) => {
  for (var t in e || (e = {}))
    Rr2.call(e, t) && Kt3(r2, t, e[t]);
  if (Mt3)
    for (var t of Mt3(e))
      Tr2.call(e, t) && Kt3(r2, t, e[t]);
  return r2;
};
var Z2 = class _Z extends n2 {
  constructor(e) {
    super(e), this.protocol = ce2, this.version = Ge3, this.name = W2, this.events = new import_events5.EventEmitter(), this.initialized = false, this.on = (i3, s2) => this.events.on(i3, s2), this.once = (i3, s2) => this.events.once(i3, s2), this.off = (i3, s2) => this.events.off(i3, s2), this.removeListener = (i3, s2) => this.events.removeListener(i3, s2), this.projectId = e == null ? void 0 : e.projectId, this.relayUrl = (e == null ? void 0 : e.relayUrl) || le2;
    const t = typeof (e == null ? void 0 : e.logger) < "u" && typeof (e == null ? void 0 : e.logger) != "string" ? e.logger : (0, import_pino2.default)(k3({ level: (e == null ? void 0 : e.logger) || Je3.logger }));
    this.logger = E2(t, this.name), this.heartbeat = new import_heartbeat.HeartBeat(), this.crypto = new It2(this, this.logger, e == null ? void 0 : e.keychain), this.history = new Lt3(this, this.logger), this.expirer = new Ft3(this, this.logger), this.storage = e != null && e.storage ? e.storage : new h(kt3(kt3({}, He3), e == null ? void 0 : e.storageOptions)), this.relayer = new Ot2({ core: this, logger: this.logger, relayUrl: this.relayUrl, projectId: this.projectId }), this.pairing = new Ut3(this, this.logger), this.verify = new $t3(this.projectId || "", this.logger);
  }
  static async init(e) {
    const t = new _Z(e);
    await t.initialize();
    const i3 = await t.crypto.getClientId();
    return await t.storage.setItem(dt3, i3), t;
  }
  get context() {
    return y2(this.logger);
  }
  async start() {
    this.initialized || await this.initialize();
  }
  async initialize() {
    this.logger.trace("Initialized");
    try {
      await this.crypto.init(), await this.history.init(), await this.expirer.init(), await this.relayer.init(), await this.heartbeat.init(), await this.pairing.init(), this.initialized = true, this.logger.info("Core Initialization Success");
    } catch (e) {
      throw this.logger.warn(`Core Initialization Failure at epoch ${Date.now()}`, e), this.logger.error(e.message), e;
    }
  }
};
var Sr2 = Z2;

// node_modules/@walletconnect/sign-client/dist/index.es.js
var import_events6 = __toESM(require_events());
var import_time4 = __toESM(require_cjs3());
init_esm2();
var j5 = "wc";
var J4 = 2;
var X2 = "client";
var b4 = `${j5}@${J4}:${X2}:`;
var G2 = { name: X2, logger: "error", controller: false, relayUrl: "wss://relay.walletconnect.com" };
var ee2 = "WALLETCONNECT_DEEPLINK_CHOICE";
var se2 = "proposal";
var te3 = "Proposal expired";
var ie2 = "session";
var C4 = import_time4.SEVEN_DAYS;
var ne3 = "engine";
var O5 = { wc_sessionPropose: { req: { ttl: import_time4.FIVE_MINUTES, prompt: true, tag: 1100 }, res: { ttl: import_time4.FIVE_MINUTES, prompt: false, tag: 1101 } }, wc_sessionSettle: { req: { ttl: import_time4.FIVE_MINUTES, prompt: false, tag: 1102 }, res: { ttl: import_time4.FIVE_MINUTES, prompt: false, tag: 1103 } }, wc_sessionUpdate: { req: { ttl: import_time4.ONE_DAY, prompt: false, tag: 1104 }, res: { ttl: import_time4.ONE_DAY, prompt: false, tag: 1105 } }, wc_sessionExtend: { req: { ttl: import_time4.ONE_DAY, prompt: false, tag: 1106 }, res: { ttl: import_time4.ONE_DAY, prompt: false, tag: 1107 } }, wc_sessionRequest: { req: { ttl: import_time4.FIVE_MINUTES, prompt: true, tag: 1108 }, res: { ttl: import_time4.FIVE_MINUTES, prompt: false, tag: 1109 } }, wc_sessionEvent: { req: { ttl: import_time4.FIVE_MINUTES, prompt: true, tag: 1110 }, res: { ttl: import_time4.FIVE_MINUTES, prompt: false, tag: 1111 } }, wc_sessionDelete: { req: { ttl: import_time4.ONE_DAY, prompt: false, tag: 1112 }, res: { ttl: import_time4.ONE_DAY, prompt: false, tag: 1113 } }, wc_sessionPing: { req: { ttl: import_time4.THIRTY_SECONDS, prompt: false, tag: 1114 }, res: { ttl: import_time4.THIRTY_SECONDS, prompt: false, tag: 1115 } } };
var $2 = { min: import_time4.FIVE_MINUTES, max: import_time4.SEVEN_DAYS };
var re = "request";
var oe3 = ["wc_sessionPropose", "wc_sessionRequest", "wc_authRequest"];
var Ze4 = Object.defineProperty;
var es2 = Object.defineProperties;
var ss2 = Object.getOwnPropertyDescriptors;
var ae3 = Object.getOwnPropertySymbols;
var ts2 = Object.prototype.hasOwnProperty;
var is2 = Object.prototype.propertyIsEnumerable;
var ce3 = (d3, n3, e) => n3 in d3 ? Ze4(d3, n3, { enumerable: true, configurable: true, writable: true, value: e }) : d3[n3] = e;
var w4 = (d3, n3) => {
  for (var e in n3 || (n3 = {}))
    ts2.call(n3, e) && ce3(d3, e, n3[e]);
  if (ae3)
    for (var e of ae3(n3))
      is2.call(n3, e) && ce3(d3, e, n3[e]);
  return d3;
};
var H4 = (d3, n3) => es2(d3, ss2(n3));
var ns2 = class extends S3 {
  constructor(n3) {
    super(n3), this.name = ne3, this.events = new import_events6.default(), this.initialized = false, this.ignoredPayloadTypes = [U], this.init = async () => {
      this.initialized || (await this.cleanup(), this.registerRelayerEvents(), this.registerExpirerEvents(), this.client.core.pairing.register({ methods: Object.keys(O5) }), this.initialized = true);
    }, this.connect = async (e) => {
      this.isInitialized();
      const s2 = H4(w4({}, e), { requiredNamespaces: e.requiredNamespaces || {}, optionalNamespaces: e.optionalNamespaces || {} });
      await this.isValidConnect(s2);
      const { pairingTopic: t, requiredNamespaces: i3, optionalNamespaces: r2, sessionProperties: o, relays: a2 } = s2;
      let l3 = t, h4, I2 = false;
      if (l3 && (I2 = this.client.core.pairing.pairings.get(l3).active), !l3 || !I2) {
        const { topic: v3, uri: y5 } = await this.client.core.pairing.create();
        l3 = v3, h4 = y5;
      }
      const g5 = await this.client.core.crypto.generateKeyPair(), E5 = w4({ requiredNamespaces: i3, optionalNamespaces: r2, relays: a2 ?? [{ protocol: rt3 }], proposer: { publicKey: g5, metadata: this.client.metadata } }, o && { sessionProperties: o }), { reject: m3, resolve: V2, done: U5 } = Xn(import_time4.FIVE_MINUTES, te3);
      if (this.events.once(it("session_connect"), async ({ error: v3, session: y5 }) => {
        if (v3)
          m3(v3);
        else if (y5) {
          y5.self.publicKey = g5;
          const F2 = H4(w4({}, y5), { requiredNamespaces: y5.requiredNamespaces, optionalNamespaces: y5.optionalNamespaces });
          await this.client.session.set(y5.topic, F2), await this.setExpiry(y5.topic, y5.expiry), l3 && await this.client.core.pairing.updateMetadata({ topic: l3, metadata: y5.peer.metadata }), V2(F2);
        }
      }), !l3) {
        const { message: v3 } = b("NO_MATCHING_KEY", `connect() pairing topic: ${l3}`);
        throw new Error(v3);
      }
      const A = await this.sendRequest(l3, "wc_sessionPropose", E5), le3 = ot(import_time4.FIVE_MINUTES);
      return await this.setProposal(A, w4({ id: A, expiry: le3 }, E5)), { uri: h4, approval: U5 };
    }, this.pair = async (e) => (this.isInitialized(), await this.client.core.pairing.pair(e)), this.approve = async (e) => {
      this.isInitialized(), await this.isValidApprove(e);
      const { id: s2, relayProtocol: t, namespaces: i3, sessionProperties: r2 } = e, o = this.client.proposal.get(s2);
      let { pairingTopic: a2, proposer: l3, requiredNamespaces: h4, optionalNamespaces: I2 } = o;
      a2 = a2 || "", H(h4) || (h4 = St(i3, "approve()"));
      const g5 = await this.client.core.crypto.generateKeyPair(), E5 = l3.publicKey, m3 = await this.client.core.crypto.generateSharedKey(g5, E5);
      a2 && s2 && (await this.client.core.pairing.updateMetadata({ topic: a2, metadata: l3.metadata }), await this.sendResult(s2, a2, { relay: { protocol: t ?? "irn" }, responderPublicKey: g5 }), await this.client.proposal.delete(s2, w("USER_DISCONNECTED")), await this.client.core.pairing.activate({ topic: a2 }));
      const V2 = w4({ relay: { protocol: t ?? "irn" }, namespaces: i3, requiredNamespaces: h4, optionalNamespaces: I2, pairingTopic: a2, controller: { publicKey: g5, metadata: this.client.metadata }, expiry: ot(C4) }, r2 && { sessionProperties: r2 });
      await this.client.core.relayer.subscribe(m3), await this.sendRequest(m3, "wc_sessionSettle", V2);
      const U5 = H4(w4({}, V2), { topic: m3, pairingTopic: a2, acknowledged: false, self: V2.controller, peer: { publicKey: l3.publicKey, metadata: l3.metadata }, controller: g5 });
      return await this.client.session.set(m3, U5), await this.setExpiry(m3, ot(C4)), { topic: m3, acknowledged: () => new Promise((A) => setTimeout(() => A(this.client.session.get(m3)), 500)) };
    }, this.reject = async (e) => {
      this.isInitialized(), await this.isValidReject(e);
      const { id: s2, reason: t } = e, { pairingTopic: i3 } = this.client.proposal.get(s2);
      i3 && (await this.sendError(s2, i3, t), await this.client.proposal.delete(s2, w("USER_DISCONNECTED")));
    }, this.update = async (e) => {
      this.isInitialized(), await this.isValidUpdate(e);
      const { topic: s2, namespaces: t } = e, i3 = await this.sendRequest(s2, "wc_sessionUpdate", { namespaces: t }), { done: r2, resolve: o, reject: a2 } = Xn();
      return this.events.once(it("session_update", i3), ({ error: l3 }) => {
        l3 ? a2(l3) : o();
      }), await this.client.session.update(s2, { namespaces: t }), { acknowledged: r2 };
    }, this.extend = async (e) => {
      this.isInitialized(), await this.isValidExtend(e);
      const { topic: s2 } = e, t = await this.sendRequest(s2, "wc_sessionExtend", {}), { done: i3, resolve: r2, reject: o } = Xn();
      return this.events.once(it("session_extend", t), ({ error: a2 }) => {
        a2 ? o(a2) : r2();
      }), await this.setExpiry(s2, ot(C4)), { acknowledged: i3 };
    }, this.request = async (e) => {
      this.isInitialized(), await this.isValidRequest(e);
      const { chainId: s2, request: t, topic: i3, expiry: r2 } = e, o = await this.sendRequest(i3, "wc_sessionRequest", { request: t, chainId: s2 }, r2), { done: a2, resolve: l3, reject: h4 } = Xn(r2);
      this.events.once(it("session_request", o), ({ error: g5, result: E5 }) => {
        g5 ? h4(g5) : l3(E5);
      }), this.client.events.emit("session_request_sent", { topic: i3, request: t, chainId: s2, id: o });
      const I2 = await this.client.core.storage.getItem(ee2);
      return ct({ id: o, topic: i3, wcDeepLink: I2 }), await a2();
    }, this.respond = async (e) => {
      this.isInitialized(), await this.isValidRespond(e);
      const { topic: s2, response: t } = e, { id: i3 } = t;
      isJsonRpcResult(t) ? await this.sendResult(i3, s2, t.result) : isJsonRpcError(t) && await this.sendError(i3, s2, t.error), this.deletePendingSessionRequest(e.response.id, { message: "fulfilled", code: 0 });
    }, this.ping = async (e) => {
      this.isInitialized(), await this.isValidPing(e);
      const { topic: s2 } = e;
      if (this.client.session.keys.includes(s2)) {
        const t = await this.sendRequest(s2, "wc_sessionPing", {}), { done: i3, resolve: r2, reject: o } = Xn();
        this.events.once(it("session_ping", t), ({ error: a2 }) => {
          a2 ? o(a2) : r2();
        }), await i3();
      } else
        this.client.core.pairing.pairings.keys.includes(s2) && await this.client.core.pairing.ping({ topic: s2 });
    }, this.emit = async (e) => {
      this.isInitialized(), await this.isValidEmit(e);
      const { topic: s2, event: t, chainId: i3 } = e;
      await this.sendRequest(s2, "wc_sessionEvent", { event: t, chainId: i3 });
    }, this.disconnect = async (e) => {
      this.isInitialized(), await this.isValidDisconnect(e);
      const { topic: s2 } = e;
      if (this.client.session.keys.includes(s2)) {
        const t = getBigIntRpcId().toString();
        let i3;
        const r2 = (o) => {
          (o == null ? void 0 : o.id.toString()) === t && (this.client.core.relayer.events.removeListener(g3.message_ack, r2), i3());
        };
        await Promise.all([new Promise((o) => {
          i3 = o, this.client.core.relayer.on(g3.message_ack, r2);
        }), this.sendRequest(s2, "wc_sessionDelete", w("USER_DISCONNECTED"), void 0, t)]), await this.deleteSession(s2);
      } else
        await this.client.core.pairing.disconnect({ topic: s2 });
    }, this.find = (e) => (this.isInitialized(), this.client.session.getAll().filter((s2) => Rt(s2, e))), this.getPendingSessionRequests = () => (this.isInitialized(), this.client.pendingRequest.getAll()), this.cleanupDuplicatePairings = async (e) => {
      if (e.pairingTopic)
        try {
          const s2 = this.client.core.pairing.pairings.get(e.pairingTopic), t = this.client.core.pairing.pairings.getAll().filter((i3) => {
            var r2, o;
            return ((r2 = i3.peerMetadata) == null ? void 0 : r2.url) && ((o = i3.peerMetadata) == null ? void 0 : o.url) === e.peer.metadata.url && i3.topic && i3.topic !== s2.topic;
          });
          if (t.length === 0)
            return;
          this.client.logger.info(`Cleaning up ${t.length} duplicate pairing(s)`), await Promise.all(t.map((i3) => this.client.core.pairing.disconnect({ topic: i3.topic }))), this.client.logger.info("Duplicate pairings clean up finished");
        } catch (s2) {
          this.client.logger.error(s2);
        }
    }, this.deleteSession = async (e, s2) => {
      const { self: t } = this.client.session.get(e);
      await this.client.core.relayer.unsubscribe(e), this.client.session.delete(e, w("USER_DISCONNECTED")), this.client.core.crypto.keychain.has(t.publicKey) && await this.client.core.crypto.deleteKeyPair(t.publicKey), this.client.core.crypto.keychain.has(e) && await this.client.core.crypto.deleteSymKey(e), s2 || this.client.core.expirer.del(e);
    }, this.deleteProposal = async (e, s2) => {
      await Promise.all([this.client.proposal.delete(e, w("USER_DISCONNECTED")), s2 ? Promise.resolve() : this.client.core.expirer.del(e)]);
    }, this.deletePendingSessionRequest = async (e, s2, t = false) => {
      await Promise.all([this.client.pendingRequest.delete(e, s2), t ? Promise.resolve() : this.client.core.expirer.del(e)]);
    }, this.setExpiry = async (e, s2) => {
      this.client.session.keys.includes(e) && await this.client.session.update(e, { expiry: s2 }), this.client.core.expirer.set(e, s2);
    }, this.setProposal = async (e, s2) => {
      await this.client.proposal.set(e, s2), this.client.core.expirer.set(e, s2.expiry);
    }, this.setPendingSessionRequest = async (e) => {
      const s2 = O5.wc_sessionRequest.req.ttl, { id: t, topic: i3, params: r2 } = e;
      await this.client.pendingRequest.set(t, { id: t, topic: i3, params: r2 }), s2 && this.client.core.expirer.set(t, ot(s2));
    }, this.sendRequest = async (e, s2, t, i3, r2) => {
      const o = formatJsonRpcRequest(s2, t);
      if (je() && oe3.includes(s2)) {
        const h4 = $n(JSON.stringify(o));
        await this.client.core.verify.register({ attestationId: h4 });
      }
      const a2 = await this.client.core.crypto.encode(e, o), l3 = O5[s2].req;
      return i3 && (l3.ttl = i3), r2 && (l3.id = r2), this.client.core.history.set(e, o), this.client.core.relayer.publish(e, a2, l3), o.id;
    }, this.sendResult = async (e, s2, t) => {
      const i3 = formatJsonRpcResult(e, t), r2 = await this.client.core.crypto.encode(s2, i3), o = await this.client.core.history.get(s2, e), a2 = O5[o.request.method].res;
      this.client.core.relayer.publish(s2, r2, a2), await this.client.core.history.resolve(i3);
    }, this.sendError = async (e, s2, t) => {
      const i3 = formatJsonRpcError(e, t), r2 = await this.client.core.crypto.encode(s2, i3), o = await this.client.core.history.get(s2, e), a2 = O5[o.request.method].res;
      this.client.core.relayer.publish(s2, r2, a2), await this.client.core.history.resolve(i3);
    }, this.cleanup = async () => {
      const e = [], s2 = [];
      this.client.session.getAll().forEach((t) => {
        st(t.expiry) && e.push(t.topic);
      }), this.client.proposal.getAll().forEach((t) => {
        st(t.expiry) && s2.push(t.id);
      }), await Promise.all([...e.map((t) => this.deleteSession(t)), ...s2.map((t) => this.deleteProposal(t))]);
    }, this.onRelayEventRequest = (e) => {
      const { topic: s2, payload: t } = e, i3 = t.method;
      switch (i3) {
        case "wc_sessionPropose":
          return this.onSessionProposeRequest(s2, t);
        case "wc_sessionSettle":
          return this.onSessionSettleRequest(s2, t);
        case "wc_sessionUpdate":
          return this.onSessionUpdateRequest(s2, t);
        case "wc_sessionExtend":
          return this.onSessionExtendRequest(s2, t);
        case "wc_sessionPing":
          return this.onSessionPingRequest(s2, t);
        case "wc_sessionDelete":
          return this.onSessionDeleteRequest(s2, t);
        case "wc_sessionRequest":
          return this.onSessionRequest(s2, t);
        case "wc_sessionEvent":
          return this.onSessionEventRequest(s2, t);
        default:
          return this.client.logger.info(`Unsupported request method ${i3}`);
      }
    }, this.onRelayEventResponse = async (e) => {
      const { topic: s2, payload: t } = e, i3 = (await this.client.core.history.get(s2, t.id)).request.method;
      switch (i3) {
        case "wc_sessionPropose":
          return this.onSessionProposeResponse(s2, t);
        case "wc_sessionSettle":
          return this.onSessionSettleResponse(s2, t);
        case "wc_sessionUpdate":
          return this.onSessionUpdateResponse(s2, t);
        case "wc_sessionExtend":
          return this.onSessionExtendResponse(s2, t);
        case "wc_sessionPing":
          return this.onSessionPingResponse(s2, t);
        case "wc_sessionRequest":
          return this.onSessionRequestResponse(s2, t);
        default:
          return this.client.logger.info(`Unsupported response method ${i3}`);
      }
    }, this.onRelayEventUnknownPayload = (e) => {
      const { topic: s2 } = e, { message: t } = b("MISSING_OR_INVALID", `Decoded payload on topic ${s2} is not identifiable as a JSON-RPC request or a response.`);
      throw new Error(t);
    }, this.onSessionProposeRequest = async (e, s2) => {
      const { params: t, id: i3 } = s2;
      try {
        this.isValidConnect(w4({}, s2.params));
        const r2 = ot(import_time4.FIVE_MINUTES), o = w4({ id: i3, pairingTopic: e, expiry: r2 }, t);
        await this.setProposal(i3, o);
        const a2 = $n(JSON.stringify(s2)), l3 = await this.getVerifyContext(a2, o.proposer.metadata);
        this.client.events.emit("session_proposal", { id: i3, params: o, verifyContext: l3 });
      } catch (r2) {
        await this.sendError(i3, e, r2), this.client.logger.error(r2);
      }
    }, this.onSessionProposeResponse = async (e, s2) => {
      const { id: t } = s2;
      if (isJsonRpcResult(s2)) {
        const { result: i3 } = s2;
        this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", result: i3 });
        const r2 = this.client.proposal.get(t);
        this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", proposal: r2 });
        const o = r2.proposer.publicKey;
        this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", selfPublicKey: o });
        const a2 = i3.responderPublicKey;
        this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", peerPublicKey: a2 });
        const l3 = await this.client.core.crypto.generateSharedKey(o, a2);
        this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", sessionTopic: l3 });
        const h4 = await this.client.core.relayer.subscribe(l3);
        this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", subscriptionId: h4 }), await this.client.core.pairing.activate({ topic: e });
      } else
        isJsonRpcError(s2) && (await this.client.proposal.delete(t, w("USER_DISCONNECTED")), this.events.emit(it("session_connect"), { error: s2.error }));
    }, this.onSessionSettleRequest = async (e, s2) => {
      const { id: t, params: i3 } = s2;
      try {
        this.isValidSessionSettleRequest(i3);
        const { relay: r2, controller: o, expiry: a2, namespaces: l3, requiredNamespaces: h4, optionalNamespaces: I2, sessionProperties: g5, pairingTopic: E5 } = s2.params, m3 = w4({ topic: e, relay: r2, expiry: a2, namespaces: l3, acknowledged: true, pairingTopic: E5, requiredNamespaces: h4, optionalNamespaces: I2, controller: o.publicKey, self: { publicKey: "", metadata: this.client.metadata }, peer: { publicKey: o.publicKey, metadata: o.metadata } }, g5 && { sessionProperties: g5 });
        await this.sendResult(s2.id, e, true), this.events.emit(it("session_connect"), { session: m3 }), this.cleanupDuplicatePairings(m3);
      } catch (r2) {
        await this.sendError(t, e, r2), this.client.logger.error(r2);
      }
    }, this.onSessionSettleResponse = async (e, s2) => {
      const { id: t } = s2;
      isJsonRpcResult(s2) ? (await this.client.session.update(e, { acknowledged: true }), this.events.emit(it("session_approve", t), {})) : isJsonRpcError(s2) && (await this.client.session.delete(e, w("USER_DISCONNECTED")), this.events.emit(it("session_approve", t), { error: s2.error }));
    }, this.onSessionUpdateRequest = async (e, s2) => {
      const { params: t, id: i3 } = s2;
      try {
        this.isValidUpdate(w4({ topic: e }, t)), await this.client.session.update(e, { namespaces: t.namespaces }), await this.sendResult(i3, e, true), this.client.events.emit("session_update", { id: i3, topic: e, params: t });
      } catch (r2) {
        await this.sendError(i3, e, r2), this.client.logger.error(r2);
      }
    }, this.onSessionUpdateResponse = (e, s2) => {
      const { id: t } = s2;
      isJsonRpcResult(s2) ? this.events.emit(it("session_update", t), {}) : isJsonRpcError(s2) && this.events.emit(it("session_update", t), { error: s2.error });
    }, this.onSessionExtendRequest = async (e, s2) => {
      const { id: t } = s2;
      try {
        this.isValidExtend({ topic: e }), await this.setExpiry(e, ot(C4)), await this.sendResult(t, e, true), this.client.events.emit("session_extend", { id: t, topic: e });
      } catch (i3) {
        await this.sendError(t, e, i3), this.client.logger.error(i3);
      }
    }, this.onSessionExtendResponse = (e, s2) => {
      const { id: t } = s2;
      isJsonRpcResult(s2) ? this.events.emit(it("session_extend", t), {}) : isJsonRpcError(s2) && this.events.emit(it("session_extend", t), { error: s2.error });
    }, this.onSessionPingRequest = async (e, s2) => {
      const { id: t } = s2;
      try {
        this.isValidPing({ topic: e }), await this.sendResult(t, e, true), this.client.events.emit("session_ping", { id: t, topic: e });
      } catch (i3) {
        await this.sendError(t, e, i3), this.client.logger.error(i3);
      }
    }, this.onSessionPingResponse = (e, s2) => {
      const { id: t } = s2;
      setTimeout(() => {
        isJsonRpcResult(s2) ? this.events.emit(it("session_ping", t), {}) : isJsonRpcError(s2) && this.events.emit(it("session_ping", t), { error: s2.error });
      }, 500);
    }, this.onSessionDeleteRequest = async (e, s2) => {
      const { id: t } = s2;
      try {
        this.isValidDisconnect({ topic: e, reason: s2.params }), await Promise.all([new Promise((i3) => {
          this.client.core.relayer.once(g3.publish, async () => {
            i3(await this.deleteSession(e));
          });
        }), this.sendResult(t, e, true)]), this.client.events.emit("session_delete", { id: t, topic: e });
      } catch (i3) {
        this.client.logger.error(i3);
      }
    }, this.onSessionRequest = async (e, s2) => {
      const { id: t, params: i3 } = s2;
      try {
        this.isValidRequest(w4({ topic: e }, i3)), await this.setPendingSessionRequest({ id: t, topic: e, params: i3 });
        const r2 = $n(JSON.stringify(s2)), o = this.client.session.get(e), a2 = await this.getVerifyContext(r2, o.peer.metadata);
        this.client.events.emit("session_request", { id: t, topic: e, params: i3, verifyContext: a2 });
      } catch (r2) {
        await this.sendError(t, e, r2), this.client.logger.error(r2);
      }
    }, this.onSessionRequestResponse = (e, s2) => {
      const { id: t } = s2;
      isJsonRpcResult(s2) ? this.events.emit(it("session_request", t), { result: s2.result }) : isJsonRpcError(s2) && this.events.emit(it("session_request", t), { error: s2.error });
    }, this.onSessionEventRequest = async (e, s2) => {
      const { id: t, params: i3 } = s2;
      try {
        this.isValidEmit(w4({ topic: e }, i3)), this.client.events.emit("session_event", { id: t, topic: e, params: i3 });
      } catch (r2) {
        await this.sendError(t, e, r2), this.client.logger.error(r2);
      }
    }, this.isValidConnect = async (e) => {
      if (!Dt(e)) {
        const { message: a2 } = b("MISSING_OR_INVALID", `connect() params: ${JSON.stringify(e)}`);
        throw new Error(a2);
      }
      const { pairingTopic: s2, requiredNamespaces: t, optionalNamespaces: i3, sessionProperties: r2, relays: o } = e;
      if (I(s2) || await this.isValidPairingTopic(s2), !jt(o, true)) {
        const { message: a2 } = b("MISSING_OR_INVALID", `connect() relays: ${o}`);
        throw new Error(a2);
      }
      !I(t) && H(t) !== 0 && this.validateNamespaces(t, "requiredNamespaces"), !I(i3) && H(i3) !== 0 && this.validateNamespaces(i3, "optionalNamespaces"), I(r2) || this.validateSessionProps(r2, "sessionProperties");
    }, this.validateNamespaces = (e, s2) => {
      const t = $t(e, "connect()", s2);
      if (t)
        throw new Error(t.message);
    }, this.isValidApprove = async (e) => {
      if (!Dt(e))
        throw new Error(b("MISSING_OR_INVALID", `approve() params: ${e}`).message);
      const { id: s2, namespaces: t, relayProtocol: i3, sessionProperties: r2 } = e;
      await this.isValidProposalId(s2);
      const o = this.client.proposal.get(s2), a2 = sn(t, "approve()");
      if (a2)
        throw new Error(a2.message);
      const l3 = an(o.requiredNamespaces, t, "approve()");
      if (l3)
        throw new Error(l3.message);
      if (!m(i3, true)) {
        const { message: h4 } = b("MISSING_OR_INVALID", `approve() relayProtocol: ${i3}`);
        throw new Error(h4);
      }
      I(r2) || this.validateSessionProps(r2, "sessionProperties");
    }, this.isValidReject = async (e) => {
      if (!Dt(e)) {
        const { message: i3 } = b("MISSING_OR_INVALID", `reject() params: ${e}`);
        throw new Error(i3);
      }
      const { id: s2, reason: t } = e;
      if (await this.isValidProposalId(s2), !Vt(t)) {
        const { message: i3 } = b("MISSING_OR_INVALID", `reject() reason: ${JSON.stringify(t)}`);
        throw new Error(i3);
      }
    }, this.isValidSessionSettleRequest = (e) => {
      if (!Dt(e)) {
        const { message: l3 } = b("MISSING_OR_INVALID", `onSessionSettleRequest() params: ${e}`);
        throw new Error(l3);
      }
      const { relay: s2, controller: t, namespaces: i3, expiry: r2 } = e;
      if (!cn(s2)) {
        const { message: l3 } = b("MISSING_OR_INVALID", "onSessionSettleRequest() relay protocol should be a string");
        throw new Error(l3);
      }
      const o = _t(t, "onSessionSettleRequest()");
      if (o)
        throw new Error(o.message);
      const a2 = sn(i3, "onSessionSettleRequest()");
      if (a2)
        throw new Error(a2.message);
      if (st(r2)) {
        const { message: l3 } = b("EXPIRED", "onSessionSettleRequest()");
        throw new Error(l3);
      }
    }, this.isValidUpdate = async (e) => {
      if (!Dt(e)) {
        const { message: a2 } = b("MISSING_OR_INVALID", `update() params: ${e}`);
        throw new Error(a2);
      }
      const { topic: s2, namespaces: t } = e;
      await this.isValidSessionTopic(s2);
      const i3 = this.client.session.get(s2), r2 = sn(t, "update()");
      if (r2)
        throw new Error(r2.message);
      const o = an(i3.requiredNamespaces, t, "update()");
      if (o)
        throw new Error(o.message);
    }, this.isValidExtend = async (e) => {
      if (!Dt(e)) {
        const { message: t } = b("MISSING_OR_INVALID", `extend() params: ${e}`);
        throw new Error(t);
      }
      const { topic: s2 } = e;
      await this.isValidSessionTopic(s2);
    }, this.isValidRequest = async (e) => {
      if (!Dt(e)) {
        const { message: a2 } = b("MISSING_OR_INVALID", `request() params: ${e}`);
        throw new Error(a2);
      }
      const { topic: s2, request: t, chainId: i3, expiry: r2 } = e;
      await this.isValidSessionTopic(s2);
      const { namespaces: o } = this.client.session.get(s2);
      if (!Lt(o, i3)) {
        const { message: a2 } = b("MISSING_OR_INVALID", `request() chainId: ${i3}`);
        throw new Error(a2);
      }
      if (!Mt(t)) {
        const { message: a2 } = b("MISSING_OR_INVALID", `request() ${JSON.stringify(t)}`);
        throw new Error(a2);
      }
      if (!xt(o, i3, t.method)) {
        const { message: a2 } = b("MISSING_OR_INVALID", `request() method: ${t.method}`);
        throw new Error(a2);
      }
      if (r2 && !zt(r2, $2)) {
        const { message: a2 } = b("MISSING_OR_INVALID", `request() expiry: ${r2}. Expiry must be a number (in seconds) between ${$2.min} and ${$2.max}`);
        throw new Error(a2);
      }
    }, this.isValidRespond = async (e) => {
      if (!Dt(e)) {
        const { message: i3 } = b("MISSING_OR_INVALID", `respond() params: ${e}`);
        throw new Error(i3);
      }
      const { topic: s2, response: t } = e;
      if (await this.isValidSessionTopic(s2), !kt(t)) {
        const { message: i3 } = b("MISSING_OR_INVALID", `respond() response: ${JSON.stringify(t)}`);
        throw new Error(i3);
      }
    }, this.isValidPing = async (e) => {
      if (!Dt(e)) {
        const { message: t } = b("MISSING_OR_INVALID", `ping() params: ${e}`);
        throw new Error(t);
      }
      const { topic: s2 } = e;
      await this.isValidSessionOrPairingTopic(s2);
    }, this.isValidEmit = async (e) => {
      if (!Dt(e)) {
        const { message: o } = b("MISSING_OR_INVALID", `emit() params: ${e}`);
        throw new Error(o);
      }
      const { topic: s2, event: t, chainId: i3 } = e;
      await this.isValidSessionTopic(s2);
      const { namespaces: r2 } = this.client.session.get(s2);
      if (!Lt(r2, i3)) {
        const { message: o } = b("MISSING_OR_INVALID", `emit() chainId: ${i3}`);
        throw new Error(o);
      }
      if (!Kt(t)) {
        const { message: o } = b("MISSING_OR_INVALID", `emit() event: ${JSON.stringify(t)}`);
        throw new Error(o);
      }
      if (!Ft(r2, i3, t.name)) {
        const { message: o } = b("MISSING_OR_INVALID", `emit() event: ${JSON.stringify(t)}`);
        throw new Error(o);
      }
    }, this.isValidDisconnect = async (e) => {
      if (!Dt(e)) {
        const { message: t } = b("MISSING_OR_INVALID", `disconnect() params: ${e}`);
        throw new Error(t);
      }
      const { topic: s2 } = e;
      await this.isValidSessionOrPairingTopic(s2);
    }, this.getVerifyContext = async (e, s2) => {
      const t = { verified: { verifyUrl: s2.verifyUrl || "", validation: "UNKNOWN", origin: s2.url || "" } };
      try {
        const i3 = await this.client.core.verify.resolve({ attestationId: e, verifyUrl: s2.verifyUrl });
        i3 && (t.verified.origin = i3, t.verified.validation = i3 === s2.url ? "VALID" : "INVALID");
      } catch (i3) {
        this.client.logger.error(i3);
      }
      return this.client.logger.info(`Verify context: ${JSON.stringify(t)}`), t;
    }, this.validateSessionProps = (e, s2) => {
      Object.values(e).forEach((t) => {
        if (!m(t, false)) {
          const { message: i3 } = b("MISSING_OR_INVALID", `${s2} must be in Record<string, string> format. Received: ${JSON.stringify(t)}`);
          throw new Error(i3);
        }
      });
    };
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: n3 } = b("NOT_INITIALIZED", this.name);
      throw new Error(n3);
    }
  }
  registerRelayerEvents() {
    this.client.core.relayer.on(g3.message, async (n3) => {
      const { topic: e, message: s2 } = n3;
      if (this.ignoredPayloadTypes.includes(this.client.core.crypto.getPayloadType(s2)))
        return;
      const t = await this.client.core.crypto.decode(e, s2);
      isJsonRpcRequest(t) ? (this.client.core.history.set(e, t), this.onRelayEventRequest({ topic: e, payload: t })) : isJsonRpcResponse(t) ? (await this.client.core.history.resolve(t), await this.onRelayEventResponse({ topic: e, payload: t }), this.client.core.history.delete(e, t.id)) : this.onRelayEventUnknownPayload({ topic: e, payload: t });
    });
  }
  registerExpirerEvents() {
    this.client.core.expirer.on(w3.expired, async (n3) => {
      const { topic: e, id: s2 } = rt(n3.target);
      if (s2 && this.client.pendingRequest.keys.includes(s2))
        return await this.deletePendingSessionRequest(s2, b("EXPIRED"), true);
      e ? this.client.session.keys.includes(e) && (await this.deleteSession(e, true), this.client.events.emit("session_expire", { topic: e })) : s2 && (await this.deleteProposal(s2, true), this.client.events.emit("proposal_expire", { id: s2 }));
    });
  }
  isValidPairingTopic(n3) {
    if (!m(n3, false)) {
      const { message: e } = b("MISSING_OR_INVALID", `pairing topic should be a string: ${n3}`);
      throw new Error(e);
    }
    if (!this.client.core.pairing.pairings.keys.includes(n3)) {
      const { message: e } = b("NO_MATCHING_KEY", `pairing topic doesn't exist: ${n3}`);
      throw new Error(e);
    }
    if (st(this.client.core.pairing.pairings.get(n3).expiry)) {
      const { message: e } = b("EXPIRED", `pairing topic: ${n3}`);
      throw new Error(e);
    }
  }
  async isValidSessionTopic(n3) {
    if (!m(n3, false)) {
      const { message: e } = b("MISSING_OR_INVALID", `session topic should be a string: ${n3}`);
      throw new Error(e);
    }
    if (!this.client.session.keys.includes(n3)) {
      const { message: e } = b("NO_MATCHING_KEY", `session topic doesn't exist: ${n3}`);
      throw new Error(e);
    }
    if (st(this.client.session.get(n3).expiry)) {
      await this.deleteSession(n3);
      const { message: e } = b("EXPIRED", `session topic: ${n3}`);
      throw new Error(e);
    }
  }
  async isValidSessionOrPairingTopic(n3) {
    if (this.client.session.keys.includes(n3))
      await this.isValidSessionTopic(n3);
    else if (this.client.core.pairing.pairings.keys.includes(n3))
      this.isValidPairingTopic(n3);
    else if (m(n3, false)) {
      const { message: e } = b("NO_MATCHING_KEY", `session or pairing topic doesn't exist: ${n3}`);
      throw new Error(e);
    } else {
      const { message: e } = b("MISSING_OR_INVALID", `session or pairing topic should be a string: ${n3}`);
      throw new Error(e);
    }
  }
  async isValidProposalId(n3) {
    if (!Ct(n3)) {
      const { message: e } = b("MISSING_OR_INVALID", `proposal id should be a number: ${n3}`);
      throw new Error(e);
    }
    if (!this.client.proposal.keys.includes(n3)) {
      const { message: e } = b("NO_MATCHING_KEY", `proposal id doesn't exist: ${n3}`);
      throw new Error(e);
    }
    if (st(this.client.proposal.get(n3).expiry)) {
      await this.deleteProposal(n3);
      const { message: e } = b("EXPIRED", `proposal id: ${n3}`);
      throw new Error(e);
    }
  }
};
var rs2 = class extends Nt2 {
  constructor(n3, e) {
    super(n3, e, se2, b4), this.core = n3, this.logger = e;
  }
};
var os2 = class extends Nt2 {
  constructor(n3, e) {
    super(n3, e, ie2, b4), this.core = n3, this.logger = e;
  }
};
var as2 = class extends Nt2 {
  constructor(n3, e) {
    super(n3, e, re, b4, (s2) => s2.id), this.core = n3, this.logger = e;
  }
};
var M3 = class _M extends b3 {
  constructor(n3) {
    super(n3), this.protocol = j5, this.version = J4, this.name = G2.name, this.events = new import_events6.EventEmitter(), this.on = (s2, t) => this.events.on(s2, t), this.once = (s2, t) => this.events.once(s2, t), this.off = (s2, t) => this.events.off(s2, t), this.removeListener = (s2, t) => this.events.removeListener(s2, t), this.removeAllListeners = (s2) => this.events.removeAllListeners(s2), this.connect = async (s2) => {
      try {
        return await this.engine.connect(s2);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.pair = async (s2) => {
      try {
        return await this.engine.pair(s2);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.approve = async (s2) => {
      try {
        return await this.engine.approve(s2);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.reject = async (s2) => {
      try {
        return await this.engine.reject(s2);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.update = async (s2) => {
      try {
        return await this.engine.update(s2);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.extend = async (s2) => {
      try {
        return await this.engine.extend(s2);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.request = async (s2) => {
      try {
        return await this.engine.request(s2);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.respond = async (s2) => {
      try {
        return await this.engine.respond(s2);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.ping = async (s2) => {
      try {
        return await this.engine.ping(s2);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.emit = async (s2) => {
      try {
        return await this.engine.emit(s2);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.disconnect = async (s2) => {
      try {
        return await this.engine.disconnect(s2);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.find = (s2) => {
      try {
        return this.engine.find(s2);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.getPendingSessionRequests = () => {
      try {
        return this.engine.getPendingSessionRequests();
      } catch (s2) {
        throw this.logger.error(s2.message), s2;
      }
    }, this.name = (n3 == null ? void 0 : n3.name) || G2.name, this.metadata = (n3 == null ? void 0 : n3.metadata) || Fn();
    const e = typeof (n3 == null ? void 0 : n3.logger) < "u" && typeof (n3 == null ? void 0 : n3.logger) != "string" ? n3.logger : (0, import_pino2.default)(k3({ level: (n3 == null ? void 0 : n3.logger) || G2.logger }));
    this.core = (n3 == null ? void 0 : n3.core) || new Sr2(n3), this.logger = E2(e, this.name), this.session = new os2(this.core, this.logger), this.proposal = new rs2(this.core, this.logger), this.pendingRequest = new as2(this.core, this.logger), this.engine = new ns2(this);
  }
  static async init(n3) {
    const e = new _M(n3);
    return await e.initialize(), e;
  }
  get context() {
    return y2(this.logger);
  }
  get pairing() {
    return this.core.pairing.pairings;
  }
  async initialize() {
    this.logger.trace("Initialized");
    try {
      await this.core.start(), await this.session.init(), await this.proposal.init(), await this.pendingRequest.init(), await this.engine.init(), this.core.verify.init({ verifyUrl: this.metadata.verifyUrl }), this.logger.info("SignClient Initialization Success");
    } catch (n3) {
      throw this.logger.info("SignClient Initialization Failure"), this.logger.error(n3.message), n3;
    }
  }
};

// node_modules/@walletconnect/universal-provider/node_modules/@walletconnect/jsonrpc-provider/dist/esm/provider.js
var import_events7 = __toESM(require_events());
init_esm2();
var JsonRpcProvider2 = class extends r {
  constructor(connection) {
    super(connection);
    this.events = new import_events7.EventEmitter();
    this.hasRegisteredEventListeners = false;
    this.connection = this.setConnection(connection);
    if (this.connection.connected) {
      this.registerEventListeners();
    }
  }
  async connect(connection = this.connection) {
    await this.open(connection);
  }
  async disconnect() {
    await this.close();
  }
  on(event, listener) {
    this.events.on(event, listener);
  }
  once(event, listener) {
    this.events.once(event, listener);
  }
  off(event, listener) {
    this.events.off(event, listener);
  }
  removeListener(event, listener) {
    this.events.removeListener(event, listener);
  }
  async request(request, context) {
    return this.requestStrict(formatJsonRpcRequest(request.method, request.params || [], request.id || getBigIntRpcId().toString()), context);
  }
  async requestStrict(request, context) {
    return new Promise(async (resolve, reject) => {
      if (!this.connection.connected) {
        try {
          await this.open();
        } catch (e) {
          reject(e);
        }
      }
      this.events.on(`${request.id}`, (response) => {
        if (isJsonRpcError(response)) {
          reject(response.error);
        } else {
          resolve(response.result);
        }
      });
      try {
        await this.connection.send(request, context);
      } catch (e) {
        reject(e);
      }
    });
  }
  setConnection(connection = this.connection) {
    return connection;
  }
  onPayload(payload) {
    this.events.emit("payload", payload);
    if (isJsonRpcResponse(payload)) {
      this.events.emit(`${payload.id}`, payload);
    } else {
      this.events.emit("message", {
        type: payload.method,
        data: payload.params
      });
    }
  }
  onClose(event) {
    if (event && event.code === 3e3) {
      this.events.emit("error", new Error(`WebSocket connection closed abnormally with code: ${event.code} ${event.reason ? `(${event.reason})` : ""}`));
    }
    this.events.emit("disconnect");
  }
  async open(connection = this.connection) {
    if (this.connection === connection && this.connection.connected)
      return;
    if (this.connection.connected)
      this.close();
    if (typeof connection === "string") {
      await this.connection.open(connection);
      connection = this.connection;
    }
    this.connection = this.setConnection(connection);
    await this.connection.open();
    this.registerEventListeners();
    this.events.emit("connect");
  }
  async close() {
    await this.connection.close();
  }
  registerEventListeners() {
    if (this.hasRegisteredEventListeners)
      return;
    this.connection.on("payload", (payload) => this.onPayload(payload));
    this.connection.on("close", (event) => this.onClose(event));
    this.connection.on("error", (error) => this.events.emit("error", error));
    this.connection.on("register_error", (error) => this.onClose());
    this.hasRegisteredEventListeners = true;
  }
};

// node_modules/@walletconnect/universal-provider/dist/index.es.js
var import_events8 = __toESM(require_events());
var Ca = "error";
var Hg = "wss://relay.walletconnect.com";
var $g = "wc";
var Ug = "universal_provider";
var Ia = `${$g}@2:${Ug}:`;
var Wg = "https://rpc.walletconnect.com/v1";
var ot3 = { DEFAULT_CHAIN_CHANGED: "default_chain_changed" };
var pe4 = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
var $i2 = { exports: {} };
(function(C5, u4) {
  (function() {
    var i3, p5 = "4.17.21", I2 = 200, D4 = "Unsupported core-js use. Try https://npms.io/search?q=ponyfill.", F2 = "Expected a function", Fn3 = "Invalid `variable` option passed into `_.template`", Gt2 = "__lodash_hash_undefined__", lr3 = 500, At3 = "__lodash_placeholder__", Ln2 = 1, Mn3 = 2, Ct3 = 4, It3 = 1, de4 = 2, vn3 = 1, ft4 = 2, Mi2 = 4, Dn2 = 8, xt4 = 16, Nn2 = 32, Et3 = 64, qn3 = 128, zt4 = 256, pr3 = 512, Ta = 30, La = "...", Da = 800, Na = 16, qi2 = 1, Ha = 2, $a = 3, ct4 = 1 / 0, kn3 = 9007199254740991, Ua = 17976931348623157e292, ge3 = 0 / 0, Hn2 = 4294967295, Wa = Hn2 - 1, Fa = Hn2 >>> 1, Ma = [["ary", qn3], ["bind", vn3], ["bindKey", ft4], ["curry", Dn2], ["curryRight", xt4], ["flip", pr3], ["partial", Nn2], ["partialRight", Et3], ["rearg", zt4]], yt4 = "[object Arguments]", ve3 = "[object Array]", qa = "[object AsyncFunction]", Kt4 = "[object Boolean]", Yt2 = "[object Date]", Ba = "[object DOMException]", _e3 = "[object Error]", me2 = "[object Function]", Bi2 = "[object GeneratorFunction]", yn2 = "[object Map]", Zt2 = "[object Number]", Ga = "[object Null]", Bn3 = "[object Object]", Gi2 = "[object Promise]", za = "[object Proxy]", Jt2 = "[object RegExp]", Sn2 = "[object Set]", Xt2 = "[object String]", we3 = "[object Symbol]", Ka = "[object Undefined]", Qt2 = "[object WeakMap]", Ya = "[object WeakSet]", Vt4 = "[object ArrayBuffer]", St4 = "[object DataView]", dr3 = "[object Float32Array]", gr3 = "[object Float64Array]", vr3 = "[object Int8Array]", _r3 = "[object Int16Array]", mr3 = "[object Int32Array]", wr3 = "[object Uint8Array]", Pr2 = "[object Uint8ClampedArray]", Ar2 = "[object Uint16Array]", Cr3 = "[object Uint32Array]", Za = /\b__p \+= '';/g, Ja = /\b(__p \+=) '' \+/g, Xa = /(__e\(.*?\)|\b__t\)) \+\n'';/g, zi = /&(?:amp|lt|gt|quot|#39);/g, Ki2 = /[&<>"']/g, Qa = RegExp(zi.source), Va = RegExp(Ki2.source), ka = /<%-([\s\S]+?)%>/g, ja = /<%([\s\S]+?)%>/g, Yi2 = /<%=([\s\S]+?)%>/g, no2 = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, to2 = /^\w*$/, eo2 = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g, Ir3 = /[\\^$.*+?()[\]{}|]/g, ro2 = RegExp(Ir3.source), xr2 = /^\s+/, io2 = /\s/, so2 = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/, uo2 = /\{\n\/\* \[wrapped with (.+)\] \*/, ao2 = /,? & /, oo2 = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g, fo2 = /[()=,{}\[\]\/\s]/, co2 = /\\(\\)?/g, ho2 = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g, Zi2 = /\w*$/, lo2 = /^[-+]0x[0-9a-f]+$/i, po2 = /^0b[01]+$/i, go2 = /^\[object .+?Constructor\]$/, vo2 = /^0o[0-7]+$/i, _o2 = /^(?:0|[1-9]\d*)$/, mo2 = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g, Pe3 = /($^)/, wo2 = /['\n\r\u2028\u2029\\]/g, Ae4 = "\\ud800-\\udfff", Po2 = "\\u0300-\\u036f", Ao2 = "\\ufe20-\\ufe2f", Co2 = "\\u20d0-\\u20ff", Ji2 = Po2 + Ao2 + Co2, Xi2 = "\\u2700-\\u27bf", Qi2 = "a-z\\xdf-\\xf6\\xf8-\\xff", Io2 = "\\xac\\xb1\\xd7\\xf7", xo2 = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf", Eo2 = "\\u2000-\\u206f", yo2 = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000", Vi2 = "A-Z\\xc0-\\xd6\\xd8-\\xde", ki2 = "\\ufe0e\\ufe0f", ji2 = Io2 + xo2 + Eo2 + yo2, Er3 = "['’]", So2 = "[" + Ae4 + "]", ns3 = "[" + ji2 + "]", Ce4 = "[" + Ji2 + "]", ts3 = "\\d+", Oo2 = "[" + Xi2 + "]", es3 = "[" + Qi2 + "]", rs3 = "[^" + Ae4 + ji2 + ts3 + Xi2 + Qi2 + Vi2 + "]", yr3 = "\\ud83c[\\udffb-\\udfff]", Ro2 = "(?:" + Ce4 + "|" + yr3 + ")", is3 = "[^" + Ae4 + "]", Sr3 = "(?:\\ud83c[\\udde6-\\uddff]){2}", Or2 = "[\\ud800-\\udbff][\\udc00-\\udfff]", Ot3 = "[" + Vi2 + "]", ss3 = "\\u200d", us2 = "(?:" + es3 + "|" + rs3 + ")", bo2 = "(?:" + Ot3 + "|" + rs3 + ")", as3 = "(?:" + Er3 + "(?:d|ll|m|re|s|t|ve))?", os3 = "(?:" + Er3 + "(?:D|LL|M|RE|S|T|VE))?", fs2 = Ro2 + "?", cs2 = "[" + ki2 + "]?", To2 = "(?:" + ss3 + "(?:" + [is3, Sr3, Or2].join("|") + ")" + cs2 + fs2 + ")*", Lo2 = "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])", Do2 = "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])", hs2 = cs2 + fs2 + To2, No2 = "(?:" + [Oo2, Sr3, Or2].join("|") + ")" + hs2, Ho2 = "(?:" + [is3 + Ce4 + "?", Ce4, Sr3, Or2, So2].join("|") + ")", $o2 = RegExp(Er3, "g"), Uo2 = RegExp(Ce4, "g"), Rr3 = RegExp(yr3 + "(?=" + yr3 + ")|" + Ho2 + hs2, "g"), Wo2 = RegExp([Ot3 + "?" + es3 + "+" + as3 + "(?=" + [ns3, Ot3, "$"].join("|") + ")", bo2 + "+" + os3 + "(?=" + [ns3, Ot3 + us2, "$"].join("|") + ")", Ot3 + "?" + us2 + "+" + as3, Ot3 + "+" + os3, Do2, Lo2, ts3, No2].join("|"), "g"), Fo2 = RegExp("[" + ss3 + Ae4 + Ji2 + ki2 + "]"), Mo2 = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/, qo2 = ["Array", "Buffer", "DataView", "Date", "Error", "Float32Array", "Float64Array", "Function", "Int8Array", "Int16Array", "Int32Array", "Map", "Math", "Object", "Promise", "RegExp", "Set", "String", "Symbol", "TypeError", "Uint8Array", "Uint8ClampedArray", "Uint16Array", "Uint32Array", "WeakMap", "_", "clearTimeout", "isFinite", "parseInt", "setTimeout"], Bo2 = -1, B2 = {};
    B2[dr3] = B2[gr3] = B2[vr3] = B2[_r3] = B2[mr3] = B2[wr3] = B2[Pr2] = B2[Ar2] = B2[Cr3] = true, B2[yt4] = B2[ve3] = B2[Vt4] = B2[Kt4] = B2[St4] = B2[Yt2] = B2[_e3] = B2[me2] = B2[yn2] = B2[Zt2] = B2[Bn3] = B2[Jt2] = B2[Sn2] = B2[Xt2] = B2[Qt2] = false;
    var q4 = {};
    q4[yt4] = q4[ve3] = q4[Vt4] = q4[St4] = q4[Kt4] = q4[Yt2] = q4[dr3] = q4[gr3] = q4[vr3] = q4[_r3] = q4[mr3] = q4[yn2] = q4[Zt2] = q4[Bn3] = q4[Jt2] = q4[Sn2] = q4[Xt2] = q4[we3] = q4[wr3] = q4[Pr2] = q4[Ar2] = q4[Cr3] = true, q4[_e3] = q4[me2] = q4[Qt2] = false;
    var Go2 = { À: "A", Á: "A", Â: "A", Ã: "A", Ä: "A", Å: "A", à: "a", á: "a", â: "a", ã: "a", ä: "a", å: "a", Ç: "C", ç: "c", Ð: "D", ð: "d", È: "E", É: "E", Ê: "E", Ë: "E", è: "e", é: "e", ê: "e", ë: "e", Ì: "I", Í: "I", Î: "I", Ï: "I", ì: "i", í: "i", î: "i", ï: "i", Ñ: "N", ñ: "n", Ò: "O", Ó: "O", Ô: "O", Õ: "O", Ö: "O", Ø: "O", ò: "o", ó: "o", ô: "o", õ: "o", ö: "o", ø: "o", Ù: "U", Ú: "U", Û: "U", Ü: "U", ù: "u", ú: "u", û: "u", ü: "u", Ý: "Y", ý: "y", ÿ: "y", Æ: "Ae", æ: "ae", Þ: "Th", þ: "th", ß: "ss", Ā: "A", Ă: "A", Ą: "A", ā: "a", ă: "a", ą: "a", Ć: "C", Ĉ: "C", Ċ: "C", Č: "C", ć: "c", ĉ: "c", ċ: "c", č: "c", Ď: "D", Đ: "D", ď: "d", đ: "d", Ē: "E", Ĕ: "E", Ė: "E", Ę: "E", Ě: "E", ē: "e", ĕ: "e", ė: "e", ę: "e", ě: "e", Ĝ: "G", Ğ: "G", Ġ: "G", Ģ: "G", ĝ: "g", ğ: "g", ġ: "g", ģ: "g", Ĥ: "H", Ħ: "H", ĥ: "h", ħ: "h", Ĩ: "I", Ī: "I", Ĭ: "I", Į: "I", İ: "I", ĩ: "i", ī: "i", ĭ: "i", į: "i", ı: "i", Ĵ: "J", ĵ: "j", Ķ: "K", ķ: "k", ĸ: "k", Ĺ: "L", Ļ: "L", Ľ: "L", Ŀ: "L", Ł: "L", ĺ: "l", ļ: "l", ľ: "l", ŀ: "l", ł: "l", Ń: "N", Ņ: "N", Ň: "N", Ŋ: "N", ń: "n", ņ: "n", ň: "n", ŋ: "n", Ō: "O", Ŏ: "O", Ő: "O", ō: "o", ŏ: "o", ő: "o", Ŕ: "R", Ŗ: "R", Ř: "R", ŕ: "r", ŗ: "r", ř: "r", Ś: "S", Ŝ: "S", Ş: "S", Š: "S", ś: "s", ŝ: "s", ş: "s", š: "s", Ţ: "T", Ť: "T", Ŧ: "T", ţ: "t", ť: "t", ŧ: "t", Ũ: "U", Ū: "U", Ŭ: "U", Ů: "U", Ű: "U", Ų: "U", ũ: "u", ū: "u", ŭ: "u", ů: "u", ű: "u", ų: "u", Ŵ: "W", ŵ: "w", Ŷ: "Y", ŷ: "y", Ÿ: "Y", Ź: "Z", Ż: "Z", Ž: "Z", ź: "z", ż: "z", ž: "z", Ĳ: "IJ", ĳ: "ij", Œ: "Oe", œ: "oe", ŉ: "'n", ſ: "s" }, zo2 = { "&": "&amp;", "<": "&lt;", ">": "&gt;", '"': "&quot;", "'": "&#39;" }, Ko2 = { "&amp;": "&", "&lt;": "<", "&gt;": ">", "&quot;": '"', "&#39;": "'" }, Yo2 = { "\\": "\\", "'": "'", "\n": "n", "\r": "r", "\u2028": "u2028", "\u2029": "u2029" }, Zo2 = parseFloat, Jo2 = parseInt, ls2 = typeof pe4 == "object" && pe4 && pe4.Object === Object && pe4, Xo = typeof self == "object" && self && self.Object === Object && self, k5 = ls2 || Xo || Function("return this")(), br3 = u4 && !u4.nodeType && u4, ht3 = br3 && true && C5 && !C5.nodeType && C5, ps2 = ht3 && ht3.exports === br3, Tr3 = ps2 && ls2.process, _n3 = function() {
      try {
        var h4 = ht3 && ht3.require && ht3.require("util").types;
        return h4 || Tr3 && Tr3.binding && Tr3.binding("util");
      } catch {
      }
    }(), ds2 = _n3 && _n3.isArrayBuffer, gs2 = _n3 && _n3.isDate, vs2 = _n3 && _n3.isMap, _s2 = _n3 && _n3.isRegExp, ms2 = _n3 && _n3.isSet, ws2 = _n3 && _n3.isTypedArray;
    function cn2(h4, g5, d3) {
      switch (d3.length) {
        case 0:
          return h4.call(g5);
        case 1:
          return h4.call(g5, d3[0]);
        case 2:
          return h4.call(g5, d3[0], d3[1]);
        case 3:
          return h4.call(g5, d3[0], d3[1], d3[2]);
      }
      return h4.apply(g5, d3);
    }
    function Qo2(h4, g5, d3, P3) {
      for (var S5 = -1, $4 = h4 == null ? 0 : h4.length; ++S5 < $4; ) {
        var X3 = h4[S5];
        g5(P3, X3, d3(X3), h4);
      }
      return P3;
    }
    function mn3(h4, g5) {
      for (var d3 = -1, P3 = h4 == null ? 0 : h4.length; ++d3 < P3 && g5(h4[d3], d3, h4) !== false; )
        ;
      return h4;
    }
    function Vo2(h4, g5) {
      for (var d3 = h4 == null ? 0 : h4.length; d3-- && g5(h4[d3], d3, h4) !== false; )
        ;
      return h4;
    }
    function Ps2(h4, g5) {
      for (var d3 = -1, P3 = h4 == null ? 0 : h4.length; ++d3 < P3; )
        if (!g5(h4[d3], d3, h4))
          return false;
      return true;
    }
    function jn3(h4, g5) {
      for (var d3 = -1, P3 = h4 == null ? 0 : h4.length, S5 = 0, $4 = []; ++d3 < P3; ) {
        var X3 = h4[d3];
        g5(X3, d3, h4) && ($4[S5++] = X3);
      }
      return $4;
    }
    function Ie4(h4, g5) {
      var d3 = h4 == null ? 0 : h4.length;
      return !!d3 && Rt4(h4, g5, 0) > -1;
    }
    function Lr2(h4, g5, d3) {
      for (var P3 = -1, S5 = h4 == null ? 0 : h4.length; ++P3 < S5; )
        if (d3(g5, h4[P3]))
          return true;
      return false;
    }
    function G4(h4, g5) {
      for (var d3 = -1, P3 = h4 == null ? 0 : h4.length, S5 = Array(P3); ++d3 < P3; )
        S5[d3] = g5(h4[d3], d3, h4);
      return S5;
    }
    function nt4(h4, g5) {
      for (var d3 = -1, P3 = g5.length, S5 = h4.length; ++d3 < P3; )
        h4[S5 + d3] = g5[d3];
      return h4;
    }
    function Dr3(h4, g5, d3, P3) {
      var S5 = -1, $4 = h4 == null ? 0 : h4.length;
      for (P3 && $4 && (d3 = h4[++S5]); ++S5 < $4; )
        d3 = g5(d3, h4[S5], S5, h4);
      return d3;
    }
    function ko2(h4, g5, d3, P3) {
      var S5 = h4 == null ? 0 : h4.length;
      for (P3 && S5 && (d3 = h4[--S5]); S5--; )
        d3 = g5(d3, h4[S5], S5, h4);
      return d3;
    }
    function Nr2(h4, g5) {
      for (var d3 = -1, P3 = h4 == null ? 0 : h4.length; ++d3 < P3; )
        if (g5(h4[d3], d3, h4))
          return true;
      return false;
    }
    var jo2 = Hr2("length");
    function nf(h4) {
      return h4.split("");
    }
    function tf(h4) {
      return h4.match(oo2) || [];
    }
    function As2(h4, g5, d3) {
      var P3;
      return d3(h4, function(S5, $4, X3) {
        if (g5(S5, $4, X3))
          return P3 = $4, false;
      }), P3;
    }
    function xe4(h4, g5, d3, P3) {
      for (var S5 = h4.length, $4 = d3 + (P3 ? 1 : -1); P3 ? $4-- : ++$4 < S5; )
        if (g5(h4[$4], $4, h4))
          return $4;
      return -1;
    }
    function Rt4(h4, g5, d3) {
      return g5 === g5 ? df(h4, g5, d3) : xe4(h4, Cs2, d3);
    }
    function ef(h4, g5, d3, P3) {
      for (var S5 = d3 - 1, $4 = h4.length; ++S5 < $4; )
        if (P3(h4[S5], g5))
          return S5;
      return -1;
    }
    function Cs2(h4) {
      return h4 !== h4;
    }
    function Is2(h4, g5) {
      var d3 = h4 == null ? 0 : h4.length;
      return d3 ? Ur2(h4, g5) / d3 : ge3;
    }
    function Hr2(h4) {
      return function(g5) {
        return g5 == null ? i3 : g5[h4];
      };
    }
    function $r2(h4) {
      return function(g5) {
        return h4 == null ? i3 : h4[g5];
      };
    }
    function xs2(h4, g5, d3, P3, S5) {
      return S5(h4, function($4, X3, M5) {
        d3 = P3 ? (P3 = false, $4) : g5(d3, $4, X3, M5);
      }), d3;
    }
    function rf(h4, g5) {
      var d3 = h4.length;
      for (h4.sort(g5); d3--; )
        h4[d3] = h4[d3].value;
      return h4;
    }
    function Ur2(h4, g5) {
      for (var d3, P3 = -1, S5 = h4.length; ++P3 < S5; ) {
        var $4 = g5(h4[P3]);
        $4 !== i3 && (d3 = d3 === i3 ? $4 : d3 + $4);
      }
      return d3;
    }
    function Wr2(h4, g5) {
      for (var d3 = -1, P3 = Array(h4); ++d3 < h4; )
        P3[d3] = g5(d3);
      return P3;
    }
    function sf(h4, g5) {
      return G4(g5, function(d3) {
        return [d3, h4[d3]];
      });
    }
    function Es2(h4) {
      return h4 && h4.slice(0, Rs2(h4) + 1).replace(xr2, "");
    }
    function hn2(h4) {
      return function(g5) {
        return h4(g5);
      };
    }
    function Fr2(h4, g5) {
      return G4(g5, function(d3) {
        return h4[d3];
      });
    }
    function kt4(h4, g5) {
      return h4.has(g5);
    }
    function ys2(h4, g5) {
      for (var d3 = -1, P3 = h4.length; ++d3 < P3 && Rt4(g5, h4[d3], 0) > -1; )
        ;
      return d3;
    }
    function Ss2(h4, g5) {
      for (var d3 = h4.length; d3-- && Rt4(g5, h4[d3], 0) > -1; )
        ;
      return d3;
    }
    function uf(h4, g5) {
      for (var d3 = h4.length, P3 = 0; d3--; )
        h4[d3] === g5 && ++P3;
      return P3;
    }
    var af = $r2(Go2), of = $r2(zo2);
    function ff(h4) {
      return "\\" + Yo2[h4];
    }
    function cf(h4, g5) {
      return h4 == null ? i3 : h4[g5];
    }
    function bt3(h4) {
      return Fo2.test(h4);
    }
    function hf(h4) {
      return Mo2.test(h4);
    }
    function lf(h4) {
      for (var g5, d3 = []; !(g5 = h4.next()).done; )
        d3.push(g5.value);
      return d3;
    }
    function Mr2(h4) {
      var g5 = -1, d3 = Array(h4.size);
      return h4.forEach(function(P3, S5) {
        d3[++g5] = [S5, P3];
      }), d3;
    }
    function Os2(h4, g5) {
      return function(d3) {
        return h4(g5(d3));
      };
    }
    function tt3(h4, g5) {
      for (var d3 = -1, P3 = h4.length, S5 = 0, $4 = []; ++d3 < P3; ) {
        var X3 = h4[d3];
        (X3 === g5 || X3 === At3) && (h4[d3] = At3, $4[S5++] = d3);
      }
      return $4;
    }
    function Ee2(h4) {
      var g5 = -1, d3 = Array(h4.size);
      return h4.forEach(function(P3) {
        d3[++g5] = P3;
      }), d3;
    }
    function pf(h4) {
      var g5 = -1, d3 = Array(h4.size);
      return h4.forEach(function(P3) {
        d3[++g5] = [P3, P3];
      }), d3;
    }
    function df(h4, g5, d3) {
      for (var P3 = d3 - 1, S5 = h4.length; ++P3 < S5; )
        if (h4[P3] === g5)
          return P3;
      return -1;
    }
    function gf(h4, g5, d3) {
      for (var P3 = d3 + 1; P3--; )
        if (h4[P3] === g5)
          return P3;
      return P3;
    }
    function Tt4(h4) {
      return bt3(h4) ? _f(h4) : jo2(h4);
    }
    function On3(h4) {
      return bt3(h4) ? mf(h4) : nf(h4);
    }
    function Rs2(h4) {
      for (var g5 = h4.length; g5-- && io2.test(h4.charAt(g5)); )
        ;
      return g5;
    }
    var vf = $r2(Ko2);
    function _f(h4) {
      for (var g5 = Rr3.lastIndex = 0; Rr3.test(h4); )
        ++g5;
      return g5;
    }
    function mf(h4) {
      return h4.match(Rr3) || [];
    }
    function wf(h4) {
      return h4.match(Wo2) || [];
    }
    var Pf = function h4(g5) {
      g5 = g5 == null ? k5 : Lt4.defaults(k5.Object(), g5, Lt4.pick(k5, qo2));
      var d3 = g5.Array, P3 = g5.Date, S5 = g5.Error, $4 = g5.Function, X3 = g5.Math, M5 = g5.Object, qr2 = g5.RegExp, Af = g5.String, wn2 = g5.TypeError, ye2 = d3.prototype, Cf = $4.prototype, Dt4 = M5.prototype, Se3 = g5["__core-js_shared__"], Oe4 = Cf.toString, W3 = Dt4.hasOwnProperty, If = 0, bs2 = function() {
        var n3 = /[^.]+$/.exec(Se3 && Se3.keys && Se3.keys.IE_PROTO || "");
        return n3 ? "Symbol(src)_1." + n3 : "";
      }(), Re3 = Dt4.toString, xf = Oe4.call(M5), Ef = k5._, yf = qr2("^" + Oe4.call(W3).replace(Ir3, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"), be2 = ps2 ? g5.Buffer : i3, et3 = g5.Symbol, Te3 = g5.Uint8Array, Ts2 = be2 ? be2.allocUnsafe : i3, Le3 = Os2(M5.getPrototypeOf, M5), Ls2 = M5.create, Ds2 = Dt4.propertyIsEnumerable, De3 = ye2.splice, Ns2 = et3 ? et3.isConcatSpreadable : i3, jt3 = et3 ? et3.iterator : i3, lt3 = et3 ? et3.toStringTag : i3, Ne3 = function() {
        try {
          var n3 = _t4(M5, "defineProperty");
          return n3({}, "", {}), n3;
        } catch {
        }
      }(), Sf = g5.clearTimeout !== k5.clearTimeout && g5.clearTimeout, Of = P3 && P3.now !== k5.Date.now && P3.now, Rf = g5.setTimeout !== k5.setTimeout && g5.setTimeout, He4 = X3.ceil, $e5 = X3.floor, Br2 = M5.getOwnPropertySymbols, bf = be2 ? be2.isBuffer : i3, Hs2 = g5.isFinite, Tf = ye2.join, Lf = Os2(M5.keys, M5), Q5 = X3.max, nn2 = X3.min, Df = P3.now, Nf = g5.parseInt, $s2 = X3.random, Hf = ye2.reverse, Gr2 = _t4(g5, "DataView"), ne4 = _t4(g5, "Map"), zr2 = _t4(g5, "Promise"), Nt3 = _t4(g5, "Set"), te4 = _t4(g5, "WeakMap"), ee3 = _t4(M5, "create"), Ue4 = te4 && new te4(), Ht3 = {}, $f = mt3(Gr2), Uf = mt3(ne4), Wf = mt3(zr2), Ff = mt3(Nt3), Mf = mt3(te4), We3 = et3 ? et3.prototype : i3, re2 = We3 ? We3.valueOf : i3, Us2 = We3 ? We3.toString : i3;
      function a2(n3) {
        if (K4(n3) && !O7(n3) && !(n3 instanceof N14)) {
          if (n3 instanceof Pn2)
            return n3;
          if (W3.call(n3, "__wrapped__"))
            return Wu(n3);
        }
        return new Pn2(n3);
      }
      var $t4 = function() {
        function n3() {
        }
        return function(t) {
          if (!z5(t))
            return {};
          if (Ls2)
            return Ls2(t);
          n3.prototype = t;
          var e = new n3();
          return n3.prototype = i3, e;
        };
      }();
      function Fe3() {
      }
      function Pn2(n3, t) {
        this.__wrapped__ = n3, this.__actions__ = [], this.__chain__ = !!t, this.__index__ = 0, this.__values__ = i3;
      }
      a2.templateSettings = { escape: ka, evaluate: ja, interpolate: Yi2, variable: "", imports: { _: a2 } }, a2.prototype = Fe3.prototype, a2.prototype.constructor = a2, Pn2.prototype = $t4(Fe3.prototype), Pn2.prototype.constructor = Pn2;
      function N14(n3) {
        this.__wrapped__ = n3, this.__actions__ = [], this.__dir__ = 1, this.__filtered__ = false, this.__iteratees__ = [], this.__takeCount__ = Hn2, this.__views__ = [];
      }
      function qf() {
        var n3 = new N14(this.__wrapped__);
        return n3.__actions__ = un2(this.__actions__), n3.__dir__ = this.__dir__, n3.__filtered__ = this.__filtered__, n3.__iteratees__ = un2(this.__iteratees__), n3.__takeCount__ = this.__takeCount__, n3.__views__ = un2(this.__views__), n3;
      }
      function Bf() {
        if (this.__filtered__) {
          var n3 = new N14(this);
          n3.__dir__ = -1, n3.__filtered__ = true;
        } else
          n3 = this.clone(), n3.__dir__ *= -1;
        return n3;
      }
      function Gf() {
        var n3 = this.__wrapped__.value(), t = this.__dir__, e = O7(n3), r2 = t < 0, s2 = e ? n3.length : 0, o = th(0, s2, this.__views__), f5 = o.start, c4 = o.end, l3 = c4 - f5, v3 = r2 ? c4 : f5 - 1, _5 = this.__iteratees__, m3 = _5.length, w5 = 0, A = nn2(l3, this.__takeCount__);
        if (!e || !r2 && s2 == l3 && A == l3)
          return au(n3, this.__actions__);
        var E5 = [];
        n:
          for (; l3-- && w5 < A; ) {
            v3 += t;
            for (var b6 = -1, y5 = n3[v3]; ++b6 < m3; ) {
              var L4 = _5[b6], H5 = L4.iteratee, dn = L4.type, sn2 = H5(y5);
              if (dn == Ha)
                y5 = sn2;
              else if (!sn2) {
                if (dn == qi2)
                  continue n;
                break n;
              }
            }
            E5[w5++] = y5;
          }
        return E5;
      }
      N14.prototype = $t4(Fe3.prototype), N14.prototype.constructor = N14;
      function pt3(n3) {
        var t = -1, e = n3 == null ? 0 : n3.length;
        for (this.clear(); ++t < e; ) {
          var r2 = n3[t];
          this.set(r2[0], r2[1]);
        }
      }
      function zf() {
        this.__data__ = ee3 ? ee3(null) : {}, this.size = 0;
      }
      function Kf(n3) {
        var t = this.has(n3) && delete this.__data__[n3];
        return this.size -= t ? 1 : 0, t;
      }
      function Yf(n3) {
        var t = this.__data__;
        if (ee3) {
          var e = t[n3];
          return e === Gt2 ? i3 : e;
        }
        return W3.call(t, n3) ? t[n3] : i3;
      }
      function Zf(n3) {
        var t = this.__data__;
        return ee3 ? t[n3] !== i3 : W3.call(t, n3);
      }
      function Jf(n3, t) {
        var e = this.__data__;
        return this.size += this.has(n3) ? 0 : 1, e[n3] = ee3 && t === i3 ? Gt2 : t, this;
      }
      pt3.prototype.clear = zf, pt3.prototype.delete = Kf, pt3.prototype.get = Yf, pt3.prototype.has = Zf, pt3.prototype.set = Jf;
      function Gn2(n3) {
        var t = -1, e = n3 == null ? 0 : n3.length;
        for (this.clear(); ++t < e; ) {
          var r2 = n3[t];
          this.set(r2[0], r2[1]);
        }
      }
      function Xf() {
        this.__data__ = [], this.size = 0;
      }
      function Qf(n3) {
        var t = this.__data__, e = Me5(t, n3);
        if (e < 0)
          return false;
        var r2 = t.length - 1;
        return e == r2 ? t.pop() : De3.call(t, e, 1), --this.size, true;
      }
      function Vf(n3) {
        var t = this.__data__, e = Me5(t, n3);
        return e < 0 ? i3 : t[e][1];
      }
      function kf(n3) {
        return Me5(this.__data__, n3) > -1;
      }
      function jf(n3, t) {
        var e = this.__data__, r2 = Me5(e, n3);
        return r2 < 0 ? (++this.size, e.push([n3, t])) : e[r2][1] = t, this;
      }
      Gn2.prototype.clear = Xf, Gn2.prototype.delete = Qf, Gn2.prototype.get = Vf, Gn2.prototype.has = kf, Gn2.prototype.set = jf;
      function zn2(n3) {
        var t = -1, e = n3 == null ? 0 : n3.length;
        for (this.clear(); ++t < e; ) {
          var r2 = n3[t];
          this.set(r2[0], r2[1]);
        }
      }
      function nc() {
        this.size = 0, this.__data__ = { hash: new pt3(), map: new (ne4 || Gn2)(), string: new pt3() };
      }
      function tc(n3) {
        var t = ke3(this, n3).delete(n3);
        return this.size -= t ? 1 : 0, t;
      }
      function ec(n3) {
        return ke3(this, n3).get(n3);
      }
      function rc(n3) {
        return ke3(this, n3).has(n3);
      }
      function ic(n3, t) {
        var e = ke3(this, n3), r2 = e.size;
        return e.set(n3, t), this.size += e.size == r2 ? 0 : 1, this;
      }
      zn2.prototype.clear = nc, zn2.prototype.delete = tc, zn2.prototype.get = ec, zn2.prototype.has = rc, zn2.prototype.set = ic;
      function dt4(n3) {
        var t = -1, e = n3 == null ? 0 : n3.length;
        for (this.__data__ = new zn2(); ++t < e; )
          this.add(n3[t]);
      }
      function sc(n3) {
        return this.__data__.set(n3, Gt2), this;
      }
      function uc(n3) {
        return this.__data__.has(n3);
      }
      dt4.prototype.add = dt4.prototype.push = sc, dt4.prototype.has = uc;
      function Rn3(n3) {
        var t = this.__data__ = new Gn2(n3);
        this.size = t.size;
      }
      function ac() {
        this.__data__ = new Gn2(), this.size = 0;
      }
      function oc(n3) {
        var t = this.__data__, e = t.delete(n3);
        return this.size = t.size, e;
      }
      function fc(n3) {
        return this.__data__.get(n3);
      }
      function cc(n3) {
        return this.__data__.has(n3);
      }
      function hc(n3, t) {
        var e = this.__data__;
        if (e instanceof Gn2) {
          var r2 = e.__data__;
          if (!ne4 || r2.length < I2 - 1)
            return r2.push([n3, t]), this.size = ++e.size, this;
          e = this.__data__ = new zn2(r2);
        }
        return e.set(n3, t), this.size = e.size, this;
      }
      Rn3.prototype.clear = ac, Rn3.prototype.delete = oc, Rn3.prototype.get = fc, Rn3.prototype.has = cc, Rn3.prototype.set = hc;
      function Ws2(n3, t) {
        var e = O7(n3), r2 = !e && wt4(n3), s2 = !e && !r2 && at3(n3), o = !e && !r2 && !s2 && Mt4(n3), f5 = e || r2 || s2 || o, c4 = f5 ? Wr2(n3.length, Af) : [], l3 = c4.length;
        for (var v3 in n3)
          (t || W3.call(n3, v3)) && !(f5 && (v3 == "length" || s2 && (v3 == "offset" || v3 == "parent") || o && (v3 == "buffer" || v3 == "byteLength" || v3 == "byteOffset") || Jn2(v3, l3))) && c4.push(v3);
        return c4;
      }
      function Fs2(n3) {
        var t = n3.length;
        return t ? n3[ti(0, t - 1)] : i3;
      }
      function lc(n3, t) {
        return je4(un2(n3), gt3(t, 0, n3.length));
      }
      function pc(n3) {
        return je4(un2(n3));
      }
      function Kr2(n3, t, e) {
        (e !== i3 && !bn2(n3[t], e) || e === i3 && !(t in n3)) && Kn3(n3, t, e);
      }
      function ie3(n3, t, e) {
        var r2 = n3[t];
        (!(W3.call(n3, t) && bn2(r2, e)) || e === i3 && !(t in n3)) && Kn3(n3, t, e);
      }
      function Me5(n3, t) {
        for (var e = n3.length; e--; )
          if (bn2(n3[e][0], t))
            return e;
        return -1;
      }
      function dc(n3, t, e, r2) {
        return rt4(n3, function(s2, o, f5) {
          t(r2, s2, e(s2), f5);
        }), r2;
      }
      function Ms2(n3, t) {
        return n3 && Un3(t, V2(t), n3);
      }
      function gc(n3, t) {
        return n3 && Un3(t, on3(t), n3);
      }
      function Kn3(n3, t, e) {
        t == "__proto__" && Ne3 ? Ne3(n3, t, { configurable: true, enumerable: true, value: e, writable: true }) : n3[t] = e;
      }
      function Yr2(n3, t) {
        for (var e = -1, r2 = t.length, s2 = d3(r2), o = n3 == null; ++e < r2; )
          s2[e] = o ? i3 : yi(n3, t[e]);
        return s2;
      }
      function gt3(n3, t, e) {
        return n3 === n3 && (e !== i3 && (n3 = n3 <= e ? n3 : e), t !== i3 && (n3 = n3 >= t ? n3 : t)), n3;
      }
      function An3(n3, t, e, r2, s2, o) {
        var f5, c4 = t & Ln2, l3 = t & Mn3, v3 = t & Ct3;
        if (e && (f5 = s2 ? e(n3, r2, s2, o) : e(n3)), f5 !== i3)
          return f5;
        if (!z5(n3))
          return n3;
        var _5 = O7(n3);
        if (_5) {
          if (f5 = rh(n3), !c4)
            return un2(n3, f5);
        } else {
          var m3 = tn2(n3), w5 = m3 == me2 || m3 == Bi2;
          if (at3(n3))
            return cu(n3, c4);
          if (m3 == Bn3 || m3 == yt4 || w5 && !s2) {
            if (f5 = l3 || w5 ? {} : Ru(n3), !c4)
              return l3 ? Yc(n3, gc(f5, n3)) : Kc(n3, Ms2(f5, n3));
          } else {
            if (!q4[m3])
              return s2 ? n3 : {};
            f5 = ih(n3, m3, c4);
          }
        }
        o || (o = new Rn3());
        var A = o.get(n3);
        if (A)
          return A;
        o.set(n3, f5), ia(n3) ? n3.forEach(function(y5) {
          f5.add(An3(y5, t, e, y5, n3, o));
        }) : ea(n3) && n3.forEach(function(y5, L4) {
          f5.set(L4, An3(y5, t, e, L4, n3, o));
        });
        var E5 = v3 ? l3 ? li : hi : l3 ? on3 : V2, b6 = _5 ? i3 : E5(n3);
        return mn3(b6 || n3, function(y5, L4) {
          b6 && (L4 = y5, y5 = n3[L4]), ie3(f5, L4, An3(y5, t, e, L4, n3, o));
        }), f5;
      }
      function vc(n3) {
        var t = V2(n3);
        return function(e) {
          return qs2(e, n3, t);
        };
      }
      function qs2(n3, t, e) {
        var r2 = e.length;
        if (n3 == null)
          return !r2;
        for (n3 = M5(n3); r2--; ) {
          var s2 = e[r2], o = t[s2], f5 = n3[s2];
          if (f5 === i3 && !(s2 in n3) || !o(f5))
            return false;
        }
        return true;
      }
      function Bs2(n3, t, e) {
        if (typeof n3 != "function")
          throw new wn2(F2);
        return he3(function() {
          n3.apply(i3, e);
        }, t);
      }
      function se3(n3, t, e, r2) {
        var s2 = -1, o = Ie4, f5 = true, c4 = n3.length, l3 = [], v3 = t.length;
        if (!c4)
          return l3;
        e && (t = G4(t, hn2(e))), r2 ? (o = Lr2, f5 = false) : t.length >= I2 && (o = kt4, f5 = false, t = new dt4(t));
        n:
          for (; ++s2 < c4; ) {
            var _5 = n3[s2], m3 = e == null ? _5 : e(_5);
            if (_5 = r2 || _5 !== 0 ? _5 : 0, f5 && m3 === m3) {
              for (var w5 = v3; w5--; )
                if (t[w5] === m3)
                  continue n;
              l3.push(_5);
            } else
              o(t, m3, r2) || l3.push(_5);
          }
        return l3;
      }
      var rt4 = gu($n3), Gs2 = gu(Jr2, true);
      function _c(n3, t) {
        var e = true;
        return rt4(n3, function(r2, s2, o) {
          return e = !!t(r2, s2, o), e;
        }), e;
      }
      function qe4(n3, t, e) {
        for (var r2 = -1, s2 = n3.length; ++r2 < s2; ) {
          var o = n3[r2], f5 = t(o);
          if (f5 != null && (c4 === i3 ? f5 === f5 && !pn2(f5) : e(f5, c4)))
            var c4 = f5, l3 = o;
        }
        return l3;
      }
      function mc(n3, t, e, r2) {
        var s2 = n3.length;
        for (e = R2(e), e < 0 && (e = -e > s2 ? 0 : s2 + e), r2 = r2 === i3 || r2 > s2 ? s2 : R2(r2), r2 < 0 && (r2 += s2), r2 = e > r2 ? 0 : ua(r2); e < r2; )
          n3[e++] = t;
        return n3;
      }
      function zs2(n3, t) {
        var e = [];
        return rt4(n3, function(r2, s2, o) {
          t(r2, s2, o) && e.push(r2);
        }), e;
      }
      function j7(n3, t, e, r2, s2) {
        var o = -1, f5 = n3.length;
        for (e || (e = uh), s2 || (s2 = []); ++o < f5; ) {
          var c4 = n3[o];
          t > 0 && e(c4) ? t > 1 ? j7(c4, t - 1, e, r2, s2) : nt4(s2, c4) : r2 || (s2[s2.length] = c4);
        }
        return s2;
      }
      var Zr2 = vu(), Ks2 = vu(true);
      function $n3(n3, t) {
        return n3 && Zr2(n3, t, V2);
      }
      function Jr2(n3, t) {
        return n3 && Ks2(n3, t, V2);
      }
      function Be3(n3, t) {
        return jn3(t, function(e) {
          return Xn3(n3[e]);
        });
      }
      function vt3(n3, t) {
        t = st3(t, n3);
        for (var e = 0, r2 = t.length; n3 != null && e < r2; )
          n3 = n3[Wn2(t[e++])];
        return e && e == r2 ? n3 : i3;
      }
      function Ys2(n3, t, e) {
        var r2 = t(n3);
        return O7(n3) ? r2 : nt4(r2, e(n3));
      }
      function en3(n3) {
        return n3 == null ? n3 === i3 ? Ka : Ga : lt3 && lt3 in M5(n3) ? nh(n3) : ph(n3);
      }
      function Xr2(n3, t) {
        return n3 > t;
      }
      function wc(n3, t) {
        return n3 != null && W3.call(n3, t);
      }
      function Pc(n3, t) {
        return n3 != null && t in M5(n3);
      }
      function Ac(n3, t, e) {
        return n3 >= nn2(t, e) && n3 < Q5(t, e);
      }
      function Qr2(n3, t, e) {
        for (var r2 = e ? Lr2 : Ie4, s2 = n3[0].length, o = n3.length, f5 = o, c4 = d3(o), l3 = 1 / 0, v3 = []; f5--; ) {
          var _5 = n3[f5];
          f5 && t && (_5 = G4(_5, hn2(t))), l3 = nn2(_5.length, l3), c4[f5] = !e && (t || s2 >= 120 && _5.length >= 120) ? new dt4(f5 && _5) : i3;
        }
        _5 = n3[0];
        var m3 = -1, w5 = c4[0];
        n:
          for (; ++m3 < s2 && v3.length < l3; ) {
            var A = _5[m3], E5 = t ? t(A) : A;
            if (A = e || A !== 0 ? A : 0, !(w5 ? kt4(w5, E5) : r2(v3, E5, e))) {
              for (f5 = o; --f5; ) {
                var b6 = c4[f5];
                if (!(b6 ? kt4(b6, E5) : r2(n3[f5], E5, e)))
                  continue n;
              }
              w5 && w5.push(E5), v3.push(A);
            }
          }
        return v3;
      }
      function Cc(n3, t, e, r2) {
        return $n3(n3, function(s2, o, f5) {
          t(r2, e(s2), o, f5);
        }), r2;
      }
      function ue3(n3, t, e) {
        t = st3(t, n3), n3 = Du(n3, t);
        var r2 = n3 == null ? n3 : n3[Wn2(In2(t))];
        return r2 == null ? i3 : cn2(r2, n3, e);
      }
      function Zs2(n3) {
        return K4(n3) && en3(n3) == yt4;
      }
      function Ic(n3) {
        return K4(n3) && en3(n3) == Vt4;
      }
      function xc(n3) {
        return K4(n3) && en3(n3) == Yt2;
      }
      function ae4(n3, t, e, r2, s2) {
        return n3 === t ? true : n3 == null || t == null || !K4(n3) && !K4(t) ? n3 !== n3 && t !== t : Ec(n3, t, e, r2, ae4, s2);
      }
      function Ec(n3, t, e, r2, s2, o) {
        var f5 = O7(n3), c4 = O7(t), l3 = f5 ? ve3 : tn2(n3), v3 = c4 ? ve3 : tn2(t);
        l3 = l3 == yt4 ? Bn3 : l3, v3 = v3 == yt4 ? Bn3 : v3;
        var _5 = l3 == Bn3, m3 = v3 == Bn3, w5 = l3 == v3;
        if (w5 && at3(n3)) {
          if (!at3(t))
            return false;
          f5 = true, _5 = false;
        }
        if (w5 && !_5)
          return o || (o = new Rn3()), f5 || Mt4(n3) ? yu(n3, t, e, r2, s2, o) : kc(n3, t, l3, e, r2, s2, o);
        if (!(e & It3)) {
          var A = _5 && W3.call(n3, "__wrapped__"), E5 = m3 && W3.call(t, "__wrapped__");
          if (A || E5) {
            var b6 = A ? n3.value() : n3, y5 = E5 ? t.value() : t;
            return o || (o = new Rn3()), s2(b6, y5, e, r2, o);
          }
        }
        return w5 ? (o || (o = new Rn3()), jc(n3, t, e, r2, s2, o)) : false;
      }
      function yc(n3) {
        return K4(n3) && tn2(n3) == yn2;
      }
      function Vr2(n3, t, e, r2) {
        var s2 = e.length, o = s2, f5 = !r2;
        if (n3 == null)
          return !o;
        for (n3 = M5(n3); s2--; ) {
          var c4 = e[s2];
          if (f5 && c4[2] ? c4[1] !== n3[c4[0]] : !(c4[0] in n3))
            return false;
        }
        for (; ++s2 < o; ) {
          c4 = e[s2];
          var l3 = c4[0], v3 = n3[l3], _5 = c4[1];
          if (f5 && c4[2]) {
            if (v3 === i3 && !(l3 in n3))
              return false;
          } else {
            var m3 = new Rn3();
            if (r2)
              var w5 = r2(v3, _5, l3, n3, t, m3);
            if (!(w5 === i3 ? ae4(_5, v3, It3 | de4, r2, m3) : w5))
              return false;
          }
        }
        return true;
      }
      function Js2(n3) {
        if (!z5(n3) || oh(n3))
          return false;
        var t = Xn3(n3) ? yf : go2;
        return t.test(mt3(n3));
      }
      function Sc(n3) {
        return K4(n3) && en3(n3) == Jt2;
      }
      function Oc(n3) {
        return K4(n3) && tn2(n3) == Sn2;
      }
      function Rc(n3) {
        return K4(n3) && sr3(n3.length) && !!B2[en3(n3)];
      }
      function Xs2(n3) {
        return typeof n3 == "function" ? n3 : n3 == null ? fn : typeof n3 == "object" ? O7(n3) ? ks2(n3[0], n3[1]) : Vs2(n3) : _a(n3);
      }
      function kr2(n3) {
        if (!ce4(n3))
          return Lf(n3);
        var t = [];
        for (var e in M5(n3))
          W3.call(n3, e) && e != "constructor" && t.push(e);
        return t;
      }
      function bc(n3) {
        if (!z5(n3))
          return lh(n3);
        var t = ce4(n3), e = [];
        for (var r2 in n3)
          r2 == "constructor" && (t || !W3.call(n3, r2)) || e.push(r2);
        return e;
      }
      function jr2(n3, t) {
        return n3 < t;
      }
      function Qs2(n3, t) {
        var e = -1, r2 = an2(n3) ? d3(n3.length) : [];
        return rt4(n3, function(s2, o, f5) {
          r2[++e] = t(s2, o, f5);
        }), r2;
      }
      function Vs2(n3) {
        var t = di(n3);
        return t.length == 1 && t[0][2] ? Tu(t[0][0], t[0][1]) : function(e) {
          return e === n3 || Vr2(e, n3, t);
        };
      }
      function ks2(n3, t) {
        return vi(n3) && bu(t) ? Tu(Wn2(n3), t) : function(e) {
          var r2 = yi(e, n3);
          return r2 === i3 && r2 === t ? Si2(e, n3) : ae4(t, r2, It3 | de4);
        };
      }
      function Ge4(n3, t, e, r2, s2) {
        n3 !== t && Zr2(t, function(o, f5) {
          if (s2 || (s2 = new Rn3()), z5(o))
            Tc(n3, t, f5, e, Ge4, r2, s2);
          else {
            var c4 = r2 ? r2(mi(n3, f5), o, f5 + "", n3, t, s2) : i3;
            c4 === i3 && (c4 = o), Kr2(n3, f5, c4);
          }
        }, on3);
      }
      function Tc(n3, t, e, r2, s2, o, f5) {
        var c4 = mi(n3, e), l3 = mi(t, e), v3 = f5.get(l3);
        if (v3) {
          Kr2(n3, e, v3);
          return;
        }
        var _5 = o ? o(c4, l3, e + "", n3, t, f5) : i3, m3 = _5 === i3;
        if (m3) {
          var w5 = O7(l3), A = !w5 && at3(l3), E5 = !w5 && !A && Mt4(l3);
          _5 = l3, w5 || A || E5 ? O7(c4) ? _5 = c4 : Y2(c4) ? _5 = un2(c4) : A ? (m3 = false, _5 = cu(l3, true)) : E5 ? (m3 = false, _5 = hu(l3, true)) : _5 = [] : le3(l3) || wt4(l3) ? (_5 = c4, wt4(c4) ? _5 = aa(c4) : (!z5(c4) || Xn3(c4)) && (_5 = Ru(l3))) : m3 = false;
        }
        m3 && (f5.set(l3, _5), s2(_5, l3, r2, o, f5), f5.delete(l3)), Kr2(n3, e, _5);
      }
      function js2(n3, t) {
        var e = n3.length;
        if (e)
          return t += t < 0 ? e : 0, Jn2(t, e) ? n3[t] : i3;
      }
      function nu(n3, t, e) {
        t.length ? t = G4(t, function(o) {
          return O7(o) ? function(f5) {
            return vt3(f5, o.length === 1 ? o[0] : o);
          } : o;
        }) : t = [fn];
        var r2 = -1;
        t = G4(t, hn2(x5()));
        var s2 = Qs2(n3, function(o, f5, c4) {
          var l3 = G4(t, function(v3) {
            return v3(o);
          });
          return { criteria: l3, index: ++r2, value: o };
        });
        return rf(s2, function(o, f5) {
          return zc(o, f5, e);
        });
      }
      function Lc(n3, t) {
        return tu(n3, t, function(e, r2) {
          return Si2(n3, r2);
        });
      }
      function tu(n3, t, e) {
        for (var r2 = -1, s2 = t.length, o = {}; ++r2 < s2; ) {
          var f5 = t[r2], c4 = vt3(n3, f5);
          e(c4, f5) && oe4(o, st3(f5, n3), c4);
        }
        return o;
      }
      function Dc(n3) {
        return function(t) {
          return vt3(t, n3);
        };
      }
      function ni(n3, t, e, r2) {
        var s2 = r2 ? ef : Rt4, o = -1, f5 = t.length, c4 = n3;
        for (n3 === t && (t = un2(t)), e && (c4 = G4(n3, hn2(e))); ++o < f5; )
          for (var l3 = 0, v3 = t[o], _5 = e ? e(v3) : v3; (l3 = s2(c4, _5, l3, r2)) > -1; )
            c4 !== n3 && De3.call(c4, l3, 1), De3.call(n3, l3, 1);
        return n3;
      }
      function eu(n3, t) {
        for (var e = n3 ? t.length : 0, r2 = e - 1; e--; ) {
          var s2 = t[e];
          if (e == r2 || s2 !== o) {
            var o = s2;
            Jn2(s2) ? De3.call(n3, s2, 1) : ii(n3, s2);
          }
        }
        return n3;
      }
      function ti(n3, t) {
        return n3 + $e5($s2() * (t - n3 + 1));
      }
      function Nc(n3, t, e, r2) {
        for (var s2 = -1, o = Q5(He4((t - n3) / (e || 1)), 0), f5 = d3(o); o--; )
          f5[r2 ? o : ++s2] = n3, n3 += e;
        return f5;
      }
      function ei(n3, t) {
        var e = "";
        if (!n3 || t < 1 || t > kn3)
          return e;
        do
          t % 2 && (e += n3), t = $e5(t / 2), t && (n3 += n3);
        while (t);
        return e;
      }
      function T2(n3, t) {
        return wi(Lu(n3, t, fn), n3 + "");
      }
      function Hc(n3) {
        return Fs2(qt3(n3));
      }
      function $c(n3, t) {
        var e = qt3(n3);
        return je4(e, gt3(t, 0, e.length));
      }
      function oe4(n3, t, e, r2) {
        if (!z5(n3))
          return n3;
        t = st3(t, n3);
        for (var s2 = -1, o = t.length, f5 = o - 1, c4 = n3; c4 != null && ++s2 < o; ) {
          var l3 = Wn2(t[s2]), v3 = e;
          if (l3 === "__proto__" || l3 === "constructor" || l3 === "prototype")
            return n3;
          if (s2 != f5) {
            var _5 = c4[l3];
            v3 = r2 ? r2(_5, l3, c4) : i3, v3 === i3 && (v3 = z5(_5) ? _5 : Jn2(t[s2 + 1]) ? [] : {});
          }
          ie3(c4, l3, v3), c4 = c4[l3];
        }
        return n3;
      }
      var ru = Ue4 ? function(n3, t) {
        return Ue4.set(n3, t), n3;
      } : fn, Uc = Ne3 ? function(n3, t) {
        return Ne3(n3, "toString", { configurable: true, enumerable: false, value: Ri(t), writable: true });
      } : fn;
      function Wc(n3) {
        return je4(qt3(n3));
      }
      function Cn3(n3, t, e) {
        var r2 = -1, s2 = n3.length;
        t < 0 && (t = -t > s2 ? 0 : s2 + t), e = e > s2 ? s2 : e, e < 0 && (e += s2), s2 = t > e ? 0 : e - t >>> 0, t >>>= 0;
        for (var o = d3(s2); ++r2 < s2; )
          o[r2] = n3[r2 + t];
        return o;
      }
      function Fc(n3, t) {
        var e;
        return rt4(n3, function(r2, s2, o) {
          return e = t(r2, s2, o), !e;
        }), !!e;
      }
      function ze4(n3, t, e) {
        var r2 = 0, s2 = n3 == null ? r2 : n3.length;
        if (typeof t == "number" && t === t && s2 <= Fa) {
          for (; r2 < s2; ) {
            var o = r2 + s2 >>> 1, f5 = n3[o];
            f5 !== null && !pn2(f5) && (e ? f5 <= t : f5 < t) ? r2 = o + 1 : s2 = o;
          }
          return s2;
        }
        return ri(n3, t, fn, e);
      }
      function ri(n3, t, e, r2) {
        var s2 = 0, o = n3 == null ? 0 : n3.length;
        if (o === 0)
          return 0;
        t = e(t);
        for (var f5 = t !== t, c4 = t === null, l3 = pn2(t), v3 = t === i3; s2 < o; ) {
          var _5 = $e5((s2 + o) / 2), m3 = e(n3[_5]), w5 = m3 !== i3, A = m3 === null, E5 = m3 === m3, b6 = pn2(m3);
          if (f5)
            var y5 = r2 || E5;
          else
            v3 ? y5 = E5 && (r2 || w5) : c4 ? y5 = E5 && w5 && (r2 || !A) : l3 ? y5 = E5 && w5 && !A && (r2 || !b6) : A || b6 ? y5 = false : y5 = r2 ? m3 <= t : m3 < t;
          y5 ? s2 = _5 + 1 : o = _5;
        }
        return nn2(o, Wa);
      }
      function iu(n3, t) {
        for (var e = -1, r2 = n3.length, s2 = 0, o = []; ++e < r2; ) {
          var f5 = n3[e], c4 = t ? t(f5) : f5;
          if (!e || !bn2(c4, l3)) {
            var l3 = c4;
            o[s2++] = f5 === 0 ? 0 : f5;
          }
        }
        return o;
      }
      function su(n3) {
        return typeof n3 == "number" ? n3 : pn2(n3) ? ge3 : +n3;
      }
      function ln(n3) {
        if (typeof n3 == "string")
          return n3;
        if (O7(n3))
          return G4(n3, ln) + "";
        if (pn2(n3))
          return Us2 ? Us2.call(n3) : "";
        var t = n3 + "";
        return t == "0" && 1 / n3 == -ct4 ? "-0" : t;
      }
      function it4(n3, t, e) {
        var r2 = -1, s2 = Ie4, o = n3.length, f5 = true, c4 = [], l3 = c4;
        if (e)
          f5 = false, s2 = Lr2;
        else if (o >= I2) {
          var v3 = t ? null : Qc(n3);
          if (v3)
            return Ee2(v3);
          f5 = false, s2 = kt4, l3 = new dt4();
        } else
          l3 = t ? [] : c4;
        n:
          for (; ++r2 < o; ) {
            var _5 = n3[r2], m3 = t ? t(_5) : _5;
            if (_5 = e || _5 !== 0 ? _5 : 0, f5 && m3 === m3) {
              for (var w5 = l3.length; w5--; )
                if (l3[w5] === m3)
                  continue n;
              t && l3.push(m3), c4.push(_5);
            } else
              s2(l3, m3, e) || (l3 !== c4 && l3.push(m3), c4.push(_5));
          }
        return c4;
      }
      function ii(n3, t) {
        return t = st3(t, n3), n3 = Du(n3, t), n3 == null || delete n3[Wn2(In2(t))];
      }
      function uu(n3, t, e, r2) {
        return oe4(n3, t, e(vt3(n3, t)), r2);
      }
      function Ke3(n3, t, e, r2) {
        for (var s2 = n3.length, o = r2 ? s2 : -1; (r2 ? o-- : ++o < s2) && t(n3[o], o, n3); )
          ;
        return e ? Cn3(n3, r2 ? 0 : o, r2 ? o + 1 : s2) : Cn3(n3, r2 ? o + 1 : 0, r2 ? s2 : o);
      }
      function au(n3, t) {
        var e = n3;
        return e instanceof N14 && (e = e.value()), Dr3(t, function(r2, s2) {
          return s2.func.apply(s2.thisArg, nt4([r2], s2.args));
        }, e);
      }
      function si(n3, t, e) {
        var r2 = n3.length;
        if (r2 < 2)
          return r2 ? it4(n3[0]) : [];
        for (var s2 = -1, o = d3(r2); ++s2 < r2; )
          for (var f5 = n3[s2], c4 = -1; ++c4 < r2; )
            c4 != s2 && (o[s2] = se3(o[s2] || f5, n3[c4], t, e));
        return it4(j7(o, 1), t, e);
      }
      function ou(n3, t, e) {
        for (var r2 = -1, s2 = n3.length, o = t.length, f5 = {}; ++r2 < s2; ) {
          var c4 = r2 < o ? t[r2] : i3;
          e(f5, n3[r2], c4);
        }
        return f5;
      }
      function ui(n3) {
        return Y2(n3) ? n3 : [];
      }
      function ai(n3) {
        return typeof n3 == "function" ? n3 : fn;
      }
      function st3(n3, t) {
        return O7(n3) ? n3 : vi(n3, t) ? [n3] : Uu(U5(n3));
      }
      var Mc = T2;
      function ut4(n3, t, e) {
        var r2 = n3.length;
        return e = e === i3 ? r2 : e, !t && e >= r2 ? n3 : Cn3(n3, t, e);
      }
      var fu = Sf || function(n3) {
        return k5.clearTimeout(n3);
      };
      function cu(n3, t) {
        if (t)
          return n3.slice();
        var e = n3.length, r2 = Ts2 ? Ts2(e) : new n3.constructor(e);
        return n3.copy(r2), r2;
      }
      function oi(n3) {
        var t = new n3.constructor(n3.byteLength);
        return new Te3(t).set(new Te3(n3)), t;
      }
      function qc(n3, t) {
        var e = t ? oi(n3.buffer) : n3.buffer;
        return new n3.constructor(e, n3.byteOffset, n3.byteLength);
      }
      function Bc(n3) {
        var t = new n3.constructor(n3.source, Zi2.exec(n3));
        return t.lastIndex = n3.lastIndex, t;
      }
      function Gc(n3) {
        return re2 ? M5(re2.call(n3)) : {};
      }
      function hu(n3, t) {
        var e = t ? oi(n3.buffer) : n3.buffer;
        return new n3.constructor(e, n3.byteOffset, n3.length);
      }
      function lu(n3, t) {
        if (n3 !== t) {
          var e = n3 !== i3, r2 = n3 === null, s2 = n3 === n3, o = pn2(n3), f5 = t !== i3, c4 = t === null, l3 = t === t, v3 = pn2(t);
          if (!c4 && !v3 && !o && n3 > t || o && f5 && l3 && !c4 && !v3 || r2 && f5 && l3 || !e && l3 || !s2)
            return 1;
          if (!r2 && !o && !v3 && n3 < t || v3 && e && s2 && !r2 && !o || c4 && e && s2 || !f5 && s2 || !l3)
            return -1;
        }
        return 0;
      }
      function zc(n3, t, e) {
        for (var r2 = -1, s2 = n3.criteria, o = t.criteria, f5 = s2.length, c4 = e.length; ++r2 < f5; ) {
          var l3 = lu(s2[r2], o[r2]);
          if (l3) {
            if (r2 >= c4)
              return l3;
            var v3 = e[r2];
            return l3 * (v3 == "desc" ? -1 : 1);
          }
        }
        return n3.index - t.index;
      }
      function pu(n3, t, e, r2) {
        for (var s2 = -1, o = n3.length, f5 = e.length, c4 = -1, l3 = t.length, v3 = Q5(o - f5, 0), _5 = d3(l3 + v3), m3 = !r2; ++c4 < l3; )
          _5[c4] = t[c4];
        for (; ++s2 < f5; )
          (m3 || s2 < o) && (_5[e[s2]] = n3[s2]);
        for (; v3--; )
          _5[c4++] = n3[s2++];
        return _5;
      }
      function du(n3, t, e, r2) {
        for (var s2 = -1, o = n3.length, f5 = -1, c4 = e.length, l3 = -1, v3 = t.length, _5 = Q5(o - c4, 0), m3 = d3(_5 + v3), w5 = !r2; ++s2 < _5; )
          m3[s2] = n3[s2];
        for (var A = s2; ++l3 < v3; )
          m3[A + l3] = t[l3];
        for (; ++f5 < c4; )
          (w5 || s2 < o) && (m3[A + e[f5]] = n3[s2++]);
        return m3;
      }
      function un2(n3, t) {
        var e = -1, r2 = n3.length;
        for (t || (t = d3(r2)); ++e < r2; )
          t[e] = n3[e];
        return t;
      }
      function Un3(n3, t, e, r2) {
        var s2 = !e;
        e || (e = {});
        for (var o = -1, f5 = t.length; ++o < f5; ) {
          var c4 = t[o], l3 = r2 ? r2(e[c4], n3[c4], c4, e, n3) : i3;
          l3 === i3 && (l3 = n3[c4]), s2 ? Kn3(e, c4, l3) : ie3(e, c4, l3);
        }
        return e;
      }
      function Kc(n3, t) {
        return Un3(n3, gi(n3), t);
      }
      function Yc(n3, t) {
        return Un3(n3, Su(n3), t);
      }
      function Ye4(n3, t) {
        return function(e, r2) {
          var s2 = O7(e) ? Qo2 : dc, o = t ? t() : {};
          return s2(e, n3, x5(r2, 2), o);
        };
      }
      function Ut4(n3) {
        return T2(function(t, e) {
          var r2 = -1, s2 = e.length, o = s2 > 1 ? e[s2 - 1] : i3, f5 = s2 > 2 ? e[2] : i3;
          for (o = n3.length > 3 && typeof o == "function" ? (s2--, o) : i3, f5 && rn3(e[0], e[1], f5) && (o = s2 < 3 ? i3 : o, s2 = 1), t = M5(t); ++r2 < s2; ) {
            var c4 = e[r2];
            c4 && n3(t, c4, r2, o);
          }
          return t;
        });
      }
      function gu(n3, t) {
        return function(e, r2) {
          if (e == null)
            return e;
          if (!an2(e))
            return n3(e, r2);
          for (var s2 = e.length, o = t ? s2 : -1, f5 = M5(e); (t ? o-- : ++o < s2) && r2(f5[o], o, f5) !== false; )
            ;
          return e;
        };
      }
      function vu(n3) {
        return function(t, e, r2) {
          for (var s2 = -1, o = M5(t), f5 = r2(t), c4 = f5.length; c4--; ) {
            var l3 = f5[n3 ? c4 : ++s2];
            if (e(o[l3], l3, o) === false)
              break;
          }
          return t;
        };
      }
      function Zc(n3, t, e) {
        var r2 = t & vn3, s2 = fe3(n3);
        function o() {
          var f5 = this && this !== k5 && this instanceof o ? s2 : n3;
          return f5.apply(r2 ? e : this, arguments);
        }
        return o;
      }
      function _u(n3) {
        return function(t) {
          t = U5(t);
          var e = bt3(t) ? On3(t) : i3, r2 = e ? e[0] : t.charAt(0), s2 = e ? ut4(e, 1).join("") : t.slice(1);
          return r2[n3]() + s2;
        };
      }
      function Wt2(n3) {
        return function(t) {
          return Dr3(ga(da(t).replace($o2, "")), n3, "");
        };
      }
      function fe3(n3) {
        return function() {
          var t = arguments;
          switch (t.length) {
            case 0:
              return new n3();
            case 1:
              return new n3(t[0]);
            case 2:
              return new n3(t[0], t[1]);
            case 3:
              return new n3(t[0], t[1], t[2]);
            case 4:
              return new n3(t[0], t[1], t[2], t[3]);
            case 5:
              return new n3(t[0], t[1], t[2], t[3], t[4]);
            case 6:
              return new n3(t[0], t[1], t[2], t[3], t[4], t[5]);
            case 7:
              return new n3(t[0], t[1], t[2], t[3], t[4], t[5], t[6]);
          }
          var e = $t4(n3.prototype), r2 = n3.apply(e, t);
          return z5(r2) ? r2 : e;
        };
      }
      function Jc(n3, t, e) {
        var r2 = fe3(n3);
        function s2() {
          for (var o = arguments.length, f5 = d3(o), c4 = o, l3 = Ft4(s2); c4--; )
            f5[c4] = arguments[c4];
          var v3 = o < 3 && f5[0] !== l3 && f5[o - 1] !== l3 ? [] : tt3(f5, l3);
          if (o -= v3.length, o < e)
            return Cu(n3, t, Ze5, s2.placeholder, i3, f5, v3, i3, i3, e - o);
          var _5 = this && this !== k5 && this instanceof s2 ? r2 : n3;
          return cn2(_5, this, f5);
        }
        return s2;
      }
      function mu(n3) {
        return function(t, e, r2) {
          var s2 = M5(t);
          if (!an2(t)) {
            var o = x5(e, 3);
            t = V2(t), e = function(c4) {
              return o(s2[c4], c4, s2);
            };
          }
          var f5 = n3(t, e, r2);
          return f5 > -1 ? s2[o ? t[f5] : f5] : i3;
        };
      }
      function wu(n3) {
        return Zn2(function(t) {
          var e = t.length, r2 = e, s2 = Pn2.prototype.thru;
          for (n3 && t.reverse(); r2--; ) {
            var o = t[r2];
            if (typeof o != "function")
              throw new wn2(F2);
            if (s2 && !f5 && Ve4(o) == "wrapper")
              var f5 = new Pn2([], true);
          }
          for (r2 = f5 ? r2 : e; ++r2 < e; ) {
            o = t[r2];
            var c4 = Ve4(o), l3 = c4 == "wrapper" ? pi(o) : i3;
            l3 && _i(l3[0]) && l3[1] == (qn3 | Dn2 | Nn2 | zt4) && !l3[4].length && l3[9] == 1 ? f5 = f5[Ve4(l3[0])].apply(f5, l3[3]) : f5 = o.length == 1 && _i(o) ? f5[c4]() : f5.thru(o);
          }
          return function() {
            var v3 = arguments, _5 = v3[0];
            if (f5 && v3.length == 1 && O7(_5))
              return f5.plant(_5).value();
            for (var m3 = 0, w5 = e ? t[m3].apply(this, v3) : _5; ++m3 < e; )
              w5 = t[m3].call(this, w5);
            return w5;
          };
        });
      }
      function Ze5(n3, t, e, r2, s2, o, f5, c4, l3, v3) {
        var _5 = t & qn3, m3 = t & vn3, w5 = t & ft4, A = t & (Dn2 | xt4), E5 = t & pr3, b6 = w5 ? i3 : fe3(n3);
        function y5() {
          for (var L4 = arguments.length, H5 = d3(L4), dn = L4; dn--; )
            H5[dn] = arguments[dn];
          if (A)
            var sn2 = Ft4(y5), gn2 = uf(H5, sn2);
          if (r2 && (H5 = pu(H5, r2, s2, A)), o && (H5 = du(H5, o, f5, A)), L4 -= gn2, A && L4 < v3) {
            var Z4 = tt3(H5, sn2);
            return Cu(n3, t, Ze5, y5.placeholder, e, H5, Z4, c4, l3, v3 - L4);
          }
          var Tn2 = m3 ? e : this, Vn3 = w5 ? Tn2[n3] : n3;
          return L4 = H5.length, c4 ? H5 = dh(H5, c4) : E5 && L4 > 1 && H5.reverse(), _5 && l3 < L4 && (H5.length = l3), this && this !== k5 && this instanceof y5 && (Vn3 = b6 || fe3(Vn3)), Vn3.apply(Tn2, H5);
        }
        return y5;
      }
      function Pu(n3, t) {
        return function(e, r2) {
          return Cc(e, n3, t(r2), {});
        };
      }
      function Je4(n3, t) {
        return function(e, r2) {
          var s2;
          if (e === i3 && r2 === i3)
            return t;
          if (e !== i3 && (s2 = e), r2 !== i3) {
            if (s2 === i3)
              return r2;
            typeof e == "string" || typeof r2 == "string" ? (e = ln(e), r2 = ln(r2)) : (e = su(e), r2 = su(r2)), s2 = n3(e, r2);
          }
          return s2;
        };
      }
      function fi(n3) {
        return Zn2(function(t) {
          return t = G4(t, hn2(x5())), T2(function(e) {
            var r2 = this;
            return n3(t, function(s2) {
              return cn2(s2, r2, e);
            });
          });
        });
      }
      function Xe4(n3, t) {
        t = t === i3 ? " " : ln(t);
        var e = t.length;
        if (e < 2)
          return e ? ei(t, n3) : t;
        var r2 = ei(t, He4(n3 / Tt4(t)));
        return bt3(t) ? ut4(On3(r2), 0, n3).join("") : r2.slice(0, n3);
      }
      function Xc(n3, t, e, r2) {
        var s2 = t & vn3, o = fe3(n3);
        function f5() {
          for (var c4 = -1, l3 = arguments.length, v3 = -1, _5 = r2.length, m3 = d3(_5 + l3), w5 = this && this !== k5 && this instanceof f5 ? o : n3; ++v3 < _5; )
            m3[v3] = r2[v3];
          for (; l3--; )
            m3[v3++] = arguments[++c4];
          return cn2(w5, s2 ? e : this, m3);
        }
        return f5;
      }
      function Au(n3) {
        return function(t, e, r2) {
          return r2 && typeof r2 != "number" && rn3(t, e, r2) && (e = r2 = i3), t = Qn2(t), e === i3 ? (e = t, t = 0) : e = Qn2(e), r2 = r2 === i3 ? t < e ? 1 : -1 : Qn2(r2), Nc(t, e, r2, n3);
        };
      }
      function Qe4(n3) {
        return function(t, e) {
          return typeof t == "string" && typeof e == "string" || (t = xn2(t), e = xn2(e)), n3(t, e);
        };
      }
      function Cu(n3, t, e, r2, s2, o, f5, c4, l3, v3) {
        var _5 = t & Dn2, m3 = _5 ? f5 : i3, w5 = _5 ? i3 : f5, A = _5 ? o : i3, E5 = _5 ? i3 : o;
        t |= _5 ? Nn2 : Et3, t &= ~(_5 ? Et3 : Nn2), t & Mi2 || (t &= ~(vn3 | ft4));
        var b6 = [n3, t, s2, A, m3, E5, w5, c4, l3, v3], y5 = e.apply(i3, b6);
        return _i(n3) && Nu(y5, b6), y5.placeholder = r2, Hu(y5, n3, t);
      }
      function ci(n3) {
        var t = X3[n3];
        return function(e, r2) {
          if (e = xn2(e), r2 = r2 == null ? 0 : nn2(R2(r2), 292), r2 && Hs2(e)) {
            var s2 = (U5(e) + "e").split("e"), o = t(s2[0] + "e" + (+s2[1] + r2));
            return s2 = (U5(o) + "e").split("e"), +(s2[0] + "e" + (+s2[1] - r2));
          }
          return t(e);
        };
      }
      var Qc = Nt3 && 1 / Ee2(new Nt3([, -0]))[1] == ct4 ? function(n3) {
        return new Nt3(n3);
      } : Li2;
      function Iu(n3) {
        return function(t) {
          var e = tn2(t);
          return e == yn2 ? Mr2(t) : e == Sn2 ? pf(t) : sf(t, n3(t));
        };
      }
      function Yn3(n3, t, e, r2, s2, o, f5, c4) {
        var l3 = t & ft4;
        if (!l3 && typeof n3 != "function")
          throw new wn2(F2);
        var v3 = r2 ? r2.length : 0;
        if (v3 || (t &= ~(Nn2 | Et3), r2 = s2 = i3), f5 = f5 === i3 ? f5 : Q5(R2(f5), 0), c4 = c4 === i3 ? c4 : R2(c4), v3 -= s2 ? s2.length : 0, t & Et3) {
          var _5 = r2, m3 = s2;
          r2 = s2 = i3;
        }
        var w5 = l3 ? i3 : pi(n3), A = [n3, t, e, r2, s2, _5, m3, o, f5, c4];
        if (w5 && hh(A, w5), n3 = A[0], t = A[1], e = A[2], r2 = A[3], s2 = A[4], c4 = A[9] = A[9] === i3 ? l3 ? 0 : n3.length : Q5(A[9] - v3, 0), !c4 && t & (Dn2 | xt4) && (t &= ~(Dn2 | xt4)), !t || t == vn3)
          var E5 = Zc(n3, t, e);
        else
          t == Dn2 || t == xt4 ? E5 = Jc(n3, t, c4) : (t == Nn2 || t == (vn3 | Nn2)) && !s2.length ? E5 = Xc(n3, t, e, r2) : E5 = Ze5.apply(i3, A);
        var b6 = w5 ? ru : Nu;
        return Hu(b6(E5, A), n3, t);
      }
      function xu(n3, t, e, r2) {
        return n3 === i3 || bn2(n3, Dt4[e]) && !W3.call(r2, e) ? t : n3;
      }
      function Eu(n3, t, e, r2, s2, o) {
        return z5(n3) && z5(t) && (o.set(t, n3), Ge4(n3, t, i3, Eu, o), o.delete(t)), n3;
      }
      function Vc(n3) {
        return le3(n3) ? i3 : n3;
      }
      function yu(n3, t, e, r2, s2, o) {
        var f5 = e & It3, c4 = n3.length, l3 = t.length;
        if (c4 != l3 && !(f5 && l3 > c4))
          return false;
        var v3 = o.get(n3), _5 = o.get(t);
        if (v3 && _5)
          return v3 == t && _5 == n3;
        var m3 = -1, w5 = true, A = e & de4 ? new dt4() : i3;
        for (o.set(n3, t), o.set(t, n3); ++m3 < c4; ) {
          var E5 = n3[m3], b6 = t[m3];
          if (r2)
            var y5 = f5 ? r2(b6, E5, m3, t, n3, o) : r2(E5, b6, m3, n3, t, o);
          if (y5 !== i3) {
            if (y5)
              continue;
            w5 = false;
            break;
          }
          if (A) {
            if (!Nr2(t, function(L4, H5) {
              if (!kt4(A, H5) && (E5 === L4 || s2(E5, L4, e, r2, o)))
                return A.push(H5);
            })) {
              w5 = false;
              break;
            }
          } else if (!(E5 === b6 || s2(E5, b6, e, r2, o))) {
            w5 = false;
            break;
          }
        }
        return o.delete(n3), o.delete(t), w5;
      }
      function kc(n3, t, e, r2, s2, o, f5) {
        switch (e) {
          case St4:
            if (n3.byteLength != t.byteLength || n3.byteOffset != t.byteOffset)
              return false;
            n3 = n3.buffer, t = t.buffer;
          case Vt4:
            return !(n3.byteLength != t.byteLength || !o(new Te3(n3), new Te3(t)));
          case Kt4:
          case Yt2:
          case Zt2:
            return bn2(+n3, +t);
          case _e3:
            return n3.name == t.name && n3.message == t.message;
          case Jt2:
          case Xt2:
            return n3 == t + "";
          case yn2:
            var c4 = Mr2;
          case Sn2:
            var l3 = r2 & It3;
            if (c4 || (c4 = Ee2), n3.size != t.size && !l3)
              return false;
            var v3 = f5.get(n3);
            if (v3)
              return v3 == t;
            r2 |= de4, f5.set(n3, t);
            var _5 = yu(c4(n3), c4(t), r2, s2, o, f5);
            return f5.delete(n3), _5;
          case we3:
            if (re2)
              return re2.call(n3) == re2.call(t);
        }
        return false;
      }
      function jc(n3, t, e, r2, s2, o) {
        var f5 = e & It3, c4 = hi(n3), l3 = c4.length, v3 = hi(t), _5 = v3.length;
        if (l3 != _5 && !f5)
          return false;
        for (var m3 = l3; m3--; ) {
          var w5 = c4[m3];
          if (!(f5 ? w5 in t : W3.call(t, w5)))
            return false;
        }
        var A = o.get(n3), E5 = o.get(t);
        if (A && E5)
          return A == t && E5 == n3;
        var b6 = true;
        o.set(n3, t), o.set(t, n3);
        for (var y5 = f5; ++m3 < l3; ) {
          w5 = c4[m3];
          var L4 = n3[w5], H5 = t[w5];
          if (r2)
            var dn = f5 ? r2(H5, L4, w5, t, n3, o) : r2(L4, H5, w5, n3, t, o);
          if (!(dn === i3 ? L4 === H5 || s2(L4, H5, e, r2, o) : dn)) {
            b6 = false;
            break;
          }
          y5 || (y5 = w5 == "constructor");
        }
        if (b6 && !y5) {
          var sn2 = n3.constructor, gn2 = t.constructor;
          sn2 != gn2 && "constructor" in n3 && "constructor" in t && !(typeof sn2 == "function" && sn2 instanceof sn2 && typeof gn2 == "function" && gn2 instanceof gn2) && (b6 = false);
        }
        return o.delete(n3), o.delete(t), b6;
      }
      function Zn2(n3) {
        return wi(Lu(n3, i3, qu), n3 + "");
      }
      function hi(n3) {
        return Ys2(n3, V2, gi);
      }
      function li(n3) {
        return Ys2(n3, on3, Su);
      }
      var pi = Ue4 ? function(n3) {
        return Ue4.get(n3);
      } : Li2;
      function Ve4(n3) {
        for (var t = n3.name + "", e = Ht3[t], r2 = W3.call(Ht3, t) ? e.length : 0; r2--; ) {
          var s2 = e[r2], o = s2.func;
          if (o == null || o == n3)
            return s2.name;
        }
        return t;
      }
      function Ft4(n3) {
        var t = W3.call(a2, "placeholder") ? a2 : n3;
        return t.placeholder;
      }
      function x5() {
        var n3 = a2.iteratee || bi;
        return n3 = n3 === bi ? Xs2 : n3, arguments.length ? n3(arguments[0], arguments[1]) : n3;
      }
      function ke3(n3, t) {
        var e = n3.__data__;
        return ah(t) ? e[typeof t == "string" ? "string" : "hash"] : e.map;
      }
      function di(n3) {
        for (var t = V2(n3), e = t.length; e--; ) {
          var r2 = t[e], s2 = n3[r2];
          t[e] = [r2, s2, bu(s2)];
        }
        return t;
      }
      function _t4(n3, t) {
        var e = cf(n3, t);
        return Js2(e) ? e : i3;
      }
      function nh(n3) {
        var t = W3.call(n3, lt3), e = n3[lt3];
        try {
          n3[lt3] = i3;
          var r2 = true;
        } catch {
        }
        var s2 = Re3.call(n3);
        return r2 && (t ? n3[lt3] = e : delete n3[lt3]), s2;
      }
      var gi = Br2 ? function(n3) {
        return n3 == null ? [] : (n3 = M5(n3), jn3(Br2(n3), function(t) {
          return Ds2.call(n3, t);
        }));
      } : Di, Su = Br2 ? function(n3) {
        for (var t = []; n3; )
          nt4(t, gi(n3)), n3 = Le3(n3);
        return t;
      } : Di, tn2 = en3;
      (Gr2 && tn2(new Gr2(new ArrayBuffer(1))) != St4 || ne4 && tn2(new ne4()) != yn2 || zr2 && tn2(zr2.resolve()) != Gi2 || Nt3 && tn2(new Nt3()) != Sn2 || te4 && tn2(new te4()) != Qt2) && (tn2 = function(n3) {
        var t = en3(n3), e = t == Bn3 ? n3.constructor : i3, r2 = e ? mt3(e) : "";
        if (r2)
          switch (r2) {
            case $f:
              return St4;
            case Uf:
              return yn2;
            case Wf:
              return Gi2;
            case Ff:
              return Sn2;
            case Mf:
              return Qt2;
          }
        return t;
      });
      function th(n3, t, e) {
        for (var r2 = -1, s2 = e.length; ++r2 < s2; ) {
          var o = e[r2], f5 = o.size;
          switch (o.type) {
            case "drop":
              n3 += f5;
              break;
            case "dropRight":
              t -= f5;
              break;
            case "take":
              t = nn2(t, n3 + f5);
              break;
            case "takeRight":
              n3 = Q5(n3, t - f5);
              break;
          }
        }
        return { start: n3, end: t };
      }
      function eh(n3) {
        var t = n3.match(uo2);
        return t ? t[1].split(ao2) : [];
      }
      function Ou(n3, t, e) {
        t = st3(t, n3);
        for (var r2 = -1, s2 = t.length, o = false; ++r2 < s2; ) {
          var f5 = Wn2(t[r2]);
          if (!(o = n3 != null && e(n3, f5)))
            break;
          n3 = n3[f5];
        }
        return o || ++r2 != s2 ? o : (s2 = n3 == null ? 0 : n3.length, !!s2 && sr3(s2) && Jn2(f5, s2) && (O7(n3) || wt4(n3)));
      }
      function rh(n3) {
        var t = n3.length, e = new n3.constructor(t);
        return t && typeof n3[0] == "string" && W3.call(n3, "index") && (e.index = n3.index, e.input = n3.input), e;
      }
      function Ru(n3) {
        return typeof n3.constructor == "function" && !ce4(n3) ? $t4(Le3(n3)) : {};
      }
      function ih(n3, t, e) {
        var r2 = n3.constructor;
        switch (t) {
          case Vt4:
            return oi(n3);
          case Kt4:
          case Yt2:
            return new r2(+n3);
          case St4:
            return qc(n3, e);
          case dr3:
          case gr3:
          case vr3:
          case _r3:
          case mr3:
          case wr3:
          case Pr2:
          case Ar2:
          case Cr3:
            return hu(n3, e);
          case yn2:
            return new r2();
          case Zt2:
          case Xt2:
            return new r2(n3);
          case Jt2:
            return Bc(n3);
          case Sn2:
            return new r2();
          case we3:
            return Gc(n3);
        }
      }
      function sh(n3, t) {
        var e = t.length;
        if (!e)
          return n3;
        var r2 = e - 1;
        return t[r2] = (e > 1 ? "& " : "") + t[r2], t = t.join(e > 2 ? ", " : " "), n3.replace(so2, `{
/* [wrapped with ` + t + `] */
`);
      }
      function uh(n3) {
        return O7(n3) || wt4(n3) || !!(Ns2 && n3 && n3[Ns2]);
      }
      function Jn2(n3, t) {
        var e = typeof n3;
        return t = t ?? kn3, !!t && (e == "number" || e != "symbol" && _o2.test(n3)) && n3 > -1 && n3 % 1 == 0 && n3 < t;
      }
      function rn3(n3, t, e) {
        if (!z5(e))
          return false;
        var r2 = typeof t;
        return (r2 == "number" ? an2(e) && Jn2(t, e.length) : r2 == "string" && t in e) ? bn2(e[t], n3) : false;
      }
      function vi(n3, t) {
        if (O7(n3))
          return false;
        var e = typeof n3;
        return e == "number" || e == "symbol" || e == "boolean" || n3 == null || pn2(n3) ? true : to2.test(n3) || !no2.test(n3) || t != null && n3 in M5(t);
      }
      function ah(n3) {
        var t = typeof n3;
        return t == "string" || t == "number" || t == "symbol" || t == "boolean" ? n3 !== "__proto__" : n3 === null;
      }
      function _i(n3) {
        var t = Ve4(n3), e = a2[t];
        if (typeof e != "function" || !(t in N14.prototype))
          return false;
        if (n3 === e)
          return true;
        var r2 = pi(e);
        return !!r2 && n3 === r2[0];
      }
      function oh(n3) {
        return !!bs2 && bs2 in n3;
      }
      var fh = Se3 ? Xn3 : Ni;
      function ce4(n3) {
        var t = n3 && n3.constructor, e = typeof t == "function" && t.prototype || Dt4;
        return n3 === e;
      }
      function bu(n3) {
        return n3 === n3 && !z5(n3);
      }
      function Tu(n3, t) {
        return function(e) {
          return e == null ? false : e[n3] === t && (t !== i3 || n3 in M5(e));
        };
      }
      function ch(n3) {
        var t = rr3(n3, function(r2) {
          return e.size === lr3 && e.clear(), r2;
        }), e = t.cache;
        return t;
      }
      function hh(n3, t) {
        var e = n3[1], r2 = t[1], s2 = e | r2, o = s2 < (vn3 | ft4 | qn3), f5 = r2 == qn3 && e == Dn2 || r2 == qn3 && e == zt4 && n3[7].length <= t[8] || r2 == (qn3 | zt4) && t[7].length <= t[8] && e == Dn2;
        if (!(o || f5))
          return n3;
        r2 & vn3 && (n3[2] = t[2], s2 |= e & vn3 ? 0 : Mi2);
        var c4 = t[3];
        if (c4) {
          var l3 = n3[3];
          n3[3] = l3 ? pu(l3, c4, t[4]) : c4, n3[4] = l3 ? tt3(n3[3], At3) : t[4];
        }
        return c4 = t[5], c4 && (l3 = n3[5], n3[5] = l3 ? du(l3, c4, t[6]) : c4, n3[6] = l3 ? tt3(n3[5], At3) : t[6]), c4 = t[7], c4 && (n3[7] = c4), r2 & qn3 && (n3[8] = n3[8] == null ? t[8] : nn2(n3[8], t[8])), n3[9] == null && (n3[9] = t[9]), n3[0] = t[0], n3[1] = s2, n3;
      }
      function lh(n3) {
        var t = [];
        if (n3 != null)
          for (var e in M5(n3))
            t.push(e);
        return t;
      }
      function ph(n3) {
        return Re3.call(n3);
      }
      function Lu(n3, t, e) {
        return t = Q5(t === i3 ? n3.length - 1 : t, 0), function() {
          for (var r2 = arguments, s2 = -1, o = Q5(r2.length - t, 0), f5 = d3(o); ++s2 < o; )
            f5[s2] = r2[t + s2];
          s2 = -1;
          for (var c4 = d3(t + 1); ++s2 < t; )
            c4[s2] = r2[s2];
          return c4[t] = e(f5), cn2(n3, this, c4);
        };
      }
      function Du(n3, t) {
        return t.length < 2 ? n3 : vt3(n3, Cn3(t, 0, -1));
      }
      function dh(n3, t) {
        for (var e = n3.length, r2 = nn2(t.length, e), s2 = un2(n3); r2--; ) {
          var o = t[r2];
          n3[r2] = Jn2(o, e) ? s2[o] : i3;
        }
        return n3;
      }
      function mi(n3, t) {
        if (!(t === "constructor" && typeof n3[t] == "function") && t != "__proto__")
          return n3[t];
      }
      var Nu = $u(ru), he3 = Rf || function(n3, t) {
        return k5.setTimeout(n3, t);
      }, wi = $u(Uc);
      function Hu(n3, t, e) {
        var r2 = t + "";
        return wi(n3, sh(r2, gh(eh(r2), e)));
      }
      function $u(n3) {
        var t = 0, e = 0;
        return function() {
          var r2 = Df(), s2 = Na - (r2 - e);
          if (e = r2, s2 > 0) {
            if (++t >= Da)
              return arguments[0];
          } else
            t = 0;
          return n3.apply(i3, arguments);
        };
      }
      function je4(n3, t) {
        var e = -1, r2 = n3.length, s2 = r2 - 1;
        for (t = t === i3 ? r2 : t; ++e < t; ) {
          var o = ti(e, s2), f5 = n3[o];
          n3[o] = n3[e], n3[e] = f5;
        }
        return n3.length = t, n3;
      }
      var Uu = ch(function(n3) {
        var t = [];
        return n3.charCodeAt(0) === 46 && t.push(""), n3.replace(eo2, function(e, r2, s2, o) {
          t.push(s2 ? o.replace(co2, "$1") : r2 || e);
        }), t;
      });
      function Wn2(n3) {
        if (typeof n3 == "string" || pn2(n3))
          return n3;
        var t = n3 + "";
        return t == "0" && 1 / n3 == -ct4 ? "-0" : t;
      }
      function mt3(n3) {
        if (n3 != null) {
          try {
            return Oe4.call(n3);
          } catch {
          }
          try {
            return n3 + "";
          } catch {
          }
        }
        return "";
      }
      function gh(n3, t) {
        return mn3(Ma, function(e) {
          var r2 = "_." + e[0];
          t & e[1] && !Ie4(n3, r2) && n3.push(r2);
        }), n3.sort();
      }
      function Wu(n3) {
        if (n3 instanceof N14)
          return n3.clone();
        var t = new Pn2(n3.__wrapped__, n3.__chain__);
        return t.__actions__ = un2(n3.__actions__), t.__index__ = n3.__index__, t.__values__ = n3.__values__, t;
      }
      function vh(n3, t, e) {
        (e ? rn3(n3, t, e) : t === i3) ? t = 1 : t = Q5(R2(t), 0);
        var r2 = n3 == null ? 0 : n3.length;
        if (!r2 || t < 1)
          return [];
        for (var s2 = 0, o = 0, f5 = d3(He4(r2 / t)); s2 < r2; )
          f5[o++] = Cn3(n3, s2, s2 += t);
        return f5;
      }
      function _h(n3) {
        for (var t = -1, e = n3 == null ? 0 : n3.length, r2 = 0, s2 = []; ++t < e; ) {
          var o = n3[t];
          o && (s2[r2++] = o);
        }
        return s2;
      }
      function mh() {
        var n3 = arguments.length;
        if (!n3)
          return [];
        for (var t = d3(n3 - 1), e = arguments[0], r2 = n3; r2--; )
          t[r2 - 1] = arguments[r2];
        return nt4(O7(e) ? un2(e) : [e], j7(t, 1));
      }
      var wh = T2(function(n3, t) {
        return Y2(n3) ? se3(n3, j7(t, 1, Y2, true)) : [];
      }), Ph = T2(function(n3, t) {
        var e = In2(t);
        return Y2(e) && (e = i3), Y2(n3) ? se3(n3, j7(t, 1, Y2, true), x5(e, 2)) : [];
      }), Ah = T2(function(n3, t) {
        var e = In2(t);
        return Y2(e) && (e = i3), Y2(n3) ? se3(n3, j7(t, 1, Y2, true), i3, e) : [];
      });
      function Ch(n3, t, e) {
        var r2 = n3 == null ? 0 : n3.length;
        return r2 ? (t = e || t === i3 ? 1 : R2(t), Cn3(n3, t < 0 ? 0 : t, r2)) : [];
      }
      function Ih(n3, t, e) {
        var r2 = n3 == null ? 0 : n3.length;
        return r2 ? (t = e || t === i3 ? 1 : R2(t), t = r2 - t, Cn3(n3, 0, t < 0 ? 0 : t)) : [];
      }
      function xh(n3, t) {
        return n3 && n3.length ? Ke3(n3, x5(t, 3), true, true) : [];
      }
      function Eh(n3, t) {
        return n3 && n3.length ? Ke3(n3, x5(t, 3), true) : [];
      }
      function yh(n3, t, e, r2) {
        var s2 = n3 == null ? 0 : n3.length;
        return s2 ? (e && typeof e != "number" && rn3(n3, t, e) && (e = 0, r2 = s2), mc(n3, t, e, r2)) : [];
      }
      function Fu(n3, t, e) {
        var r2 = n3 == null ? 0 : n3.length;
        if (!r2)
          return -1;
        var s2 = e == null ? 0 : R2(e);
        return s2 < 0 && (s2 = Q5(r2 + s2, 0)), xe4(n3, x5(t, 3), s2);
      }
      function Mu(n3, t, e) {
        var r2 = n3 == null ? 0 : n3.length;
        if (!r2)
          return -1;
        var s2 = r2 - 1;
        return e !== i3 && (s2 = R2(e), s2 = e < 0 ? Q5(r2 + s2, 0) : nn2(s2, r2 - 1)), xe4(n3, x5(t, 3), s2, true);
      }
      function qu(n3) {
        var t = n3 == null ? 0 : n3.length;
        return t ? j7(n3, 1) : [];
      }
      function Sh(n3) {
        var t = n3 == null ? 0 : n3.length;
        return t ? j7(n3, ct4) : [];
      }
      function Oh(n3, t) {
        var e = n3 == null ? 0 : n3.length;
        return e ? (t = t === i3 ? 1 : R2(t), j7(n3, t)) : [];
      }
      function Rh(n3) {
        for (var t = -1, e = n3 == null ? 0 : n3.length, r2 = {}; ++t < e; ) {
          var s2 = n3[t];
          r2[s2[0]] = s2[1];
        }
        return r2;
      }
      function Bu(n3) {
        return n3 && n3.length ? n3[0] : i3;
      }
      function bh(n3, t, e) {
        var r2 = n3 == null ? 0 : n3.length;
        if (!r2)
          return -1;
        var s2 = e == null ? 0 : R2(e);
        return s2 < 0 && (s2 = Q5(r2 + s2, 0)), Rt4(n3, t, s2);
      }
      function Th(n3) {
        var t = n3 == null ? 0 : n3.length;
        return t ? Cn3(n3, 0, -1) : [];
      }
      var Lh = T2(function(n3) {
        var t = G4(n3, ui);
        return t.length && t[0] === n3[0] ? Qr2(t) : [];
      }), Dh = T2(function(n3) {
        var t = In2(n3), e = G4(n3, ui);
        return t === In2(e) ? t = i3 : e.pop(), e.length && e[0] === n3[0] ? Qr2(e, x5(t, 2)) : [];
      }), Nh = T2(function(n3) {
        var t = In2(n3), e = G4(n3, ui);
        return t = typeof t == "function" ? t : i3, t && e.pop(), e.length && e[0] === n3[0] ? Qr2(e, i3, t) : [];
      });
      function Hh(n3, t) {
        return n3 == null ? "" : Tf.call(n3, t);
      }
      function In2(n3) {
        var t = n3 == null ? 0 : n3.length;
        return t ? n3[t - 1] : i3;
      }
      function $h(n3, t, e) {
        var r2 = n3 == null ? 0 : n3.length;
        if (!r2)
          return -1;
        var s2 = r2;
        return e !== i3 && (s2 = R2(e), s2 = s2 < 0 ? Q5(r2 + s2, 0) : nn2(s2, r2 - 1)), t === t ? gf(n3, t, s2) : xe4(n3, Cs2, s2, true);
      }
      function Uh(n3, t) {
        return n3 && n3.length ? js2(n3, R2(t)) : i3;
      }
      var Wh = T2(Gu);
      function Gu(n3, t) {
        return n3 && n3.length && t && t.length ? ni(n3, t) : n3;
      }
      function Fh(n3, t, e) {
        return n3 && n3.length && t && t.length ? ni(n3, t, x5(e, 2)) : n3;
      }
      function Mh(n3, t, e) {
        return n3 && n3.length && t && t.length ? ni(n3, t, i3, e) : n3;
      }
      var qh = Zn2(function(n3, t) {
        var e = n3 == null ? 0 : n3.length, r2 = Yr2(n3, t);
        return eu(n3, G4(t, function(s2) {
          return Jn2(s2, e) ? +s2 : s2;
        }).sort(lu)), r2;
      });
      function Bh(n3, t) {
        var e = [];
        if (!(n3 && n3.length))
          return e;
        var r2 = -1, s2 = [], o = n3.length;
        for (t = x5(t, 3); ++r2 < o; ) {
          var f5 = n3[r2];
          t(f5, r2, n3) && (e.push(f5), s2.push(r2));
        }
        return eu(n3, s2), e;
      }
      function Pi2(n3) {
        return n3 == null ? n3 : Hf.call(n3);
      }
      function Gh(n3, t, e) {
        var r2 = n3 == null ? 0 : n3.length;
        return r2 ? (e && typeof e != "number" && rn3(n3, t, e) ? (t = 0, e = r2) : (t = t == null ? 0 : R2(t), e = e === i3 ? r2 : R2(e)), Cn3(n3, t, e)) : [];
      }
      function zh(n3, t) {
        return ze4(n3, t);
      }
      function Kh(n3, t, e) {
        return ri(n3, t, x5(e, 2));
      }
      function Yh(n3, t) {
        var e = n3 == null ? 0 : n3.length;
        if (e) {
          var r2 = ze4(n3, t);
          if (r2 < e && bn2(n3[r2], t))
            return r2;
        }
        return -1;
      }
      function Zh(n3, t) {
        return ze4(n3, t, true);
      }
      function Jh(n3, t, e) {
        return ri(n3, t, x5(e, 2), true);
      }
      function Xh(n3, t) {
        var e = n3 == null ? 0 : n3.length;
        if (e) {
          var r2 = ze4(n3, t, true) - 1;
          if (bn2(n3[r2], t))
            return r2;
        }
        return -1;
      }
      function Qh(n3) {
        return n3 && n3.length ? iu(n3) : [];
      }
      function Vh(n3, t) {
        return n3 && n3.length ? iu(n3, x5(t, 2)) : [];
      }
      function kh(n3) {
        var t = n3 == null ? 0 : n3.length;
        return t ? Cn3(n3, 1, t) : [];
      }
      function jh(n3, t, e) {
        return n3 && n3.length ? (t = e || t === i3 ? 1 : R2(t), Cn3(n3, 0, t < 0 ? 0 : t)) : [];
      }
      function nl(n3, t, e) {
        var r2 = n3 == null ? 0 : n3.length;
        return r2 ? (t = e || t === i3 ? 1 : R2(t), t = r2 - t, Cn3(n3, t < 0 ? 0 : t, r2)) : [];
      }
      function tl(n3, t) {
        return n3 && n3.length ? Ke3(n3, x5(t, 3), false, true) : [];
      }
      function el(n3, t) {
        return n3 && n3.length ? Ke3(n3, x5(t, 3)) : [];
      }
      var rl = T2(function(n3) {
        return it4(j7(n3, 1, Y2, true));
      }), il = T2(function(n3) {
        var t = In2(n3);
        return Y2(t) && (t = i3), it4(j7(n3, 1, Y2, true), x5(t, 2));
      }), sl = T2(function(n3) {
        var t = In2(n3);
        return t = typeof t == "function" ? t : i3, it4(j7(n3, 1, Y2, true), i3, t);
      });
      function ul(n3) {
        return n3 && n3.length ? it4(n3) : [];
      }
      function al(n3, t) {
        return n3 && n3.length ? it4(n3, x5(t, 2)) : [];
      }
      function ol(n3, t) {
        return t = typeof t == "function" ? t : i3, n3 && n3.length ? it4(n3, i3, t) : [];
      }
      function Ai(n3) {
        if (!(n3 && n3.length))
          return [];
        var t = 0;
        return n3 = jn3(n3, function(e) {
          if (Y2(e))
            return t = Q5(e.length, t), true;
        }), Wr2(t, function(e) {
          return G4(n3, Hr2(e));
        });
      }
      function zu(n3, t) {
        if (!(n3 && n3.length))
          return [];
        var e = Ai(n3);
        return t == null ? e : G4(e, function(r2) {
          return cn2(t, i3, r2);
        });
      }
      var fl = T2(function(n3, t) {
        return Y2(n3) ? se3(n3, t) : [];
      }), cl = T2(function(n3) {
        return si(jn3(n3, Y2));
      }), hl = T2(function(n3) {
        var t = In2(n3);
        return Y2(t) && (t = i3), si(jn3(n3, Y2), x5(t, 2));
      }), ll = T2(function(n3) {
        var t = In2(n3);
        return t = typeof t == "function" ? t : i3, si(jn3(n3, Y2), i3, t);
      }), pl = T2(Ai);
      function dl(n3, t) {
        return ou(n3 || [], t || [], ie3);
      }
      function gl(n3, t) {
        return ou(n3 || [], t || [], oe4);
      }
      var vl = T2(function(n3) {
        var t = n3.length, e = t > 1 ? n3[t - 1] : i3;
        return e = typeof e == "function" ? (n3.pop(), e) : i3, zu(n3, e);
      });
      function Ku(n3) {
        var t = a2(n3);
        return t.__chain__ = true, t;
      }
      function _l(n3, t) {
        return t(n3), n3;
      }
      function nr3(n3, t) {
        return t(n3);
      }
      var ml = Zn2(function(n3) {
        var t = n3.length, e = t ? n3[0] : 0, r2 = this.__wrapped__, s2 = function(o) {
          return Yr2(o, n3);
        };
        return t > 1 || this.__actions__.length || !(r2 instanceof N14) || !Jn2(e) ? this.thru(s2) : (r2 = r2.slice(e, +e + (t ? 1 : 0)), r2.__actions__.push({ func: nr3, args: [s2], thisArg: i3 }), new Pn2(r2, this.__chain__).thru(function(o) {
          return t && !o.length && o.push(i3), o;
        }));
      });
      function wl() {
        return Ku(this);
      }
      function Pl() {
        return new Pn2(this.value(), this.__chain__);
      }
      function Al() {
        this.__values__ === i3 && (this.__values__ = sa(this.value()));
        var n3 = this.__index__ >= this.__values__.length, t = n3 ? i3 : this.__values__[this.__index__++];
        return { done: n3, value: t };
      }
      function Cl() {
        return this;
      }
      function Il(n3) {
        for (var t, e = this; e instanceof Fe3; ) {
          var r2 = Wu(e);
          r2.__index__ = 0, r2.__values__ = i3, t ? s2.__wrapped__ = r2 : t = r2;
          var s2 = r2;
          e = e.__wrapped__;
        }
        return s2.__wrapped__ = n3, t;
      }
      function xl() {
        var n3 = this.__wrapped__;
        if (n3 instanceof N14) {
          var t = n3;
          return this.__actions__.length && (t = new N14(this)), t = t.reverse(), t.__actions__.push({ func: nr3, args: [Pi2], thisArg: i3 }), new Pn2(t, this.__chain__);
        }
        return this.thru(Pi2);
      }
      function El() {
        return au(this.__wrapped__, this.__actions__);
      }
      var yl = Ye4(function(n3, t, e) {
        W3.call(n3, e) ? ++n3[e] : Kn3(n3, e, 1);
      });
      function Sl(n3, t, e) {
        var r2 = O7(n3) ? Ps2 : _c;
        return e && rn3(n3, t, e) && (t = i3), r2(n3, x5(t, 3));
      }
      function Ol(n3, t) {
        var e = O7(n3) ? jn3 : zs2;
        return e(n3, x5(t, 3));
      }
      var Rl = mu(Fu), bl = mu(Mu);
      function Tl(n3, t) {
        return j7(tr3(n3, t), 1);
      }
      function Ll(n3, t) {
        return j7(tr3(n3, t), ct4);
      }
      function Dl(n3, t, e) {
        return e = e === i3 ? 1 : R2(e), j7(tr3(n3, t), e);
      }
      function Yu(n3, t) {
        var e = O7(n3) ? mn3 : rt4;
        return e(n3, x5(t, 3));
      }
      function Zu(n3, t) {
        var e = O7(n3) ? Vo2 : Gs2;
        return e(n3, x5(t, 3));
      }
      var Nl = Ye4(function(n3, t, e) {
        W3.call(n3, e) ? n3[e].push(t) : Kn3(n3, e, [t]);
      });
      function Hl(n3, t, e, r2) {
        n3 = an2(n3) ? n3 : qt3(n3), e = e && !r2 ? R2(e) : 0;
        var s2 = n3.length;
        return e < 0 && (e = Q5(s2 + e, 0)), ur2(n3) ? e <= s2 && n3.indexOf(t, e) > -1 : !!s2 && Rt4(n3, t, e) > -1;
      }
      var $l = T2(function(n3, t, e) {
        var r2 = -1, s2 = typeof t == "function", o = an2(n3) ? d3(n3.length) : [];
        return rt4(n3, function(f5) {
          o[++r2] = s2 ? cn2(t, f5, e) : ue3(f5, t, e);
        }), o;
      }), Ul = Ye4(function(n3, t, e) {
        Kn3(n3, e, t);
      });
      function tr3(n3, t) {
        var e = O7(n3) ? G4 : Qs2;
        return e(n3, x5(t, 3));
      }
      function Wl(n3, t, e, r2) {
        return n3 == null ? [] : (O7(t) || (t = t == null ? [] : [t]), e = r2 ? i3 : e, O7(e) || (e = e == null ? [] : [e]), nu(n3, t, e));
      }
      var Fl = Ye4(function(n3, t, e) {
        n3[e ? 0 : 1].push(t);
      }, function() {
        return [[], []];
      });
      function Ml(n3, t, e) {
        var r2 = O7(n3) ? Dr3 : xs2, s2 = arguments.length < 3;
        return r2(n3, x5(t, 4), e, s2, rt4);
      }
      function ql(n3, t, e) {
        var r2 = O7(n3) ? ko2 : xs2, s2 = arguments.length < 3;
        return r2(n3, x5(t, 4), e, s2, Gs2);
      }
      function Bl(n3, t) {
        var e = O7(n3) ? jn3 : zs2;
        return e(n3, ir3(x5(t, 3)));
      }
      function Gl(n3) {
        var t = O7(n3) ? Fs2 : Hc;
        return t(n3);
      }
      function zl(n3, t, e) {
        (e ? rn3(n3, t, e) : t === i3) ? t = 1 : t = R2(t);
        var r2 = O7(n3) ? lc : $c;
        return r2(n3, t);
      }
      function Kl(n3) {
        var t = O7(n3) ? pc : Wc;
        return t(n3);
      }
      function Yl(n3) {
        if (n3 == null)
          return 0;
        if (an2(n3))
          return ur2(n3) ? Tt4(n3) : n3.length;
        var t = tn2(n3);
        return t == yn2 || t == Sn2 ? n3.size : kr2(n3).length;
      }
      function Zl(n3, t, e) {
        var r2 = O7(n3) ? Nr2 : Fc;
        return e && rn3(n3, t, e) && (t = i3), r2(n3, x5(t, 3));
      }
      var Jl = T2(function(n3, t) {
        if (n3 == null)
          return [];
        var e = t.length;
        return e > 1 && rn3(n3, t[0], t[1]) ? t = [] : e > 2 && rn3(t[0], t[1], t[2]) && (t = [t[0]]), nu(n3, j7(t, 1), []);
      }), er3 = Of || function() {
        return k5.Date.now();
      };
      function Xl(n3, t) {
        if (typeof t != "function")
          throw new wn2(F2);
        return n3 = R2(n3), function() {
          if (--n3 < 1)
            return t.apply(this, arguments);
        };
      }
      function Ju(n3, t, e) {
        return t = e ? i3 : t, t = n3 && t == null ? n3.length : t, Yn3(n3, qn3, i3, i3, i3, i3, t);
      }
      function Xu(n3, t) {
        var e;
        if (typeof t != "function")
          throw new wn2(F2);
        return n3 = R2(n3), function() {
          return --n3 > 0 && (e = t.apply(this, arguments)), n3 <= 1 && (t = i3), e;
        };
      }
      var Ci = T2(function(n3, t, e) {
        var r2 = vn3;
        if (e.length) {
          var s2 = tt3(e, Ft4(Ci));
          r2 |= Nn2;
        }
        return Yn3(n3, r2, t, e, s2);
      }), Qu = T2(function(n3, t, e) {
        var r2 = vn3 | ft4;
        if (e.length) {
          var s2 = tt3(e, Ft4(Qu));
          r2 |= Nn2;
        }
        return Yn3(t, r2, n3, e, s2);
      });
      function Vu(n3, t, e) {
        t = e ? i3 : t;
        var r2 = Yn3(n3, Dn2, i3, i3, i3, i3, i3, t);
        return r2.placeholder = Vu.placeholder, r2;
      }
      function ku(n3, t, e) {
        t = e ? i3 : t;
        var r2 = Yn3(n3, xt4, i3, i3, i3, i3, i3, t);
        return r2.placeholder = ku.placeholder, r2;
      }
      function ju(n3, t, e) {
        var r2, s2, o, f5, c4, l3, v3 = 0, _5 = false, m3 = false, w5 = true;
        if (typeof n3 != "function")
          throw new wn2(F2);
        t = xn2(t) || 0, z5(e) && (_5 = !!e.leading, m3 = "maxWait" in e, o = m3 ? Q5(xn2(e.maxWait) || 0, t) : o, w5 = "trailing" in e ? !!e.trailing : w5);
        function A(Z4) {
          var Tn2 = r2, Vn3 = s2;
          return r2 = s2 = i3, v3 = Z4, f5 = n3.apply(Vn3, Tn2), f5;
        }
        function E5(Z4) {
          return v3 = Z4, c4 = he3(L4, t), _5 ? A(Z4) : f5;
        }
        function b6(Z4) {
          var Tn2 = Z4 - l3, Vn3 = Z4 - v3, ma = t - Tn2;
          return m3 ? nn2(ma, o - Vn3) : ma;
        }
        function y5(Z4) {
          var Tn2 = Z4 - l3, Vn3 = Z4 - v3;
          return l3 === i3 || Tn2 >= t || Tn2 < 0 || m3 && Vn3 >= o;
        }
        function L4() {
          var Z4 = er3();
          if (y5(Z4))
            return H5(Z4);
          c4 = he3(L4, b6(Z4));
        }
        function H5(Z4) {
          return c4 = i3, w5 && r2 ? A(Z4) : (r2 = s2 = i3, f5);
        }
        function dn() {
          c4 !== i3 && fu(c4), v3 = 0, r2 = l3 = s2 = c4 = i3;
        }
        function sn2() {
          return c4 === i3 ? f5 : H5(er3());
        }
        function gn2() {
          var Z4 = er3(), Tn2 = y5(Z4);
          if (r2 = arguments, s2 = this, l3 = Z4, Tn2) {
            if (c4 === i3)
              return E5(l3);
            if (m3)
              return fu(c4), c4 = he3(L4, t), A(l3);
          }
          return c4 === i3 && (c4 = he3(L4, t)), f5;
        }
        return gn2.cancel = dn, gn2.flush = sn2, gn2;
      }
      var Ql = T2(function(n3, t) {
        return Bs2(n3, 1, t);
      }), Vl = T2(function(n3, t, e) {
        return Bs2(n3, xn2(t) || 0, e);
      });
      function kl(n3) {
        return Yn3(n3, pr3);
      }
      function rr3(n3, t) {
        if (typeof n3 != "function" || t != null && typeof t != "function")
          throw new wn2(F2);
        var e = function() {
          var r2 = arguments, s2 = t ? t.apply(this, r2) : r2[0], o = e.cache;
          if (o.has(s2))
            return o.get(s2);
          var f5 = n3.apply(this, r2);
          return e.cache = o.set(s2, f5) || o, f5;
        };
        return e.cache = new (rr3.Cache || zn2)(), e;
      }
      rr3.Cache = zn2;
      function ir3(n3) {
        if (typeof n3 != "function")
          throw new wn2(F2);
        return function() {
          var t = arguments;
          switch (t.length) {
            case 0:
              return !n3.call(this);
            case 1:
              return !n3.call(this, t[0]);
            case 2:
              return !n3.call(this, t[0], t[1]);
            case 3:
              return !n3.call(this, t[0], t[1], t[2]);
          }
          return !n3.apply(this, t);
        };
      }
      function jl(n3) {
        return Xu(2, n3);
      }
      var np = Mc(function(n3, t) {
        t = t.length == 1 && O7(t[0]) ? G4(t[0], hn2(x5())) : G4(j7(t, 1), hn2(x5()));
        var e = t.length;
        return T2(function(r2) {
          for (var s2 = -1, o = nn2(r2.length, e); ++s2 < o; )
            r2[s2] = t[s2].call(this, r2[s2]);
          return cn2(n3, this, r2);
        });
      }), Ii = T2(function(n3, t) {
        var e = tt3(t, Ft4(Ii));
        return Yn3(n3, Nn2, i3, t, e);
      }), na = T2(function(n3, t) {
        var e = tt3(t, Ft4(na));
        return Yn3(n3, Et3, i3, t, e);
      }), tp = Zn2(function(n3, t) {
        return Yn3(n3, zt4, i3, i3, i3, t);
      });
      function ep(n3, t) {
        if (typeof n3 != "function")
          throw new wn2(F2);
        return t = t === i3 ? t : R2(t), T2(n3, t);
      }
      function rp(n3, t) {
        if (typeof n3 != "function")
          throw new wn2(F2);
        return t = t == null ? 0 : Q5(R2(t), 0), T2(function(e) {
          var r2 = e[t], s2 = ut4(e, 0, t);
          return r2 && nt4(s2, r2), cn2(n3, this, s2);
        });
      }
      function ip(n3, t, e) {
        var r2 = true, s2 = true;
        if (typeof n3 != "function")
          throw new wn2(F2);
        return z5(e) && (r2 = "leading" in e ? !!e.leading : r2, s2 = "trailing" in e ? !!e.trailing : s2), ju(n3, t, { leading: r2, maxWait: t, trailing: s2 });
      }
      function sp(n3) {
        return Ju(n3, 1);
      }
      function up(n3, t) {
        return Ii(ai(t), n3);
      }
      function ap() {
        if (!arguments.length)
          return [];
        var n3 = arguments[0];
        return O7(n3) ? n3 : [n3];
      }
      function op(n3) {
        return An3(n3, Ct3);
      }
      function fp(n3, t) {
        return t = typeof t == "function" ? t : i3, An3(n3, Ct3, t);
      }
      function cp(n3) {
        return An3(n3, Ln2 | Ct3);
      }
      function hp(n3, t) {
        return t = typeof t == "function" ? t : i3, An3(n3, Ln2 | Ct3, t);
      }
      function lp(n3, t) {
        return t == null || qs2(n3, t, V2(t));
      }
      function bn2(n3, t) {
        return n3 === t || n3 !== n3 && t !== t;
      }
      var pp = Qe4(Xr2), dp = Qe4(function(n3, t) {
        return n3 >= t;
      }), wt4 = Zs2(function() {
        return arguments;
      }()) ? Zs2 : function(n3) {
        return K4(n3) && W3.call(n3, "callee") && !Ds2.call(n3, "callee");
      }, O7 = d3.isArray, gp = ds2 ? hn2(ds2) : Ic;
      function an2(n3) {
        return n3 != null && sr3(n3.length) && !Xn3(n3);
      }
      function Y2(n3) {
        return K4(n3) && an2(n3);
      }
      function vp(n3) {
        return n3 === true || n3 === false || K4(n3) && en3(n3) == Kt4;
      }
      var at3 = bf || Ni, _p = gs2 ? hn2(gs2) : xc;
      function mp(n3) {
        return K4(n3) && n3.nodeType === 1 && !le3(n3);
      }
      function wp(n3) {
        if (n3 == null)
          return true;
        if (an2(n3) && (O7(n3) || typeof n3 == "string" || typeof n3.splice == "function" || at3(n3) || Mt4(n3) || wt4(n3)))
          return !n3.length;
        var t = tn2(n3);
        if (t == yn2 || t == Sn2)
          return !n3.size;
        if (ce4(n3))
          return !kr2(n3).length;
        for (var e in n3)
          if (W3.call(n3, e))
            return false;
        return true;
      }
      function Pp(n3, t) {
        return ae4(n3, t);
      }
      function Ap(n3, t, e) {
        e = typeof e == "function" ? e : i3;
        var r2 = e ? e(n3, t) : i3;
        return r2 === i3 ? ae4(n3, t, i3, e) : !!r2;
      }
      function xi(n3) {
        if (!K4(n3))
          return false;
        var t = en3(n3);
        return t == _e3 || t == Ba || typeof n3.message == "string" && typeof n3.name == "string" && !le3(n3);
      }
      function Cp(n3) {
        return typeof n3 == "number" && Hs2(n3);
      }
      function Xn3(n3) {
        if (!z5(n3))
          return false;
        var t = en3(n3);
        return t == me2 || t == Bi2 || t == qa || t == za;
      }
      function ta(n3) {
        return typeof n3 == "number" && n3 == R2(n3);
      }
      function sr3(n3) {
        return typeof n3 == "number" && n3 > -1 && n3 % 1 == 0 && n3 <= kn3;
      }
      function z5(n3) {
        var t = typeof n3;
        return n3 != null && (t == "object" || t == "function");
      }
      function K4(n3) {
        return n3 != null && typeof n3 == "object";
      }
      var ea = vs2 ? hn2(vs2) : yc;
      function Ip(n3, t) {
        return n3 === t || Vr2(n3, t, di(t));
      }
      function xp(n3, t, e) {
        return e = typeof e == "function" ? e : i3, Vr2(n3, t, di(t), e);
      }
      function Ep(n3) {
        return ra(n3) && n3 != +n3;
      }
      function yp(n3) {
        if (fh(n3))
          throw new S5(D4);
        return Js2(n3);
      }
      function Sp(n3) {
        return n3 === null;
      }
      function Op(n3) {
        return n3 == null;
      }
      function ra(n3) {
        return typeof n3 == "number" || K4(n3) && en3(n3) == Zt2;
      }
      function le3(n3) {
        if (!K4(n3) || en3(n3) != Bn3)
          return false;
        var t = Le3(n3);
        if (t === null)
          return true;
        var e = W3.call(t, "constructor") && t.constructor;
        return typeof e == "function" && e instanceof e && Oe4.call(e) == xf;
      }
      var Ei = _s2 ? hn2(_s2) : Sc;
      function Rp(n3) {
        return ta(n3) && n3 >= -kn3 && n3 <= kn3;
      }
      var ia = ms2 ? hn2(ms2) : Oc;
      function ur2(n3) {
        return typeof n3 == "string" || !O7(n3) && K4(n3) && en3(n3) == Xt2;
      }
      function pn2(n3) {
        return typeof n3 == "symbol" || K4(n3) && en3(n3) == we3;
      }
      var Mt4 = ws2 ? hn2(ws2) : Rc;
      function bp(n3) {
        return n3 === i3;
      }
      function Tp(n3) {
        return K4(n3) && tn2(n3) == Qt2;
      }
      function Lp(n3) {
        return K4(n3) && en3(n3) == Ya;
      }
      var Dp = Qe4(jr2), Np = Qe4(function(n3, t) {
        return n3 <= t;
      });
      function sa(n3) {
        if (!n3)
          return [];
        if (an2(n3))
          return ur2(n3) ? On3(n3) : un2(n3);
        if (jt3 && n3[jt3])
          return lf(n3[jt3]());
        var t = tn2(n3), e = t == yn2 ? Mr2 : t == Sn2 ? Ee2 : qt3;
        return e(n3);
      }
      function Qn2(n3) {
        if (!n3)
          return n3 === 0 ? n3 : 0;
        if (n3 = xn2(n3), n3 === ct4 || n3 === -ct4) {
          var t = n3 < 0 ? -1 : 1;
          return t * Ua;
        }
        return n3 === n3 ? n3 : 0;
      }
      function R2(n3) {
        var t = Qn2(n3), e = t % 1;
        return t === t ? e ? t - e : t : 0;
      }
      function ua(n3) {
        return n3 ? gt3(R2(n3), 0, Hn2) : 0;
      }
      function xn2(n3) {
        if (typeof n3 == "number")
          return n3;
        if (pn2(n3))
          return ge3;
        if (z5(n3)) {
          var t = typeof n3.valueOf == "function" ? n3.valueOf() : n3;
          n3 = z5(t) ? t + "" : t;
        }
        if (typeof n3 != "string")
          return n3 === 0 ? n3 : +n3;
        n3 = Es2(n3);
        var e = po2.test(n3);
        return e || vo2.test(n3) ? Jo2(n3.slice(2), e ? 2 : 8) : lo2.test(n3) ? ge3 : +n3;
      }
      function aa(n3) {
        return Un3(n3, on3(n3));
      }
      function Hp(n3) {
        return n3 ? gt3(R2(n3), -kn3, kn3) : n3 === 0 ? n3 : 0;
      }
      function U5(n3) {
        return n3 == null ? "" : ln(n3);
      }
      var $p = Ut4(function(n3, t) {
        if (ce4(t) || an2(t)) {
          Un3(t, V2(t), n3);
          return;
        }
        for (var e in t)
          W3.call(t, e) && ie3(n3, e, t[e]);
      }), oa = Ut4(function(n3, t) {
        Un3(t, on3(t), n3);
      }), ar3 = Ut4(function(n3, t, e, r2) {
        Un3(t, on3(t), n3, r2);
      }), Up = Ut4(function(n3, t, e, r2) {
        Un3(t, V2(t), n3, r2);
      }), Wp = Zn2(Yr2);
      function Fp(n3, t) {
        var e = $t4(n3);
        return t == null ? e : Ms2(e, t);
      }
      var Mp = T2(function(n3, t) {
        n3 = M5(n3);
        var e = -1, r2 = t.length, s2 = r2 > 2 ? t[2] : i3;
        for (s2 && rn3(t[0], t[1], s2) && (r2 = 1); ++e < r2; )
          for (var o = t[e], f5 = on3(o), c4 = -1, l3 = f5.length; ++c4 < l3; ) {
            var v3 = f5[c4], _5 = n3[v3];
            (_5 === i3 || bn2(_5, Dt4[v3]) && !W3.call(n3, v3)) && (n3[v3] = o[v3]);
          }
        return n3;
      }), qp = T2(function(n3) {
        return n3.push(i3, Eu), cn2(fa, i3, n3);
      });
      function Bp(n3, t) {
        return As2(n3, x5(t, 3), $n3);
      }
      function Gp(n3, t) {
        return As2(n3, x5(t, 3), Jr2);
      }
      function zp(n3, t) {
        return n3 == null ? n3 : Zr2(n3, x5(t, 3), on3);
      }
      function Kp(n3, t) {
        return n3 == null ? n3 : Ks2(n3, x5(t, 3), on3);
      }
      function Yp(n3, t) {
        return n3 && $n3(n3, x5(t, 3));
      }
      function Zp(n3, t) {
        return n3 && Jr2(n3, x5(t, 3));
      }
      function Jp(n3) {
        return n3 == null ? [] : Be3(n3, V2(n3));
      }
      function Xp(n3) {
        return n3 == null ? [] : Be3(n3, on3(n3));
      }
      function yi(n3, t, e) {
        var r2 = n3 == null ? i3 : vt3(n3, t);
        return r2 === i3 ? e : r2;
      }
      function Qp(n3, t) {
        return n3 != null && Ou(n3, t, wc);
      }
      function Si2(n3, t) {
        return n3 != null && Ou(n3, t, Pc);
      }
      var Vp = Pu(function(n3, t, e) {
        t != null && typeof t.toString != "function" && (t = Re3.call(t)), n3[t] = e;
      }, Ri(fn)), kp = Pu(function(n3, t, e) {
        t != null && typeof t.toString != "function" && (t = Re3.call(t)), W3.call(n3, t) ? n3[t].push(e) : n3[t] = [e];
      }, x5), jp = T2(ue3);
      function V2(n3) {
        return an2(n3) ? Ws2(n3) : kr2(n3);
      }
      function on3(n3) {
        return an2(n3) ? Ws2(n3, true) : bc(n3);
      }
      function nd(n3, t) {
        var e = {};
        return t = x5(t, 3), $n3(n3, function(r2, s2, o) {
          Kn3(e, t(r2, s2, o), r2);
        }), e;
      }
      function td(n3, t) {
        var e = {};
        return t = x5(t, 3), $n3(n3, function(r2, s2, o) {
          Kn3(e, s2, t(r2, s2, o));
        }), e;
      }
      var ed = Ut4(function(n3, t, e) {
        Ge4(n3, t, e);
      }), fa = Ut4(function(n3, t, e, r2) {
        Ge4(n3, t, e, r2);
      }), rd = Zn2(function(n3, t) {
        var e = {};
        if (n3 == null)
          return e;
        var r2 = false;
        t = G4(t, function(o) {
          return o = st3(o, n3), r2 || (r2 = o.length > 1), o;
        }), Un3(n3, li(n3), e), r2 && (e = An3(e, Ln2 | Mn3 | Ct3, Vc));
        for (var s2 = t.length; s2--; )
          ii(e, t[s2]);
        return e;
      });
      function id(n3, t) {
        return ca(n3, ir3(x5(t)));
      }
      var sd = Zn2(function(n3, t) {
        return n3 == null ? {} : Lc(n3, t);
      });
      function ca(n3, t) {
        if (n3 == null)
          return {};
        var e = G4(li(n3), function(r2) {
          return [r2];
        });
        return t = x5(t), tu(n3, e, function(r2, s2) {
          return t(r2, s2[0]);
        });
      }
      function ud(n3, t, e) {
        t = st3(t, n3);
        var r2 = -1, s2 = t.length;
        for (s2 || (s2 = 1, n3 = i3); ++r2 < s2; ) {
          var o = n3 == null ? i3 : n3[Wn2(t[r2])];
          o === i3 && (r2 = s2, o = e), n3 = Xn3(o) ? o.call(n3) : o;
        }
        return n3;
      }
      function ad(n3, t, e) {
        return n3 == null ? n3 : oe4(n3, t, e);
      }
      function od(n3, t, e, r2) {
        return r2 = typeof r2 == "function" ? r2 : i3, n3 == null ? n3 : oe4(n3, t, e, r2);
      }
      var ha = Iu(V2), la = Iu(on3);
      function fd(n3, t, e) {
        var r2 = O7(n3), s2 = r2 || at3(n3) || Mt4(n3);
        if (t = x5(t, 4), e == null) {
          var o = n3 && n3.constructor;
          s2 ? e = r2 ? new o() : [] : z5(n3) ? e = Xn3(o) ? $t4(Le3(n3)) : {} : e = {};
        }
        return (s2 ? mn3 : $n3)(n3, function(f5, c4, l3) {
          return t(e, f5, c4, l3);
        }), e;
      }
      function cd(n3, t) {
        return n3 == null ? true : ii(n3, t);
      }
      function hd(n3, t, e) {
        return n3 == null ? n3 : uu(n3, t, ai(e));
      }
      function ld(n3, t, e, r2) {
        return r2 = typeof r2 == "function" ? r2 : i3, n3 == null ? n3 : uu(n3, t, ai(e), r2);
      }
      function qt3(n3) {
        return n3 == null ? [] : Fr2(n3, V2(n3));
      }
      function pd(n3) {
        return n3 == null ? [] : Fr2(n3, on3(n3));
      }
      function dd(n3, t, e) {
        return e === i3 && (e = t, t = i3), e !== i3 && (e = xn2(e), e = e === e ? e : 0), t !== i3 && (t = xn2(t), t = t === t ? t : 0), gt3(xn2(n3), t, e);
      }
      function gd(n3, t, e) {
        return t = Qn2(t), e === i3 ? (e = t, t = 0) : e = Qn2(e), n3 = xn2(n3), Ac(n3, t, e);
      }
      function vd(n3, t, e) {
        if (e && typeof e != "boolean" && rn3(n3, t, e) && (t = e = i3), e === i3 && (typeof t == "boolean" ? (e = t, t = i3) : typeof n3 == "boolean" && (e = n3, n3 = i3)), n3 === i3 && t === i3 ? (n3 = 0, t = 1) : (n3 = Qn2(n3), t === i3 ? (t = n3, n3 = 0) : t = Qn2(t)), n3 > t) {
          var r2 = n3;
          n3 = t, t = r2;
        }
        if (e || n3 % 1 || t % 1) {
          var s2 = $s2();
          return nn2(n3 + s2 * (t - n3 + Zo2("1e-" + ((s2 + "").length - 1))), t);
        }
        return ti(n3, t);
      }
      var _d = Wt2(function(n3, t, e) {
        return t = t.toLowerCase(), n3 + (e ? pa(t) : t);
      });
      function pa(n3) {
        return Oi2(U5(n3).toLowerCase());
      }
      function da(n3) {
        return n3 = U5(n3), n3 && n3.replace(mo2, af).replace(Uo2, "");
      }
      function md(n3, t, e) {
        n3 = U5(n3), t = ln(t);
        var r2 = n3.length;
        e = e === i3 ? r2 : gt3(R2(e), 0, r2);
        var s2 = e;
        return e -= t.length, e >= 0 && n3.slice(e, s2) == t;
      }
      function wd(n3) {
        return n3 = U5(n3), n3 && Va.test(n3) ? n3.replace(Ki2, of) : n3;
      }
      function Pd(n3) {
        return n3 = U5(n3), n3 && ro2.test(n3) ? n3.replace(Ir3, "\\$&") : n3;
      }
      var Ad = Wt2(function(n3, t, e) {
        return n3 + (e ? "-" : "") + t.toLowerCase();
      }), Cd = Wt2(function(n3, t, e) {
        return n3 + (e ? " " : "") + t.toLowerCase();
      }), Id = _u("toLowerCase");
      function xd(n3, t, e) {
        n3 = U5(n3), t = R2(t);
        var r2 = t ? Tt4(n3) : 0;
        if (!t || r2 >= t)
          return n3;
        var s2 = (t - r2) / 2;
        return Xe4($e5(s2), e) + n3 + Xe4(He4(s2), e);
      }
      function Ed(n3, t, e) {
        n3 = U5(n3), t = R2(t);
        var r2 = t ? Tt4(n3) : 0;
        return t && r2 < t ? n3 + Xe4(t - r2, e) : n3;
      }
      function yd(n3, t, e) {
        n3 = U5(n3), t = R2(t);
        var r2 = t ? Tt4(n3) : 0;
        return t && r2 < t ? Xe4(t - r2, e) + n3 : n3;
      }
      function Sd(n3, t, e) {
        return e || t == null ? t = 0 : t && (t = +t), Nf(U5(n3).replace(xr2, ""), t || 0);
      }
      function Od(n3, t, e) {
        return (e ? rn3(n3, t, e) : t === i3) ? t = 1 : t = R2(t), ei(U5(n3), t);
      }
      function Rd() {
        var n3 = arguments, t = U5(n3[0]);
        return n3.length < 3 ? t : t.replace(n3[1], n3[2]);
      }
      var bd = Wt2(function(n3, t, e) {
        return n3 + (e ? "_" : "") + t.toLowerCase();
      });
      function Td(n3, t, e) {
        return e && typeof e != "number" && rn3(n3, t, e) && (t = e = i3), e = e === i3 ? Hn2 : e >>> 0, e ? (n3 = U5(n3), n3 && (typeof t == "string" || t != null && !Ei(t)) && (t = ln(t), !t && bt3(n3)) ? ut4(On3(n3), 0, e) : n3.split(t, e)) : [];
      }
      var Ld = Wt2(function(n3, t, e) {
        return n3 + (e ? " " : "") + Oi2(t);
      });
      function Dd(n3, t, e) {
        return n3 = U5(n3), e = e == null ? 0 : gt3(R2(e), 0, n3.length), t = ln(t), n3.slice(e, e + t.length) == t;
      }
      function Nd(n3, t, e) {
        var r2 = a2.templateSettings;
        e && rn3(n3, t, e) && (t = i3), n3 = U5(n3), t = ar3({}, t, r2, xu);
        var s2 = ar3({}, t.imports, r2.imports, xu), o = V2(s2), f5 = Fr2(s2, o), c4, l3, v3 = 0, _5 = t.interpolate || Pe3, m3 = "__p += '", w5 = qr2((t.escape || Pe3).source + "|" + _5.source + "|" + (_5 === Yi2 ? ho2 : Pe3).source + "|" + (t.evaluate || Pe3).source + "|$", "g"), A = "//# sourceURL=" + (W3.call(t, "sourceURL") ? (t.sourceURL + "").replace(/\s/g, " ") : "lodash.templateSources[" + ++Bo2 + "]") + `
`;
        n3.replace(w5, function(y5, L4, H5, dn, sn2, gn2) {
          return H5 || (H5 = dn), m3 += n3.slice(v3, gn2).replace(wo2, ff), L4 && (c4 = true, m3 += `' +
__e(` + L4 + `) +
'`), sn2 && (l3 = true, m3 += `';
` + sn2 + `;
__p += '`), H5 && (m3 += `' +
((__t = (` + H5 + `)) == null ? '' : __t) +
'`), v3 = gn2 + y5.length, y5;
        }), m3 += `';
`;
        var E5 = W3.call(t, "variable") && t.variable;
        if (!E5)
          m3 = `with (obj) {
` + m3 + `
}
`;
        else if (fo2.test(E5))
          throw new S5(Fn3);
        m3 = (l3 ? m3.replace(Za, "") : m3).replace(Ja, "$1").replace(Xa, "$1;"), m3 = "function(" + (E5 || "obj") + `) {
` + (E5 ? "" : `obj || (obj = {});
`) + "var __t, __p = ''" + (c4 ? ", __e = _.escape" : "") + (l3 ? `, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
` : `;
`) + m3 + `return __p
}`;
        var b6 = va(function() {
          return $4(o, A + "return " + m3).apply(i3, f5);
        });
        if (b6.source = m3, xi(b6))
          throw b6;
        return b6;
      }
      function Hd(n3) {
        return U5(n3).toLowerCase();
      }
      function $d(n3) {
        return U5(n3).toUpperCase();
      }
      function Ud(n3, t, e) {
        if (n3 = U5(n3), n3 && (e || t === i3))
          return Es2(n3);
        if (!n3 || !(t = ln(t)))
          return n3;
        var r2 = On3(n3), s2 = On3(t), o = ys2(r2, s2), f5 = Ss2(r2, s2) + 1;
        return ut4(r2, o, f5).join("");
      }
      function Wd(n3, t, e) {
        if (n3 = U5(n3), n3 && (e || t === i3))
          return n3.slice(0, Rs2(n3) + 1);
        if (!n3 || !(t = ln(t)))
          return n3;
        var r2 = On3(n3), s2 = Ss2(r2, On3(t)) + 1;
        return ut4(r2, 0, s2).join("");
      }
      function Fd(n3, t, e) {
        if (n3 = U5(n3), n3 && (e || t === i3))
          return n3.replace(xr2, "");
        if (!n3 || !(t = ln(t)))
          return n3;
        var r2 = On3(n3), s2 = ys2(r2, On3(t));
        return ut4(r2, s2).join("");
      }
      function Md(n3, t) {
        var e = Ta, r2 = La;
        if (z5(t)) {
          var s2 = "separator" in t ? t.separator : s2;
          e = "length" in t ? R2(t.length) : e, r2 = "omission" in t ? ln(t.omission) : r2;
        }
        n3 = U5(n3);
        var o = n3.length;
        if (bt3(n3)) {
          var f5 = On3(n3);
          o = f5.length;
        }
        if (e >= o)
          return n3;
        var c4 = e - Tt4(r2);
        if (c4 < 1)
          return r2;
        var l3 = f5 ? ut4(f5, 0, c4).join("") : n3.slice(0, c4);
        if (s2 === i3)
          return l3 + r2;
        if (f5 && (c4 += l3.length - c4), Ei(s2)) {
          if (n3.slice(c4).search(s2)) {
            var v3, _5 = l3;
            for (s2.global || (s2 = qr2(s2.source, U5(Zi2.exec(s2)) + "g")), s2.lastIndex = 0; v3 = s2.exec(_5); )
              var m3 = v3.index;
            l3 = l3.slice(0, m3 === i3 ? c4 : m3);
          }
        } else if (n3.indexOf(ln(s2), c4) != c4) {
          var w5 = l3.lastIndexOf(s2);
          w5 > -1 && (l3 = l3.slice(0, w5));
        }
        return l3 + r2;
      }
      function qd(n3) {
        return n3 = U5(n3), n3 && Qa.test(n3) ? n3.replace(zi, vf) : n3;
      }
      var Bd = Wt2(function(n3, t, e) {
        return n3 + (e ? " " : "") + t.toUpperCase();
      }), Oi2 = _u("toUpperCase");
      function ga(n3, t, e) {
        return n3 = U5(n3), t = e ? i3 : t, t === i3 ? hf(n3) ? wf(n3) : tf(n3) : n3.match(t) || [];
      }
      var va = T2(function(n3, t) {
        try {
          return cn2(n3, i3, t);
        } catch (e) {
          return xi(e) ? e : new S5(e);
        }
      }), Gd = Zn2(function(n3, t) {
        return mn3(t, function(e) {
          e = Wn2(e), Kn3(n3, e, Ci(n3[e], n3));
        }), n3;
      });
      function zd(n3) {
        var t = n3 == null ? 0 : n3.length, e = x5();
        return n3 = t ? G4(n3, function(r2) {
          if (typeof r2[1] != "function")
            throw new wn2(F2);
          return [e(r2[0]), r2[1]];
        }) : [], T2(function(r2) {
          for (var s2 = -1; ++s2 < t; ) {
            var o = n3[s2];
            if (cn2(o[0], this, r2))
              return cn2(o[1], this, r2);
          }
        });
      }
      function Kd(n3) {
        return vc(An3(n3, Ln2));
      }
      function Ri(n3) {
        return function() {
          return n3;
        };
      }
      function Yd(n3, t) {
        return n3 == null || n3 !== n3 ? t : n3;
      }
      var Zd = wu(), Jd = wu(true);
      function fn(n3) {
        return n3;
      }
      function bi(n3) {
        return Xs2(typeof n3 == "function" ? n3 : An3(n3, Ln2));
      }
      function Xd(n3) {
        return Vs2(An3(n3, Ln2));
      }
      function Qd(n3, t) {
        return ks2(n3, An3(t, Ln2));
      }
      var Vd = T2(function(n3, t) {
        return function(e) {
          return ue3(e, n3, t);
        };
      }), kd = T2(function(n3, t) {
        return function(e) {
          return ue3(n3, e, t);
        };
      });
      function Ti(n3, t, e) {
        var r2 = V2(t), s2 = Be3(t, r2);
        e == null && !(z5(t) && (s2.length || !r2.length)) && (e = t, t = n3, n3 = this, s2 = Be3(t, V2(t)));
        var o = !(z5(e) && "chain" in e) || !!e.chain, f5 = Xn3(n3);
        return mn3(s2, function(c4) {
          var l3 = t[c4];
          n3[c4] = l3, f5 && (n3.prototype[c4] = function() {
            var v3 = this.__chain__;
            if (o || v3) {
              var _5 = n3(this.__wrapped__), m3 = _5.__actions__ = un2(this.__actions__);
              return m3.push({ func: l3, args: arguments, thisArg: n3 }), _5.__chain__ = v3, _5;
            }
            return l3.apply(n3, nt4([this.value()], arguments));
          });
        }), n3;
      }
      function jd() {
        return k5._ === this && (k5._ = Ef), this;
      }
      function Li2() {
      }
      function ng(n3) {
        return n3 = R2(n3), T2(function(t) {
          return js2(t, n3);
        });
      }
      var tg = fi(G4), eg = fi(Ps2), rg = fi(Nr2);
      function _a(n3) {
        return vi(n3) ? Hr2(Wn2(n3)) : Dc(n3);
      }
      function ig(n3) {
        return function(t) {
          return n3 == null ? i3 : vt3(n3, t);
        };
      }
      var sg = Au(), ug = Au(true);
      function Di() {
        return [];
      }
      function Ni() {
        return false;
      }
      function ag() {
        return {};
      }
      function og() {
        return "";
      }
      function fg() {
        return true;
      }
      function cg(n3, t) {
        if (n3 = R2(n3), n3 < 1 || n3 > kn3)
          return [];
        var e = Hn2, r2 = nn2(n3, Hn2);
        t = x5(t), n3 -= Hn2;
        for (var s2 = Wr2(r2, t); ++e < n3; )
          t(e);
        return s2;
      }
      function hg(n3) {
        return O7(n3) ? G4(n3, Wn2) : pn2(n3) ? [n3] : un2(Uu(U5(n3)));
      }
      function lg(n3) {
        var t = ++If;
        return U5(n3) + t;
      }
      var pg = Je4(function(n3, t) {
        return n3 + t;
      }, 0), dg = ci("ceil"), gg = Je4(function(n3, t) {
        return n3 / t;
      }, 1), vg = ci("floor");
      function _g(n3) {
        return n3 && n3.length ? qe4(n3, fn, Xr2) : i3;
      }
      function mg(n3, t) {
        return n3 && n3.length ? qe4(n3, x5(t, 2), Xr2) : i3;
      }
      function wg(n3) {
        return Is2(n3, fn);
      }
      function Pg(n3, t) {
        return Is2(n3, x5(t, 2));
      }
      function Ag(n3) {
        return n3 && n3.length ? qe4(n3, fn, jr2) : i3;
      }
      function Cg(n3, t) {
        return n3 && n3.length ? qe4(n3, x5(t, 2), jr2) : i3;
      }
      var Ig = Je4(function(n3, t) {
        return n3 * t;
      }, 1), xg = ci("round"), Eg = Je4(function(n3, t) {
        return n3 - t;
      }, 0);
      function yg(n3) {
        return n3 && n3.length ? Ur2(n3, fn) : 0;
      }
      function Sg(n3, t) {
        return n3 && n3.length ? Ur2(n3, x5(t, 2)) : 0;
      }
      return a2.after = Xl, a2.ary = Ju, a2.assign = $p, a2.assignIn = oa, a2.assignInWith = ar3, a2.assignWith = Up, a2.at = Wp, a2.before = Xu, a2.bind = Ci, a2.bindAll = Gd, a2.bindKey = Qu, a2.castArray = ap, a2.chain = Ku, a2.chunk = vh, a2.compact = _h, a2.concat = mh, a2.cond = zd, a2.conforms = Kd, a2.constant = Ri, a2.countBy = yl, a2.create = Fp, a2.curry = Vu, a2.curryRight = ku, a2.debounce = ju, a2.defaults = Mp, a2.defaultsDeep = qp, a2.defer = Ql, a2.delay = Vl, a2.difference = wh, a2.differenceBy = Ph, a2.differenceWith = Ah, a2.drop = Ch, a2.dropRight = Ih, a2.dropRightWhile = xh, a2.dropWhile = Eh, a2.fill = yh, a2.filter = Ol, a2.flatMap = Tl, a2.flatMapDeep = Ll, a2.flatMapDepth = Dl, a2.flatten = qu, a2.flattenDeep = Sh, a2.flattenDepth = Oh, a2.flip = kl, a2.flow = Zd, a2.flowRight = Jd, a2.fromPairs = Rh, a2.functions = Jp, a2.functionsIn = Xp, a2.groupBy = Nl, a2.initial = Th, a2.intersection = Lh, a2.intersectionBy = Dh, a2.intersectionWith = Nh, a2.invert = Vp, a2.invertBy = kp, a2.invokeMap = $l, a2.iteratee = bi, a2.keyBy = Ul, a2.keys = V2, a2.keysIn = on3, a2.map = tr3, a2.mapKeys = nd, a2.mapValues = td, a2.matches = Xd, a2.matchesProperty = Qd, a2.memoize = rr3, a2.merge = ed, a2.mergeWith = fa, a2.method = Vd, a2.methodOf = kd, a2.mixin = Ti, a2.negate = ir3, a2.nthArg = ng, a2.omit = rd, a2.omitBy = id, a2.once = jl, a2.orderBy = Wl, a2.over = tg, a2.overArgs = np, a2.overEvery = eg, a2.overSome = rg, a2.partial = Ii, a2.partialRight = na, a2.partition = Fl, a2.pick = sd, a2.pickBy = ca, a2.property = _a, a2.propertyOf = ig, a2.pull = Wh, a2.pullAll = Gu, a2.pullAllBy = Fh, a2.pullAllWith = Mh, a2.pullAt = qh, a2.range = sg, a2.rangeRight = ug, a2.rearg = tp, a2.reject = Bl, a2.remove = Bh, a2.rest = ep, a2.reverse = Pi2, a2.sampleSize = zl, a2.set = ad, a2.setWith = od, a2.shuffle = Kl, a2.slice = Gh, a2.sortBy = Jl, a2.sortedUniq = Qh, a2.sortedUniqBy = Vh, a2.split = Td, a2.spread = rp, a2.tail = kh, a2.take = jh, a2.takeRight = nl, a2.takeRightWhile = tl, a2.takeWhile = el, a2.tap = _l, a2.throttle = ip, a2.thru = nr3, a2.toArray = sa, a2.toPairs = ha, a2.toPairsIn = la, a2.toPath = hg, a2.toPlainObject = aa, a2.transform = fd, a2.unary = sp, a2.union = rl, a2.unionBy = il, a2.unionWith = sl, a2.uniq = ul, a2.uniqBy = al, a2.uniqWith = ol, a2.unset = cd, a2.unzip = Ai, a2.unzipWith = zu, a2.update = hd, a2.updateWith = ld, a2.values = qt3, a2.valuesIn = pd, a2.without = fl, a2.words = ga, a2.wrap = up, a2.xor = cl, a2.xorBy = hl, a2.xorWith = ll, a2.zip = pl, a2.zipObject = dl, a2.zipObjectDeep = gl, a2.zipWith = vl, a2.entries = ha, a2.entriesIn = la, a2.extend = oa, a2.extendWith = ar3, Ti(a2, a2), a2.add = pg, a2.attempt = va, a2.camelCase = _d, a2.capitalize = pa, a2.ceil = dg, a2.clamp = dd, a2.clone = op, a2.cloneDeep = cp, a2.cloneDeepWith = hp, a2.cloneWith = fp, a2.conformsTo = lp, a2.deburr = da, a2.defaultTo = Yd, a2.divide = gg, a2.endsWith = md, a2.eq = bn2, a2.escape = wd, a2.escapeRegExp = Pd, a2.every = Sl, a2.find = Rl, a2.findIndex = Fu, a2.findKey = Bp, a2.findLast = bl, a2.findLastIndex = Mu, a2.findLastKey = Gp, a2.floor = vg, a2.forEach = Yu, a2.forEachRight = Zu, a2.forIn = zp, a2.forInRight = Kp, a2.forOwn = Yp, a2.forOwnRight = Zp, a2.get = yi, a2.gt = pp, a2.gte = dp, a2.has = Qp, a2.hasIn = Si2, a2.head = Bu, a2.identity = fn, a2.includes = Hl, a2.indexOf = bh, a2.inRange = gd, a2.invoke = jp, a2.isArguments = wt4, a2.isArray = O7, a2.isArrayBuffer = gp, a2.isArrayLike = an2, a2.isArrayLikeObject = Y2, a2.isBoolean = vp, a2.isBuffer = at3, a2.isDate = _p, a2.isElement = mp, a2.isEmpty = wp, a2.isEqual = Pp, a2.isEqualWith = Ap, a2.isError = xi, a2.isFinite = Cp, a2.isFunction = Xn3, a2.isInteger = ta, a2.isLength = sr3, a2.isMap = ea, a2.isMatch = Ip, a2.isMatchWith = xp, a2.isNaN = Ep, a2.isNative = yp, a2.isNil = Op, a2.isNull = Sp, a2.isNumber = ra, a2.isObject = z5, a2.isObjectLike = K4, a2.isPlainObject = le3, a2.isRegExp = Ei, a2.isSafeInteger = Rp, a2.isSet = ia, a2.isString = ur2, a2.isSymbol = pn2, a2.isTypedArray = Mt4, a2.isUndefined = bp, a2.isWeakMap = Tp, a2.isWeakSet = Lp, a2.join = Hh, a2.kebabCase = Ad, a2.last = In2, a2.lastIndexOf = $h, a2.lowerCase = Cd, a2.lowerFirst = Id, a2.lt = Dp, a2.lte = Np, a2.max = _g, a2.maxBy = mg, a2.mean = wg, a2.meanBy = Pg, a2.min = Ag, a2.minBy = Cg, a2.stubArray = Di, a2.stubFalse = Ni, a2.stubObject = ag, a2.stubString = og, a2.stubTrue = fg, a2.multiply = Ig, a2.nth = Uh, a2.noConflict = jd, a2.noop = Li2, a2.now = er3, a2.pad = xd, a2.padEnd = Ed, a2.padStart = yd, a2.parseInt = Sd, a2.random = vd, a2.reduce = Ml, a2.reduceRight = ql, a2.repeat = Od, a2.replace = Rd, a2.result = ud, a2.round = xg, a2.runInContext = h4, a2.sample = Gl, a2.size = Yl, a2.snakeCase = bd, a2.some = Zl, a2.sortedIndex = zh, a2.sortedIndexBy = Kh, a2.sortedIndexOf = Yh, a2.sortedLastIndex = Zh, a2.sortedLastIndexBy = Jh, a2.sortedLastIndexOf = Xh, a2.startCase = Ld, a2.startsWith = Dd, a2.subtract = Eg, a2.sum = yg, a2.sumBy = Sg, a2.template = Nd, a2.times = cg, a2.toFinite = Qn2, a2.toInteger = R2, a2.toLength = ua, a2.toLower = Hd, a2.toNumber = xn2, a2.toSafeInteger = Hp, a2.toString = U5, a2.toUpper = $d, a2.trim = Ud, a2.trimEnd = Wd, a2.trimStart = Fd, a2.truncate = Md, a2.unescape = qd, a2.uniqueId = lg, a2.upperCase = Bd, a2.upperFirst = Oi2, a2.each = Yu, a2.eachRight = Zu, a2.first = Bu, Ti(a2, function() {
        var n3 = {};
        return $n3(a2, function(t, e) {
          W3.call(a2.prototype, e) || (n3[e] = t);
        }), n3;
      }(), { chain: false }), a2.VERSION = p5, mn3(["bind", "bindKey", "curry", "curryRight", "partial", "partialRight"], function(n3) {
        a2[n3].placeholder = a2;
      }), mn3(["drop", "take"], function(n3, t) {
        N14.prototype[n3] = function(e) {
          e = e === i3 ? 1 : Q5(R2(e), 0);
          var r2 = this.__filtered__ && !t ? new N14(this) : this.clone();
          return r2.__filtered__ ? r2.__takeCount__ = nn2(e, r2.__takeCount__) : r2.__views__.push({ size: nn2(e, Hn2), type: n3 + (r2.__dir__ < 0 ? "Right" : "") }), r2;
        }, N14.prototype[n3 + "Right"] = function(e) {
          return this.reverse()[n3](e).reverse();
        };
      }), mn3(["filter", "map", "takeWhile"], function(n3, t) {
        var e = t + 1, r2 = e == qi2 || e == $a;
        N14.prototype[n3] = function(s2) {
          var o = this.clone();
          return o.__iteratees__.push({ iteratee: x5(s2, 3), type: e }), o.__filtered__ = o.__filtered__ || r2, o;
        };
      }), mn3(["head", "last"], function(n3, t) {
        var e = "take" + (t ? "Right" : "");
        N14.prototype[n3] = function() {
          return this[e](1).value()[0];
        };
      }), mn3(["initial", "tail"], function(n3, t) {
        var e = "drop" + (t ? "" : "Right");
        N14.prototype[n3] = function() {
          return this.__filtered__ ? new N14(this) : this[e](1);
        };
      }), N14.prototype.compact = function() {
        return this.filter(fn);
      }, N14.prototype.find = function(n3) {
        return this.filter(n3).head();
      }, N14.prototype.findLast = function(n3) {
        return this.reverse().find(n3);
      }, N14.prototype.invokeMap = T2(function(n3, t) {
        return typeof n3 == "function" ? new N14(this) : this.map(function(e) {
          return ue3(e, n3, t);
        });
      }), N14.prototype.reject = function(n3) {
        return this.filter(ir3(x5(n3)));
      }, N14.prototype.slice = function(n3, t) {
        n3 = R2(n3);
        var e = this;
        return e.__filtered__ && (n3 > 0 || t < 0) ? new N14(e) : (n3 < 0 ? e = e.takeRight(-n3) : n3 && (e = e.drop(n3)), t !== i3 && (t = R2(t), e = t < 0 ? e.dropRight(-t) : e.take(t - n3)), e);
      }, N14.prototype.takeRightWhile = function(n3) {
        return this.reverse().takeWhile(n3).reverse();
      }, N14.prototype.toArray = function() {
        return this.take(Hn2);
      }, $n3(N14.prototype, function(n3, t) {
        var e = /^(?:filter|find|map|reject)|While$/.test(t), r2 = /^(?:head|last)$/.test(t), s2 = a2[r2 ? "take" + (t == "last" ? "Right" : "") : t], o = r2 || /^find/.test(t);
        s2 && (a2.prototype[t] = function() {
          var f5 = this.__wrapped__, c4 = r2 ? [1] : arguments, l3 = f5 instanceof N14, v3 = c4[0], _5 = l3 || O7(f5), m3 = function(L4) {
            var H5 = s2.apply(a2, nt4([L4], c4));
            return r2 && w5 ? H5[0] : H5;
          };
          _5 && e && typeof v3 == "function" && v3.length != 1 && (l3 = _5 = false);
          var w5 = this.__chain__, A = !!this.__actions__.length, E5 = o && !w5, b6 = l3 && !A;
          if (!o && _5) {
            f5 = b6 ? f5 : new N14(this);
            var y5 = n3.apply(f5, c4);
            return y5.__actions__.push({ func: nr3, args: [m3], thisArg: i3 }), new Pn2(y5, w5);
          }
          return E5 && b6 ? n3.apply(this, c4) : (y5 = this.thru(m3), E5 ? r2 ? y5.value()[0] : y5.value() : y5);
        });
      }), mn3(["pop", "push", "shift", "sort", "splice", "unshift"], function(n3) {
        var t = ye2[n3], e = /^(?:push|sort|unshift)$/.test(n3) ? "tap" : "thru", r2 = /^(?:pop|shift)$/.test(n3);
        a2.prototype[n3] = function() {
          var s2 = arguments;
          if (r2 && !this.__chain__) {
            var o = this.value();
            return t.apply(O7(o) ? o : [], s2);
          }
          return this[e](function(f5) {
            return t.apply(O7(f5) ? f5 : [], s2);
          });
        };
      }), $n3(N14.prototype, function(n3, t) {
        var e = a2[t];
        if (e) {
          var r2 = e.name + "";
          W3.call(Ht3, r2) || (Ht3[r2] = []), Ht3[r2].push({ name: t, func: e });
        }
      }), Ht3[Ze5(i3, ft4).name] = [{ name: "wrapper", func: i3 }], N14.prototype.clone = qf, N14.prototype.reverse = Bf, N14.prototype.value = Gf, a2.prototype.at = ml, a2.prototype.chain = wl, a2.prototype.commit = Pl, a2.prototype.next = Al, a2.prototype.plant = Il, a2.prototype.reverse = xl, a2.prototype.toJSON = a2.prototype.valueOf = a2.prototype.value = El, a2.prototype.first = a2.prototype.head, jt3 && (a2.prototype[jt3] = Cl), a2;
    }, Lt4 = Pf();
    ht3 ? ((ht3.exports = Lt4)._ = Lt4, br3._ = Lt4) : k5._ = Lt4;
  }).call(pe4);
})($i2, $i2.exports);
var Fg = Object.defineProperty;
var Mg = Object.defineProperties;
var qg = Object.getOwnPropertyDescriptors;
var xa = Object.getOwnPropertySymbols;
var Bg = Object.prototype.hasOwnProperty;
var Gg = Object.prototype.propertyIsEnumerable;
var Ea = (C5, u4, i3) => u4 in C5 ? Fg(C5, u4, { enumerable: true, configurable: true, writable: true, value: i3 }) : C5[u4] = i3;
var fr3 = (C5, u4) => {
  for (var i3 in u4 || (u4 = {}))
    Bg.call(u4, i3) && Ea(C5, i3, u4[i3]);
  if (xa)
    for (var i3 of xa(u4))
      Gg.call(u4, i3) && Ea(C5, i3, u4[i3]);
  return C5;
};
var zg = (C5, u4) => Mg(C5, qg(u4));
function En3(C5, u4, i3) {
  let p5;
  const I2 = Ui(C5);
  return u4.rpcMap && (p5 = u4.rpcMap[I2]), p5 || (p5 = `${Wg}?chainId=eip155:${I2}&projectId=${i3}`), p5;
}
function Ui(C5) {
  return C5.includes("eip155") ? Number(C5.split(":")[1]) : Number(C5);
}
function ya(C5) {
  return C5.map((u4) => `${u4.split(":")[0]}:${u4.split(":")[1]}`);
}
function Kg(C5, u4) {
  const i3 = Object.keys(u4.namespaces).filter((I2) => I2.includes(C5));
  if (!i3.length)
    return [];
  const p5 = [];
  return i3.forEach((I2) => {
    const D4 = u4.namespaces[I2].accounts;
    p5.push(...D4);
  }), p5;
}
function Yg(C5 = {}, u4 = {}) {
  const i3 = Sa(C5), p5 = Sa(u4);
  return $i2.exports.merge(i3, p5);
}
function Sa(C5) {
  var u4, i3, p5, I2;
  const D4 = {};
  if (!H(C5))
    return D4;
  for (const [F2, Fn3] of Object.entries(C5)) {
    const Gt2 = te(F2) ? [F2] : Fn3.chains, lr3 = Fn3.methods || [], At3 = Fn3.events || [], Ln2 = Fn3.rpcMap || {}, Mn3 = Ze(F2);
    D4[Mn3] = zg(fr3(fr3({}, D4[Mn3]), Fn3), { chains: S(Gt2, (u4 = D4[Mn3]) == null ? void 0 : u4.chains), methods: S(lr3, (i3 = D4[Mn3]) == null ? void 0 : i3.methods), events: S(At3, (p5 = D4[Mn3]) == null ? void 0 : p5.events), rpcMap: fr3(fr3({}, Ln2), (I2 = D4[Mn3]) == null ? void 0 : I2.rpcMap) });
  }
  return D4;
}
function Zg(C5) {
  return C5.includes(":") ? C5.split(":")[2] : C5;
}
function Jg(C5) {
  const u4 = {};
  for (const [i3, p5] of Object.entries(C5)) {
    const I2 = p5.methods || [], D4 = p5.events || [], F2 = p5.accounts || [], Fn3 = te(i3) ? [i3] : p5.chains ? p5.chains : ya(p5.accounts);
    u4[i3] = { chains: Fn3, methods: I2, events: D4, accounts: F2 };
  }
  return u4;
}
var Oa = {};
var J5 = (C5) => Oa[C5];
var Wi2 = (C5, u4) => {
  Oa[C5] = u4;
};
var Xg = class {
  constructor(u4) {
    this.name = "polkadot", this.namespace = u4.namespace, this.events = J5("events"), this.client = J5("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
  }
  updateNamespace(u4) {
    this.namespace = Object.assign(this.namespace, u4);
  }
  requestAccounts() {
    return this.getAccounts();
  }
  getDefaultChain() {
    if (this.chainId)
      return this.chainId;
    if (this.namespace.defaultChain)
      return this.namespace.defaultChain;
    const u4 = this.namespace.chains[0];
    if (!u4)
      throw new Error("ChainId not found");
    return u4.split(":")[1];
  }
  request(u4) {
    return this.namespace.methods.includes(u4.request.method) ? this.client.request(u4) : this.getHttpProvider().request(u4.request);
  }
  setDefaultChain(u4, i3) {
    if (this.chainId = u4, !this.httpProviders[u4]) {
      const p5 = i3 || En3(`${this.name}:${u4}`, this.namespace);
      if (!p5)
        throw new Error(`No RPC url provided for chainId: ${u4}`);
      this.setHttpProvider(u4, p5);
    }
    this.events.emit(ot3.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);
  }
  getAccounts() {
    const u4 = this.namespace.accounts;
    return u4 ? u4.filter((i3) => i3.split(":")[1] === this.chainId.toString()).map((i3) => i3.split(":")[2]) || [] : [];
  }
  createHttpProviders() {
    const u4 = {};
    return this.namespace.chains.forEach((i3) => {
      var p5;
      u4[i3] = this.createHttpProvider(i3, (p5 = this.namespace.rpcMap) == null ? void 0 : p5[i3]);
    }), u4;
  }
  getHttpProvider() {
    const u4 = `${this.name}:${this.chainId}`, i3 = this.httpProviders[u4];
    if (typeof i3 > "u")
      throw new Error(`JSON-RPC provider for ${u4} not found`);
    return i3;
  }
  setHttpProvider(u4, i3) {
    const p5 = this.createHttpProvider(u4, i3);
    p5 && (this.httpProviders[u4] = p5);
  }
  createHttpProvider(u4, i3) {
    const p5 = i3 || En3(u4, this.namespace);
    return typeof p5 > "u" ? void 0 : new JsonRpcProvider2(new f(p5, J5("disableProviderPing")));
  }
};
var Qg = class {
  constructor(u4) {
    this.name = "eip155", this.namespace = u4.namespace, this.events = J5("events"), this.client = J5("client"), this.httpProviders = this.createHttpProviders(), this.chainId = parseInt(this.getDefaultChain());
  }
  async request(u4) {
    switch (u4.request.method) {
      case "eth_requestAccounts":
        return this.getAccounts();
      case "eth_accounts":
        return this.getAccounts();
      case "wallet_switchEthereumChain":
        return await this.handleSwitchChain(u4);
      case "eth_chainId":
        return parseInt(this.getDefaultChain());
    }
    return this.namespace.methods.includes(u4.request.method) ? await this.client.request(u4) : this.getHttpProvider().request(u4.request);
  }
  updateNamespace(u4) {
    this.namespace = Object.assign(this.namespace, u4);
  }
  setDefaultChain(u4, i3) {
    const p5 = Ui(u4);
    if (!this.httpProviders[p5]) {
      const I2 = i3 || En3(`${this.name}:${p5}`, this.namespace, this.client.core.projectId);
      if (!I2)
        throw new Error(`No RPC url provided for chainId: ${p5}`);
      this.setHttpProvider(p5, I2);
    }
    this.chainId = p5, this.events.emit(ot3.DEFAULT_CHAIN_CHANGED, `${this.name}:${p5}`);
  }
  requestAccounts() {
    return this.getAccounts();
  }
  getDefaultChain() {
    if (this.chainId)
      return this.chainId.toString();
    if (this.namespace.defaultChain)
      return this.namespace.defaultChain;
    const u4 = this.namespace.chains[0];
    if (!u4)
      throw new Error("ChainId not found");
    return u4.split(":")[1];
  }
  createHttpProvider(u4, i3) {
    const p5 = i3 || En3(`${this.name}:${u4}`, this.namespace, this.client.core.projectId);
    return typeof p5 > "u" ? void 0 : new JsonRpcProvider2(new f(p5, J5("disableProviderPing")));
  }
  setHttpProvider(u4, i3) {
    const p5 = this.createHttpProvider(u4, i3);
    p5 && (this.httpProviders[u4] = p5);
  }
  createHttpProviders() {
    const u4 = {};
    return this.namespace.chains.forEach((i3) => {
      var p5;
      const I2 = Ui(i3);
      u4[I2] = this.createHttpProvider(I2, (p5 = this.namespace.rpcMap) == null ? void 0 : p5[i3]);
    }), u4;
  }
  getAccounts() {
    const u4 = this.namespace.accounts;
    return u4 ? [...new Set(u4.filter((i3) => i3.split(":")[1] === this.chainId.toString()).map((i3) => i3.split(":")[2]))] : [];
  }
  getHttpProvider() {
    const u4 = this.chainId, i3 = this.httpProviders[u4];
    if (typeof i3 > "u")
      throw new Error(`JSON-RPC provider for ${u4} not found`);
    return i3;
  }
  async handleSwitchChain(u4) {
    var i3, p5;
    let I2 = u4.request.params ? (i3 = u4.request.params[0]) == null ? void 0 : i3.chainId : "0x0";
    I2 = I2.startsWith("0x") ? I2 : `0x${I2}`;
    const D4 = parseInt(I2, 16);
    if (this.isChainApproved(D4))
      this.setDefaultChain(`${D4}`);
    else if (this.namespace.methods.includes("wallet_switchEthereumChain"))
      await this.client.request({ topic: u4.topic, request: { method: u4.request.method, params: [{ chainId: I2 }] }, chainId: (p5 = this.namespace.chains) == null ? void 0 : p5[0] }), this.setDefaultChain(`${D4}`);
    else
      throw new Error(`Failed to switch to chain 'eip155:${D4}'. The chain is not approved or the wallet does not support 'wallet_switchEthereumChain' method.`);
    return null;
  }
  isChainApproved(u4) {
    return this.namespace.chains.includes(`${this.name}:${u4}`);
  }
};
var Vg = class {
  constructor(u4) {
    this.name = "solana", this.namespace = u4.namespace, this.events = J5("events"), this.client = J5("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
  }
  updateNamespace(u4) {
    this.namespace = Object.assign(this.namespace, u4);
  }
  requestAccounts() {
    return this.getAccounts();
  }
  request(u4) {
    return this.namespace.methods.includes(u4.request.method) ? this.client.request(u4) : this.getHttpProvider().request(u4.request);
  }
  setDefaultChain(u4, i3) {
    if (!this.httpProviders[u4]) {
      const p5 = i3 || En3(`${this.name}:${u4}`, this.namespace, this.client.core.projectId);
      if (!p5)
        throw new Error(`No RPC url provided for chainId: ${u4}`);
      this.setHttpProvider(u4, p5);
    }
    this.chainId = u4, this.events.emit(ot3.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);
  }
  getDefaultChain() {
    if (this.chainId)
      return this.chainId;
    if (this.namespace.defaultChain)
      return this.namespace.defaultChain;
    const u4 = this.namespace.chains[0];
    if (!u4)
      throw new Error("ChainId not found");
    return u4.split(":")[1];
  }
  getAccounts() {
    const u4 = this.namespace.accounts;
    return u4 ? [...new Set(u4.filter((i3) => i3.split(":")[1] === this.chainId.toString()).map((i3) => i3.split(":")[2]))] : [];
  }
  createHttpProviders() {
    const u4 = {};
    return this.namespace.chains.forEach((i3) => {
      var p5;
      u4[i3] = this.createHttpProvider(i3, (p5 = this.namespace.rpcMap) == null ? void 0 : p5[i3]);
    }), u4;
  }
  getHttpProvider() {
    const u4 = `${this.name}:${this.chainId}`, i3 = this.httpProviders[u4];
    if (typeof i3 > "u")
      throw new Error(`JSON-RPC provider for ${u4} not found`);
    return i3;
  }
  setHttpProvider(u4, i3) {
    const p5 = this.createHttpProvider(u4, i3);
    p5 && (this.httpProviders[u4] = p5);
  }
  createHttpProvider(u4, i3) {
    const p5 = i3 || En3(u4, this.namespace, this.client.core.projectId);
    return typeof p5 > "u" ? void 0 : new JsonRpcProvider2(new f(p5, J5("disableProviderPing")));
  }
};
var kg = class {
  constructor(u4) {
    this.name = "cosmos", this.namespace = u4.namespace, this.events = J5("events"), this.client = J5("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
  }
  updateNamespace(u4) {
    this.namespace = Object.assign(this.namespace, u4);
  }
  requestAccounts() {
    return this.getAccounts();
  }
  getDefaultChain() {
    if (this.chainId)
      return this.chainId;
    if (this.namespace.defaultChain)
      return this.namespace.defaultChain;
    const u4 = this.namespace.chains[0];
    if (!u4)
      throw new Error("ChainId not found");
    return u4.split(":")[1];
  }
  request(u4) {
    return this.namespace.methods.includes(u4.request.method) ? this.client.request(u4) : this.getHttpProvider().request(u4.request);
  }
  setDefaultChain(u4, i3) {
    if (this.chainId = u4, !this.httpProviders[u4]) {
      const p5 = i3 || En3(`${this.name}:${u4}`, this.namespace, this.client.core.projectId);
      if (!p5)
        throw new Error(`No RPC url provided for chainId: ${u4}`);
      this.setHttpProvider(u4, p5);
    }
    this.events.emit(ot3.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);
  }
  getAccounts() {
    const u4 = this.namespace.accounts;
    return u4 ? [...new Set(u4.filter((i3) => i3.split(":")[1] === this.chainId.toString()).map((i3) => i3.split(":")[2]))] : [];
  }
  createHttpProviders() {
    const u4 = {};
    return this.namespace.chains.forEach((i3) => {
      var p5;
      u4[i3] = this.createHttpProvider(i3, (p5 = this.namespace.rpcMap) == null ? void 0 : p5[i3]);
    }), u4;
  }
  getHttpProvider() {
    const u4 = `${this.name}:${this.chainId}`, i3 = this.httpProviders[u4];
    if (typeof i3 > "u")
      throw new Error(`JSON-RPC provider for ${u4} not found`);
    return i3;
  }
  setHttpProvider(u4, i3) {
    const p5 = this.createHttpProvider(u4, i3);
    p5 && (this.httpProviders[u4] = p5);
  }
  createHttpProvider(u4, i3) {
    const p5 = i3 || En3(u4, this.namespace, this.client.core.projectId);
    return typeof p5 > "u" ? void 0 : new JsonRpcProvider2(new f(p5, J5("disableProviderPing")));
  }
};
var jg = class {
  constructor(u4) {
    this.name = "cip34", this.namespace = u4.namespace, this.events = J5("events"), this.client = J5("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
  }
  updateNamespace(u4) {
    this.namespace = Object.assign(this.namespace, u4);
  }
  requestAccounts() {
    return this.getAccounts();
  }
  getDefaultChain() {
    if (this.chainId)
      return this.chainId;
    if (this.namespace.defaultChain)
      return this.namespace.defaultChain;
    const u4 = this.namespace.chains[0];
    if (!u4)
      throw new Error("ChainId not found");
    return u4.split(":")[1];
  }
  request(u4) {
    return this.namespace.methods.includes(u4.request.method) ? this.client.request(u4) : this.getHttpProvider().request(u4.request);
  }
  setDefaultChain(u4, i3) {
    if (this.chainId = u4, !this.httpProviders[u4]) {
      const p5 = i3 || this.getCardanoRPCUrl(u4);
      if (!p5)
        throw new Error(`No RPC url provided for chainId: ${u4}`);
      this.setHttpProvider(u4, p5);
    }
    this.events.emit(ot3.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);
  }
  getAccounts() {
    const u4 = this.namespace.accounts;
    return u4 ? [...new Set(u4.filter((i3) => i3.split(":")[1] === this.chainId.toString()).map((i3) => i3.split(":")[2]))] : [];
  }
  createHttpProviders() {
    const u4 = {};
    return this.namespace.chains.forEach((i3) => {
      const p5 = this.getCardanoRPCUrl(i3);
      u4[i3] = this.createHttpProvider(i3, p5);
    }), u4;
  }
  getHttpProvider() {
    const u4 = `${this.name}:${this.chainId}`, i3 = this.httpProviders[u4];
    if (typeof i3 > "u")
      throw new Error(`JSON-RPC provider for ${u4} not found`);
    return i3;
  }
  getCardanoRPCUrl(u4) {
    const i3 = this.namespace.rpcMap;
    if (i3)
      return i3[u4];
  }
  setHttpProvider(u4, i3) {
    const p5 = this.createHttpProvider(u4, i3);
    p5 && (this.httpProviders[u4] = p5);
  }
  createHttpProvider(u4, i3) {
    const p5 = i3 || this.getCardanoRPCUrl(u4);
    return typeof p5 > "u" ? void 0 : new JsonRpcProvider2(new f(p5, J5("disableProviderPing")));
  }
};
var nv = class {
  constructor(u4) {
    this.name = "elrond", this.namespace = u4.namespace, this.events = J5("events"), this.client = J5("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
  }
  updateNamespace(u4) {
    this.namespace = Object.assign(this.namespace, u4);
  }
  requestAccounts() {
    return this.getAccounts();
  }
  request(u4) {
    return this.namespace.methods.includes(u4.request.method) ? this.client.request(u4) : this.getHttpProvider().request(u4.request);
  }
  setDefaultChain(u4, i3) {
    if (!this.httpProviders[u4]) {
      const p5 = i3 || En3(`${this.name}:${u4}`, this.namespace, this.client.core.projectId);
      if (!p5)
        throw new Error(`No RPC url provided for chainId: ${u4}`);
      this.setHttpProvider(u4, p5);
    }
    this.chainId = u4, this.events.emit(ot3.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);
  }
  getDefaultChain() {
    if (this.chainId)
      return this.chainId;
    if (this.namespace.defaultChain)
      return this.namespace.defaultChain;
    const u4 = this.namespace.chains[0];
    if (!u4)
      throw new Error("ChainId not found");
    return u4.split(":")[1];
  }
  getAccounts() {
    const u4 = this.namespace.accounts;
    return u4 ? [...new Set(u4.filter((i3) => i3.split(":")[1] === this.chainId.toString()).map((i3) => i3.split(":")[2]))] : [];
  }
  createHttpProviders() {
    const u4 = {};
    return this.namespace.chains.forEach((i3) => {
      var p5;
      u4[i3] = this.createHttpProvider(i3, (p5 = this.namespace.rpcMap) == null ? void 0 : p5[i3]);
    }), u4;
  }
  getHttpProvider() {
    const u4 = `${this.name}:${this.chainId}`, i3 = this.httpProviders[u4];
    if (typeof i3 > "u")
      throw new Error(`JSON-RPC provider for ${u4} not found`);
    return i3;
  }
  setHttpProvider(u4, i3) {
    const p5 = this.createHttpProvider(u4, i3);
    p5 && (this.httpProviders[u4] = p5);
  }
  createHttpProvider(u4, i3) {
    const p5 = i3 || En3(u4, this.namespace, this.client.core.projectId);
    return typeof p5 > "u" ? void 0 : new JsonRpcProvider2(new f(p5, J5("disableProviderPing")));
  }
};
var tv = class {
  constructor(u4) {
    this.name = "multiversx", this.namespace = u4.namespace, this.events = J5("events"), this.client = J5("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
  }
  updateNamespace(u4) {
    this.namespace = Object.assign(this.namespace, u4);
  }
  requestAccounts() {
    return this.getAccounts();
  }
  request(u4) {
    return this.namespace.methods.includes(u4.request.method) ? this.client.request(u4) : this.getHttpProvider().request(u4.request);
  }
  setDefaultChain(u4, i3) {
    if (!this.httpProviders[u4]) {
      const p5 = i3 || En3(`${this.name}:${u4}`, this.namespace, this.client.core.projectId);
      if (!p5)
        throw new Error(`No RPC url provided for chainId: ${u4}`);
      this.setHttpProvider(u4, p5);
    }
    this.chainId = u4, this.events.emit(ot3.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);
  }
  getDefaultChain() {
    if (this.chainId)
      return this.chainId;
    if (this.namespace.defaultChain)
      return this.namespace.defaultChain;
    const u4 = this.namespace.chains[0];
    if (!u4)
      throw new Error("ChainId not found");
    return u4.split(":")[1];
  }
  getAccounts() {
    const u4 = this.namespace.accounts;
    return u4 ? [...new Set(u4.filter((i3) => i3.split(":")[1] === this.chainId.toString()).map((i3) => i3.split(":")[2]))] : [];
  }
  createHttpProviders() {
    const u4 = {};
    return this.namespace.chains.forEach((i3) => {
      var p5;
      u4[i3] = this.createHttpProvider(i3, (p5 = this.namespace.rpcMap) == null ? void 0 : p5[i3]);
    }), u4;
  }
  getHttpProvider() {
    const u4 = `${this.name}:${this.chainId}`, i3 = this.httpProviders[u4];
    if (typeof i3 > "u")
      throw new Error(`JSON-RPC provider for ${u4} not found`);
    return i3;
  }
  setHttpProvider(u4, i3) {
    const p5 = this.createHttpProvider(u4, i3);
    p5 && (this.httpProviders[u4] = p5);
  }
  createHttpProvider(u4, i3) {
    const p5 = i3 || En3(u4, this.namespace, this.client.core.projectId);
    return typeof p5 > "u" ? void 0 : new JsonRpcProvider2(new f(p5, J5("disableProviderPing")));
  }
};
var ev = Object.defineProperty;
var rv = Object.defineProperties;
var iv = Object.getOwnPropertyDescriptors;
var Ra = Object.getOwnPropertySymbols;
var sv = Object.prototype.hasOwnProperty;
var uv = Object.prototype.propertyIsEnumerable;
var ba = (C5, u4, i3) => u4 in C5 ? ev(C5, u4, { enumerable: true, configurable: true, writable: true, value: i3 }) : C5[u4] = i3;
var cr2 = (C5, u4) => {
  for (var i3 in u4 || (u4 = {}))
    sv.call(u4, i3) && ba(C5, i3, u4[i3]);
  if (Ra)
    for (var i3 of Ra(u4))
      uv.call(u4, i3) && ba(C5, i3, u4[i3]);
  return C5;
};
var Fi2 = (C5, u4) => rv(C5, iv(u4));
var hr2 = class _hr {
  constructor(u4) {
    this.events = new import_events8.default(), this.rpcProviders = {}, this.shouldAbortPairingAttempt = false, this.maxPairingAttempts = 10, this.disableProviderPing = false, this.providerOpts = u4, this.logger = typeof (u4 == null ? void 0 : u4.logger) < "u" && typeof (u4 == null ? void 0 : u4.logger) != "string" ? u4.logger : (0, import_pino2.default)(k3({ level: (u4 == null ? void 0 : u4.logger) || Ca })), this.disableProviderPing = (u4 == null ? void 0 : u4.disableProviderPing) || false;
  }
  static async init(u4) {
    const i3 = new _hr(u4);
    return await i3.initialize(), i3;
  }
  async request(u4, i3) {
    const [p5, I2] = this.validateChain(i3);
    if (!this.session)
      throw new Error("Please call connect() before request()");
    return await this.getProvider(p5).request({ request: cr2({}, u4), chainId: `${p5}:${I2}`, topic: this.session.topic });
  }
  sendAsync(u4, i3, p5) {
    this.request(u4, p5).then((I2) => i3(null, I2)).catch((I2) => i3(I2, void 0));
  }
  async enable() {
    if (!this.client)
      throw new Error("Sign Client not initialized");
    return this.session || await this.connect({ namespaces: this.namespaces, optionalNamespaces: this.optionalNamespaces, sessionProperties: this.sessionProperties }), await this.requestAccounts();
  }
  async disconnect() {
    var u4;
    if (!this.session)
      throw new Error("Please call connect() before enable()");
    await this.client.disconnect({ topic: (u4 = this.session) == null ? void 0 : u4.topic, reason: w("USER_DISCONNECTED") }), await this.cleanup();
  }
  async connect(u4) {
    if (!this.client)
      throw new Error("Sign Client not initialized");
    if (this.setNamespaces(u4), await this.cleanupPendingPairings(), !u4.skipPairing)
      return await this.pair(u4.pairingTopic);
  }
  on(u4, i3) {
    this.events.on(u4, i3);
  }
  once(u4, i3) {
    this.events.once(u4, i3);
  }
  removeListener(u4, i3) {
    this.events.removeListener(u4, i3);
  }
  off(u4, i3) {
    this.events.off(u4, i3);
  }
  get isWalletConnect() {
    return true;
  }
  async pair(u4) {
    this.shouldAbortPairingAttempt = false;
    let i3 = 0;
    do {
      if (this.shouldAbortPairingAttempt)
        throw new Error("Pairing aborted");
      if (i3 >= this.maxPairingAttempts)
        throw new Error("Max auto pairing attempts reached");
      const { uri: p5, approval: I2 } = await this.client.connect({ pairingTopic: u4, requiredNamespaces: this.namespaces, optionalNamespaces: this.optionalNamespaces, sessionProperties: this.sessionProperties });
      p5 && (this.uri = p5, this.events.emit("display_uri", p5)), await I2().then((D4) => {
        this.session = D4, this.namespaces || (this.namespaces = Jg(D4.namespaces), this.persist("namespaces", this.namespaces));
      }).catch((D4) => {
        if (D4.message !== te3)
          throw D4;
        i3++;
      });
    } while (!this.session);
    return this.onConnect(), this.session;
  }
  setDefaultChain(u4, i3) {
    try {
      if (!this.session)
        return;
      const [p5, I2] = this.validateChain(u4);
      this.getProvider(p5).setDefaultChain(I2, i3);
    } catch (p5) {
      if (!/Please call connect/.test(p5.message))
        throw p5;
    }
  }
  async cleanupPendingPairings(u4 = {}) {
    this.logger.info("Cleaning up inactive pairings...");
    const i3 = this.client.pairing.getAll();
    if (C2(i3)) {
      for (const p5 of i3)
        u4.deletePairings ? this.client.core.expirer.set(p5.topic, 0) : await this.client.core.relayer.subscriber.unsubscribe(p5.topic);
      this.logger.info(`Inactive pairings cleared: ${i3.length}`);
    }
  }
  abortPairingAttempt() {
    this.shouldAbortPairingAttempt = true;
  }
  async checkStorage() {
    if (this.namespaces = await this.getFromStore("namespaces"), this.optionalNamespaces = await this.getFromStore("optionalNamespaces") || {}, this.client.session.length) {
      const u4 = this.client.session.keys.length - 1;
      this.session = this.client.session.get(this.client.session.keys[u4]), this.createProviders();
    }
  }
  async initialize() {
    this.logger.trace("Initialized"), await this.createClient(), await this.checkStorage(), this.registerEventListeners();
  }
  async createClient() {
    this.client = this.providerOpts.client || await M3.init({ logger: this.providerOpts.logger || Ca, relayUrl: this.providerOpts.relayUrl || Hg, projectId: this.providerOpts.projectId, metadata: this.providerOpts.metadata, storageOptions: this.providerOpts.storageOptions, name: this.providerOpts.name }), this.logger.trace("SignClient Initialized");
  }
  createProviders() {
    if (!this.client)
      throw new Error("Sign Client not initialized");
    if (!this.session)
      throw new Error("Session not initialized. Please call connect() before enable()");
    const u4 = [...new Set(Object.keys(this.session.namespaces).map((i3) => Ze(i3)))];
    Wi2("client", this.client), Wi2("events", this.events), Wi2("disableProviderPing", this.disableProviderPing), u4.forEach((i3) => {
      if (!this.session)
        return;
      const p5 = Kg(i3, this.session), I2 = ya(p5), D4 = Yg(this.namespaces, this.optionalNamespaces), F2 = Fi2(cr2({}, D4[i3]), { accounts: p5, chains: I2 });
      switch (i3) {
        case "eip155":
          this.rpcProviders[i3] = new Qg({ namespace: F2 });
          break;
        case "solana":
          this.rpcProviders[i3] = new Vg({ namespace: F2 });
          break;
        case "cosmos":
          this.rpcProviders[i3] = new kg({ namespace: F2 });
          break;
        case "polkadot":
          this.rpcProviders[i3] = new Xg({ namespace: F2 });
          break;
        case "cip34":
          this.rpcProviders[i3] = new jg({ namespace: F2 });
          break;
        case "elrond":
          this.rpcProviders[i3] = new nv({ namespace: F2 });
          break;
        case "multiversx":
          this.rpcProviders[i3] = new tv({ namespace: F2 });
          break;
      }
    });
  }
  registerEventListeners() {
    if (typeof this.client > "u")
      throw new Error("Sign Client is not initialized");
    this.client.on("session_ping", (u4) => {
      this.events.emit("session_ping", u4);
    }), this.client.on("session_event", (u4) => {
      const { params: i3 } = u4, { event: p5 } = i3;
      if (p5.name === "accountsChanged") {
        const I2 = p5.data;
        I2 && C2(I2) && this.events.emit("accountsChanged", I2.map(Zg));
      } else
        p5.name === "chainChanged" ? this.onChainChanged(i3.chainId) : this.events.emit(p5.name, p5.data);
      this.events.emit("session_event", u4);
    }), this.client.on("session_update", ({ topic: u4, params: i3 }) => {
      var p5;
      const { namespaces: I2 } = i3, D4 = (p5 = this.client) == null ? void 0 : p5.session.get(u4);
      this.session = Fi2(cr2({}, D4), { namespaces: I2 }), this.onSessionUpdate(), this.events.emit("session_update", { topic: u4, params: i3 });
    }), this.client.on("session_delete", async (u4) => {
      await this.cleanup(), this.events.emit("session_delete", u4), this.events.emit("disconnect", Fi2(cr2({}, w("USER_DISCONNECTED")), { data: u4.topic }));
    }), this.on(ot3.DEFAULT_CHAIN_CHANGED, (u4) => {
      this.onChainChanged(u4, true);
    });
  }
  getProvider(u4) {
    if (!this.rpcProviders[u4])
      throw new Error(`Provider not found: ${u4}`);
    return this.rpcProviders[u4];
  }
  onSessionUpdate() {
    Object.keys(this.rpcProviders).forEach((u4) => {
      var i3;
      this.getProvider(u4).updateNamespace((i3 = this.session) == null ? void 0 : i3.namespaces[u4]);
    });
  }
  setNamespaces(u4) {
    const { namespaces: i3, optionalNamespaces: p5, sessionProperties: I2 } = u4;
    i3 && Object.keys(i3).length && (this.namespaces = i3), p5 && Object.keys(p5).length && (this.optionalNamespaces = p5), this.sessionProperties = I2, this.persist("namespaces", i3), this.persist("optionalNamespaces", p5);
  }
  validateChain(u4) {
    const [i3, p5] = (u4 == null ? void 0 : u4.split(":")) || ["", ""];
    if (!this.namespaces || !Object.keys(this.namespaces).length)
      return [i3, p5];
    if (i3 && !Object.keys(this.namespaces || {}).map((F2) => Ze(F2)).includes(i3))
      throw new Error(`Namespace '${i3}' is not configured. Please call connect() first with namespace config.`);
    if (i3 && p5)
      return [i3, p5];
    const I2 = Ze(Object.keys(this.namespaces)[0]), D4 = this.rpcProviders[I2].getDefaultChain();
    return [I2, D4];
  }
  async requestAccounts() {
    const [u4] = this.validateChain();
    return await this.getProvider(u4).requestAccounts();
  }
  onChainChanged(u4, i3 = false) {
    var p5;
    if (!this.namespaces)
      return;
    const [I2, D4] = this.validateChain(u4);
    i3 || this.getProvider(I2).setDefaultChain(D4), ((p5 = this.namespaces[I2]) != null ? p5 : this.namespaces[`${I2}:${D4}`]).defaultChain = D4, this.persist("namespaces", this.namespaces), this.events.emit("chainChanged", D4);
  }
  onConnect() {
    this.createProviders(), this.events.emit("connect", { session: this.session });
  }
  async cleanup() {
    this.session = void 0, this.namespaces = void 0, this.optionalNamespaces = void 0, this.sessionProperties = void 0, this.persist("namespaces", void 0), this.persist("optionalNamespaces", void 0), this.persist("sessionProperties", void 0), await this.cleanupPendingPairings({ deletePairings: true });
  }
  persist(u4, i3) {
    this.client.core.storage.setItem(`${Ia}/${u4}`, i3);
  }
  async getFromStore(u4) {
    return await this.client.core.storage.getItem(`${Ia}/${u4}`);
  }
};
var av = hr2;

// node_modules/@walletconnect/ethereum-provider/dist/index.es.js
var P2 = "wc";
var S4 = "ethereum_provider";
var $3 = `${P2}@2:${S4}:`;
var j6 = "https://rpc.walletconnect.com/v1/";
var u3 = ["eth_sendTransaction", "personal_sign"];
var E4 = ["eth_accounts", "eth_requestAccounts", "eth_sendRawTransaction", "eth_sign", "eth_signTransaction", "eth_signTypedData", "eth_signTypedData_v3", "eth_signTypedData_v4", "wallet_switchEthereumChain", "wallet_addEthereumChain", "wallet_getPermissions", "wallet_requestPermissions", "wallet_registerOnboarding", "wallet_watchAsset", "wallet_scanQRCode"];
var m2 = ["chainChanged", "accountsChanged"];
var _4 = ["message", "disconnect", "connect"];
var N13 = Object.defineProperty;
var q3 = Object.defineProperties;
var D3 = Object.getOwnPropertyDescriptors;
var y4 = Object.getOwnPropertySymbols;
var U4 = Object.prototype.hasOwnProperty;
var Q4 = Object.prototype.propertyIsEnumerable;
var O6 = (a2, t, s2) => t in a2 ? N13(a2, t, { enumerable: true, configurable: true, writable: true, value: s2 }) : a2[t] = s2;
var p4 = (a2, t) => {
  for (var s2 in t || (t = {}))
    U4.call(t, s2) && O6(a2, s2, t[s2]);
  if (y4)
    for (var s2 of y4(t))
      Q4.call(t, s2) && O6(a2, s2, t[s2]);
  return a2;
};
var M4 = (a2, t) => q3(a2, D3(t));
function g4(a2) {
  return Number(a2[0].split(":")[1]);
}
function f4(a2) {
  return `0x${a2.toString(16)}`;
}
function L3(a2) {
  const { chains: t, optionalChains: s2, methods: i3, optionalMethods: n3, events: e, optionalEvents: h4, rpcMap: c4 } = a2;
  if (!C2(t))
    throw new Error("Invalid chains");
  const o = { chains: t, methods: i3 || u3, events: e || m2, rpcMap: p4({}, t.length ? { [g4(t)]: c4[g4(t)] } : {}) }, r2 = e == null ? void 0 : e.filter((l3) => !m2.includes(l3)), d3 = i3 == null ? void 0 : i3.filter((l3) => !u3.includes(l3));
  if (!s2 && !h4 && !n3 && !(r2 != null && r2.length) && !(d3 != null && d3.length))
    return { required: t.length ? o : void 0 };
  const C5 = (r2 == null ? void 0 : r2.length) && (d3 == null ? void 0 : d3.length) || !s2, I2 = { chains: [...new Set(C5 ? o.chains.concat(s2 || []) : s2)], methods: [...new Set(o.methods.concat(n3 != null && n3.length ? n3 : E4))], events: [...new Set(o.events.concat(h4 || _4))], rpcMap: c4 };
  return { required: t.length ? o : void 0, optional: s2.length ? I2 : void 0 };
}
var v2 = class _v {
  constructor() {
    this.events = new import_events9.EventEmitter(), this.namespace = "eip155", this.accounts = [], this.chainId = 1, this.STORAGE_KEY = $3, this.on = (t, s2) => (this.events.on(t, s2), this), this.once = (t, s2) => (this.events.once(t, s2), this), this.removeListener = (t, s2) => (this.events.removeListener(t, s2), this), this.off = (t, s2) => (this.events.off(t, s2), this), this.parseAccount = (t) => this.isCompatibleChainId(t) ? this.parseAccountId(t).address : t, this.signer = {}, this.rpc = {};
  }
  static async init(t) {
    const s2 = new _v();
    return await s2.initialize(t), s2;
  }
  async request(t) {
    return await this.signer.request(t, this.formatChainId(this.chainId));
  }
  sendAsync(t, s2) {
    this.signer.sendAsync(t, s2, this.formatChainId(this.chainId));
  }
  get connected() {
    return this.signer.client ? this.signer.client.core.relayer.connected : false;
  }
  get connecting() {
    return this.signer.client ? this.signer.client.core.relayer.connecting : false;
  }
  async enable() {
    return this.session || await this.connect(), await this.request({ method: "eth_requestAccounts" });
  }
  async connect(t) {
    if (!this.signer.client)
      throw new Error("Provider not initialized. Call init() first");
    this.loadConnectOpts(t);
    const { required: s2, optional: i3 } = L3(this.rpc);
    try {
      const n3 = await new Promise(async (h4, c4) => {
        var o;
        this.rpc.showQrModal && ((o = this.modal) == null || o.subscribeModal((r2) => {
          !r2.open && !this.signer.session && (this.signer.abortPairingAttempt(), c4(new Error("Connection request reset. Please try again.")));
        })), await this.signer.connect(M4(p4({ namespaces: p4({}, s2 && { [this.namespace]: s2 }) }, i3 && { optionalNamespaces: { [this.namespace]: i3 } }), { pairingTopic: t == null ? void 0 : t.pairingTopic })).then((r2) => {
          h4(r2);
        }).catch((r2) => {
          c4(new Error(r2.message));
        });
      });
      if (!n3)
        return;
      this.setChainIds(this.rpc.chains);
      const e = On(n3.namespaces, [this.namespace]);
      this.setAccounts(e), this.events.emit("connect", { chainId: f4(this.chainId) });
    } catch (n3) {
      throw this.signer.logger.error(n3), n3;
    } finally {
      this.modal && this.modal.closeModal();
    }
  }
  async disconnect() {
    this.session && await this.signer.disconnect(), this.reset();
  }
  get isWalletConnect() {
    return true;
  }
  get session() {
    return this.signer.session;
  }
  registerEventListeners() {
    this.signer.on("session_event", (t) => {
      const { params: s2 } = t, { event: i3 } = s2;
      i3.name === "accountsChanged" ? (this.accounts = this.parseAccounts(i3.data), this.events.emit("accountsChanged", this.accounts)) : i3.name === "chainChanged" ? this.setChainId(this.formatChainId(i3.data)) : this.events.emit(i3.name, i3.data), this.events.emit("session_event", t);
    }), this.signer.on("chainChanged", (t) => {
      const s2 = parseInt(t);
      this.chainId = s2, this.events.emit("chainChanged", f4(this.chainId)), this.persist();
    }), this.signer.on("session_update", (t) => {
      this.events.emit("session_update", t);
    }), this.signer.on("session_delete", (t) => {
      this.reset(), this.events.emit("session_delete", t), this.events.emit("disconnect", M4(p4({}, w("USER_DISCONNECTED")), { data: t.topic, name: "USER_DISCONNECTED" }));
    }), this.signer.on("display_uri", (t) => {
      var s2, i3;
      this.rpc.showQrModal && ((s2 = this.modal) == null || s2.closeModal(), (i3 = this.modal) == null || i3.openModal({ uri: t })), this.events.emit("display_uri", t);
    });
  }
  switchEthereumChain(t) {
    this.request({ method: "wallet_switchEthereumChain", params: [{ chainId: t.toString(16) }] });
  }
  isCompatibleChainId(t) {
    return typeof t == "string" ? t.startsWith(`${this.namespace}:`) : false;
  }
  formatChainId(t) {
    return `${this.namespace}:${t}`;
  }
  parseChainId(t) {
    return Number(t.split(":")[1]);
  }
  setChainIds(t) {
    const s2 = t.filter((i3) => this.isCompatibleChainId(i3)).map((i3) => this.parseChainId(i3));
    s2.length && (this.chainId = s2[0], this.events.emit("chainChanged", f4(this.chainId)), this.persist());
  }
  setChainId(t) {
    if (this.isCompatibleChainId(t)) {
      const s2 = this.parseChainId(t);
      this.chainId = s2, this.switchEthereumChain(s2);
    }
  }
  parseAccountId(t) {
    const [s2, i3, n3] = t.split(":");
    return { chainId: `${s2}:${i3}`, address: n3 };
  }
  setAccounts(t) {
    this.accounts = t.filter((s2) => this.parseChainId(this.parseAccountId(s2).chainId) === this.chainId).map((s2) => this.parseAccountId(s2).address), this.events.emit("accountsChanged", this.accounts);
  }
  getRpcConfig(t) {
    var s2, i3;
    const n3 = (s2 = t == null ? void 0 : t.chains) != null ? s2 : [], e = (i3 = t == null ? void 0 : t.optionalChains) != null ? i3 : [], h4 = n3.concat(e);
    if (!h4.length)
      throw new Error("No chains specified in either `chains` or `optionalChains`");
    const c4 = n3.length ? (t == null ? void 0 : t.methods) || u3 : [], o = n3.length ? (t == null ? void 0 : t.events) || m2 : [], r2 = (t == null ? void 0 : t.optionalMethods) || [], d3 = (t == null ? void 0 : t.optionalEvents) || [], C5 = (t == null ? void 0 : t.rpcMap) || this.buildRpcMap(h4, t.projectId), I2 = (t == null ? void 0 : t.qrModalOptions) || void 0;
    return { chains: n3 == null ? void 0 : n3.map((l3) => this.formatChainId(l3)), optionalChains: e.map((l3) => this.formatChainId(l3)), methods: c4, events: o, optionalMethods: r2, optionalEvents: d3, rpcMap: C5, showQrModal: !!(t != null && t.showQrModal), qrModalOptions: I2, projectId: t.projectId, metadata: t.metadata };
  }
  buildRpcMap(t, s2) {
    const i3 = {};
    return t.forEach((n3) => {
      i3[n3] = this.getRpcUrl(n3, s2);
    }), i3;
  }
  async initialize(t) {
    if (this.rpc = this.getRpcConfig(t), this.chainId = this.rpc.chains.length ? g4(this.rpc.chains) : g4(this.rpc.optionalChains), this.signer = await av.init({ projectId: this.rpc.projectId, metadata: this.rpc.metadata, disableProviderPing: t.disableProviderPing, relayUrl: t.relayUrl, storageOptions: t.storageOptions }), this.registerEventListeners(), await this.loadPersistedSession(), this.rpc.showQrModal) {
      let s2;
      try {
        const { WalletConnectModal: i3 } = await import("./dist-CKKD3W4T.js");
        s2 = i3;
      } catch {
        throw new Error("To use QR modal, please install @walletconnect/modal package");
      }
      if (s2)
        try {
          this.modal = new s2(p4({ walletConnectVersion: 2, projectId: this.rpc.projectId, standaloneChains: this.rpc.chains }, this.rpc.qrModalOptions));
        } catch (i3) {
          throw this.signer.logger.error(i3), new Error("Could not generate WalletConnectModal Instance");
        }
    }
  }
  loadConnectOpts(t) {
    if (!t)
      return;
    const { chains: s2, optionalChains: i3, rpcMap: n3 } = t;
    s2 && C2(s2) && (this.rpc.chains = s2.map((e) => this.formatChainId(e)), s2.forEach((e) => {
      this.rpc.rpcMap[e] = (n3 == null ? void 0 : n3[e]) || this.getRpcUrl(e);
    })), i3 && C2(i3) && (this.rpc.optionalChains = [], this.rpc.optionalChains = i3 == null ? void 0 : i3.map((e) => this.formatChainId(e)), i3.forEach((e) => {
      this.rpc.rpcMap[e] = (n3 == null ? void 0 : n3[e]) || this.getRpcUrl(e);
    }));
  }
  getRpcUrl(t, s2) {
    var i3;
    return ((i3 = this.rpc.rpcMap) == null ? void 0 : i3[t]) || `${j6}?chainId=eip155:${t}&projectId=${s2 || this.rpc.projectId}`;
  }
  async loadPersistedSession() {
    if (!this.session)
      return;
    const t = await this.signer.client.core.storage.getItem(`${this.STORAGE_KEY}/chainId`), s2 = this.session.namespaces[`${this.namespace}:${t}`] ? this.session.namespaces[`${this.namespace}:${t}`] : this.session.namespaces[this.namespace];
    this.setChainIds(t ? [this.formatChainId(t)] : s2 == null ? void 0 : s2.accounts), this.setAccounts(s2 == null ? void 0 : s2.accounts);
  }
  reset() {
    this.chainId = 1, this.accounts = [];
  }
  persist() {
    this.session && this.signer.client.core.storage.setItem(`${this.STORAGE_KEY}/chainId`, this.chainId);
  }
  parseAccounts(t) {
    return typeof t == "string" || t instanceof String ? [this.parseAccount(t)] : t.map((s2) => this.parseAccount(s2));
  }
};
var G3 = v2;
export {
  G3 as EthereumProvider,
  _4 as OPTIONAL_EVENTS,
  E4 as OPTIONAL_METHODS,
  m2 as REQUIRED_EVENTS,
  u3 as REQUIRED_METHODS,
  v2 as default
};
/*! Bundled license information:

tslib/tslib.es6.js:
  (*! *****************************************************************************
  Copyright (c) Microsoft Corporation.
  
  Permission to use, copy, modify, and/or distribute this software for any
  purpose with or without fee is hereby granted.
  
  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  PERFORMANCE OF THIS SOFTWARE.
  ***************************************************************************** *)

tslib/tslib.es6.js:
  (*! *****************************************************************************
  Copyright (c) Microsoft Corporation.
  
  Permission to use, copy, modify, and/or distribute this software for any
  purpose with or without fee is hereby granted.
  
  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  PERFORMANCE OF THIS SOFTWARE.
  ***************************************************************************** *)

@walletconnect/relay-auth/dist/index.es.js:
  (*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) *)
  (*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) *)

@walletconnect/universal-provider/dist/index.es.js:
  (**
  * @license
  * Lodash <https://lodash.com/>
  * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
  * Released under MIT license <https://lodash.com/license>
  * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
  * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
  *)
*/
//# sourceMappingURL=index.es-6CCTWA47.js.map
